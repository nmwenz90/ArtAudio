{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Multiply two incoming signals. Or, if a number is given in the constructor,\n * multiplies the incoming signal by that value.\n *\n * @example\n * // multiply two signals\n * const mult = new Tone.Multiply();\n * const sigA = new Tone.Signal(3);\n * const sigB = new Tone.Signal(4);\n * sigA.connect(mult);\n * sigB.connect(mult.factor);\n * // output of mult is 12.\n * @example\n * // multiply a signal and a number\n * const mult = new Tone.Multiply(10);\n * const sig = new Tone.Signal(2).connect(mult);\n * // the output of mult is 20.\n * @category Signal\n */\n\nexport var Multiply = /*#__PURE__*/function (_Signal) {\n  _inherits(Multiply, _Signal);\n\n  var _super = _createSuper(Multiply);\n\n  function Multiply() {\n    var _this;\n\n    _classCallCheck(this, Multiply);\n\n    _this = _super.call(this, Object.assign(optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"])));\n    _this.name = \"Multiply\";\n    /**\n     * Indicates if the value should be overridden on connection\n     */\n\n    _this.override = false;\n    var options = optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]);\n    _this._mult = _this.input = _this.output = new Gain({\n      context: _this.context,\n      minValue: options.minValue,\n      maxValue: options.maxValue\n    });\n    _this.factor = _this._param = _this._mult.gain;\n\n    _this.factor.setValueAtTime(options.value, 0);\n\n    return _this;\n  }\n\n  _createClass(Multiply, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Multiply.prototype), \"dispose\", this).call(this);\n\n      this._mult.dispose();\n\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(Signal.getDefaults(), {\n        value: 0\n      });\n    }\n  }]);\n\n  return Multiply;\n}(Signal);","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,IAAT,QAAqB,sBAArB;AAEA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,MAAT,QAAsC,UAAtC;AAGA;;;;;;;;;;;;;;;;;;;;AAmBA,WAAaC,QAAb;AAAA;;AAAA;;AAkCC;AAAA;;AAAA;;AACC,8BAAMC,MAAM,CAACC,MAAP,CAAcJ,oBAAoB,CAACE,QAAQ,CAACG,WAAT,EAAD,EAAyBC,SAAzB,EAAoC,CAAC,OAAD,CAApC,CAAlC,CAAN;AAjCQ,iBAAe,UAAf;AAET;;;;AAGS,qBAAW,KAAX;AA6BR,QAAMC,OAAO,GAAGP,oBAAoB,CAACE,QAAQ,CAACG,WAAT,EAAD,EAAyBC,SAAzB,EAAoC,CAAC,OAAD,CAApC,CAApC;AAEA,UAAKE,KAAL,GAAa,MAAKC,KAAL,GAAa,MAAKC,MAAL,GAAc,IAAIX,IAAJ,CAAS;AAChDY,aAAO,EAAE,MAAKA,OADkC;AAEhDC,cAAQ,EAAEL,OAAO,CAACK,QAF8B;AAGhDC,cAAQ,EAAEN,OAAO,CAACM;AAH8B,KAAT,CAAxC;AAMA,UAAKC,MAAL,GAAc,MAAKC,MAAL,GAAc,MAAKP,KAAL,CAAWQ,IAAvC;;AACA,UAAKF,MAAL,CAAYG,cAAZ,CAA2BV,OAAO,CAACW,KAAnC,EAA0C,CAA1C;;AAXD;AAYC;;AA9CF;AAAA;AAAA,WAsDC,mBAAO;AACN;;AACA,WAAKV,KAAL,CAAWW,OAAX;;AACA,aAAO,IAAP;AACA;AA1DF;AAAA;AAAA,WAgDC,uBAAkB;AACjB,aAAOhB,MAAM,CAACC,MAAP,CAAcH,MAAM,CAACI,WAAP,EAAd,EAAoC;AAC1Ca,aAAK,EAAE;AADmC,OAApC,CAAP;AAGA;AApDF;;AAAA;AAAA,EAAiFjB,MAAjF","names":["Gain","optionsFromArguments","Signal","Multiply","Object","assign","getDefaults","arguments","options","_mult","input","output","context","minValue","maxValue","factor","_param","gain","setValueAtTime","value","dispose"],"sourceRoot":"","sources":["../../../Tone/signal/Multiply.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}