{"ast":null,"code":"import { AudioContext as stdAudioContext, AudioWorkletNode as stdAudioWorkletNode, OfflineAudioContext as stdOfflineAudioContext } from \"standardized-audio-context\";\nimport { assert } from \"../util/Debug\";\nimport { isDefined } from \"../util/TypeCheck\";\n/**\n * Create a new AudioContext\n */\n\nexport function createAudioContext(options) {\n  return new stdAudioContext(options);\n}\n/**\n * Create a new OfflineAudioContext\n */\n\nexport function createOfflineAudioContext(channels, length, sampleRate) {\n  return new stdOfflineAudioContext(channels, length, sampleRate);\n}\n/**\n * A reference to the window object\n * @hidden\n */\n\nexport var theWindow = typeof self === \"object\" ? self : null;\n/**\n * If the browser has a window object which has an AudioContext\n * @hidden\n */\n\nexport var hasAudioContext = theWindow && (theWindow.hasOwnProperty(\"AudioContext\") || theWindow.hasOwnProperty(\"webkitAudioContext\"));\nexport function createAudioWorkletNode(context, name, options) {\n  assert(isDefined(stdAudioWorkletNode), \"This node only works in a secure context (https or localhost)\"); // @ts-ignore\n\n  return new stdAudioWorkletNode(context, name, options);\n}\n/**\n * This promise resolves to a boolean which indicates if the\n * functionality is supported within the currently used browse.\n * Taken from [standardized-audio-context](https://github.com/chrisguttandin/standardized-audio-context#issupported)\n */\n\nexport { isSupported as supported } from \"standardized-audio-context\";","map":{"version":3,"mappings":"AAAA,SACCA,YAAY,IAAIC,eADjB,EAECC,gBAAgB,IAAIC,mBAFrB,EAGCC,mBAAmB,IAAIC,sBAHxB,QAIO,4BAJP;AAKA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAEA;;;;AAGA,OAAM,SAAUC,kBAAV,CAA6BC,OAA7B,EAA0D;AAC/D,SAAO,IAAIR,eAAJ,CAAoBQ,OAApB,CAAP;AACA;AAED;;;;AAGA,OAAM,SAAUC,yBAAV,CAAoCC,QAApC,EAAsDC,MAAtD,EAAsEC,UAAtE,EAAwF;AAC7F,SAAO,IAAIR,sBAAJ,CAA2BM,QAA3B,EAAqCC,MAArC,EAA6CC,UAA7C,CAAP;AACA;AAeD;;;;;AAIA,OAAO,IAAMC,SAAS,GAAsB,OAAOC,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkC,IAAvE;AAEP;;;;;AAIA,OAAO,IAAMC,eAAe,GAAGF,SAAS,KACtCA,SAAS,CAACG,cAAV,CAAyB,cAAzB,KAA4CH,SAAS,CAACG,cAAV,CAAyB,oBAAzB,CADN,CAAjC;AAGP,OAAM,SAAUC,sBAAV,CAAiCC,OAAjC,EAA2DC,IAA3D,EAAyEX,OAAzE,EAAmH;AACxHH,QAAM,CAACC,SAAS,CAACJ,mBAAD,CAAV,EAAiC,+DAAjC,CAAN,CADwH,CAExH;;AACA,SAAO,IAAIA,mBAAJ,CAAwBgB,OAAxB,EAAiCC,IAAjC,EAAuCX,OAAvC,CAAP;AACA;AAED;;;;;;AAKA,SAASY,WAAW,IAAIC,SAAxB,QAAyC,4BAAzC","names":["AudioContext","stdAudioContext","AudioWorkletNode","stdAudioWorkletNode","OfflineAudioContext","stdOfflineAudioContext","assert","isDefined","createAudioContext","options","createOfflineAudioContext","channels","length","sampleRate","theWindow","self","hasAudioContext","hasOwnProperty","createAudioWorkletNode","context","name","isSupported","supported"],"sourceRoot":"","sources":["../../../../Tone/core/context/AudioContext.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}