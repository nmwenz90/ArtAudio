{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { StereoFeedbackEffect } from \"../effect/StereoFeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Chorus is a stereo chorus effect composed of a left and right delay with an [[LFO]] applied to the delayTime of each channel.\n * When [[feedback]] is set to a value larger than 0, you also get Flanger-type effects.\n * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n * Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n *\n * @example\n * const chorus = new Tone.Chorus(4, 2.5, 0.5).toDestination().start();\n * const synth = new Tone.PolySynth().connect(chorus);\n * synth.triggerAttackRelease([\"C3\", \"E3\", \"G3\"], \"8n\");\n *\n * @category Effect\n */\n\nexport var Chorus = /*#__PURE__*/function (_StereoFeedbackEffect) {\n  _inherits(Chorus, _StereoFeedbackEffect);\n\n  var _super = _createSuper(Chorus);\n\n  function Chorus() {\n    var _this;\n\n    _classCallCheck(this, Chorus);\n\n    _this = _super.call(this, optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"]));\n    _this.name = \"Chorus\";\n    var options = optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"]);\n    _this._depth = options.depth;\n    _this._delayTime = options.delayTime / 1000;\n    _this._lfoL = new LFO({\n      context: _this.context,\n      frequency: options.frequency,\n      min: 0,\n      max: 1\n    });\n    _this._lfoR = new LFO({\n      context: _this.context,\n      frequency: options.frequency,\n      min: 0,\n      max: 1,\n      phase: 180\n    });\n    _this._delayNodeL = new Delay({\n      context: _this.context\n    });\n    _this._delayNodeR = new Delay({\n      context: _this.context\n    });\n    _this.frequency = _this._lfoL.frequency;\n    readOnly(_assertThisInitialized(_this), [\"frequency\"]); // have one LFO frequency control the other\n\n    _this._lfoL.frequency.connect(_this._lfoR.frequency); // connections\n\n\n    _this.connectEffectLeft(_this._delayNodeL);\n\n    _this.connectEffectRight(_this._delayNodeR); // lfo setup\n\n\n    _this._lfoL.connect(_this._delayNodeL.delayTime);\n\n    _this._lfoR.connect(_this._delayNodeR.delayTime); // set the initial values\n\n\n    _this.depth = _this._depth;\n    _this.type = options.type;\n    _this.spread = options.spread;\n    return _this;\n  }\n\n  _createClass(Chorus, [{\n    key: \"depth\",\n    get:\n    /**\n     * The depth of the effect. A depth of 1 makes the delayTime\n     * modulate between 0 and 2*delayTime (centered around the delayTime).\n     */\n    function get() {\n      return this._depth;\n    },\n    set: function set(depth) {\n      this._depth = depth;\n      var deviation = this._delayTime * depth;\n      this._lfoL.min = Math.max(this._delayTime - deviation, 0);\n      this._lfoL.max = this._delayTime + deviation;\n      this._lfoR.min = Math.max(this._delayTime - deviation, 0);\n      this._lfoR.max = this._delayTime + deviation;\n    }\n    /**\n     * The delayTime in milliseconds of the chorus. A larger delayTime\n     * will give a more pronounced effect. Nominal range a delayTime\n     * is between 2 and 20ms.\n     */\n\n  }, {\n    key: \"delayTime\",\n    get: function get() {\n      return this._delayTime * 1000;\n    },\n    set: function set(delayTime) {\n      this._delayTime = delayTime / 1000;\n      this.depth = this._depth;\n    }\n    /**\n     * The oscillator type of the LFO.\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._lfoL.type;\n    },\n    set: function set(type) {\n      this._lfoL.type = type;\n      this._lfoR.type = type;\n    }\n    /**\n     * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n     * When set to 180, LFO's will be panned hard left and right respectively.\n     */\n\n  }, {\n    key: \"spread\",\n    get: function get() {\n      return this._lfoR.phase - this._lfoL.phase;\n    },\n    set: function set(spread) {\n      this._lfoL.phase = 90 - spread / 2;\n      this._lfoR.phase = spread / 2 + 90;\n    }\n    /**\n     * Start the effect.\n     */\n\n  }, {\n    key: \"start\",\n    value: function start(time) {\n      this._lfoL.start(time);\n\n      this._lfoR.start(time);\n\n      return this;\n    }\n    /**\n     * Stop the lfo\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop(time) {\n      this._lfoL.stop(time);\n\n      this._lfoR.stop(time);\n\n      return this;\n    }\n    /**\n     * Sync the filter to the transport. See [[LFO.sync]]\n     */\n\n  }, {\n    key: \"sync\",\n    value: function sync() {\n      this._lfoL.sync();\n\n      this._lfoR.sync();\n\n      return this;\n    }\n    /**\n     * Unsync the filter from the transport.\n     */\n\n  }, {\n    key: \"unsync\",\n    value: function unsync() {\n      this._lfoL.unsync();\n\n      this._lfoR.unsync();\n\n      return this;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Chorus.prototype), \"dispose\", this).call(this);\n\n      this._lfoL.dispose();\n\n      this._lfoR.dispose();\n\n      this._delayNodeL.dispose();\n\n      this._delayNodeR.dispose();\n\n      this.frequency.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(StereoFeedbackEffect.getDefaults(), {\n        frequency: 1.5,\n        delayTime: 3.5,\n        depth: 0.7,\n        type: \"sine\",\n        spread: 180,\n        feedback: 0,\n        wet: 0.5\n      });\n    }\n  }]);\n\n  return Chorus;\n}(StereoFeedbackEffect);","map":{"version":3,"mappings":"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","names":["StereoFeedbackEffect","optionsFromArguments","LFO","Delay","readOnly","Chorus","getDefaults","arguments","options","_depth","depth","_delayTime","delayTime","_lfoL","context","frequency","min","max","_lfoR","phase","_delayNodeL","_delayNodeR","connect","connectEffectLeft","connectEffectRight","type","spread","deviation","Math","time","start","stop","sync","unsync","dispose","Object","assign","feedback","wet"],"sourceRoot":"","sources":["../../../Tone/effect/Chorus.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}