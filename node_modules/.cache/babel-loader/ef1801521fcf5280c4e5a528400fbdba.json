{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nexport var createAudioDestinationNodeConstructor = function createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(AudioDestinationNode, _audioNodeConstructor);\n\n    var _super = _createSuper(AudioDestinationNode);\n\n    function AudioDestinationNode(context, channelCount) {\n      var _this;\n\n      _classCallCheck(this, AudioDestinationNode);\n\n      var nativeContext = getNativeContext(context);\n      var isOffline = isNativeOfflineAudioContext(nativeContext);\n      var nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n      var audioDestinationNodeRenderer = isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null;\n      _this = _super.call(this, context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n      _this._isNodeOfNativeOfflineAudioContext = isOffline;\n      _this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n      return _this;\n    }\n\n    _createClass(AudioDestinationNode, [{\n      key: \"channelCount\",\n      get: function get() {\n        return this._nativeAudioDestinationNode.channelCount;\n      },\n      set: function set(value) {\n        // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.\n        // Bug #54: Firefox does throw an IndexSizeError.\n        if (this._isNodeOfNativeOfflineAudioContext) {\n          throw createInvalidStateError();\n        } // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n\n\n        if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n          throw createIndexSizeError();\n        }\n\n        this._nativeAudioDestinationNode.channelCount = value;\n      }\n    }, {\n      key: \"channelCountMode\",\n      get: function get() {\n        return this._nativeAudioDestinationNode.channelCountMode;\n      },\n      set: function set(value) {\n        // Bug #53: No browser does throw an exception yet.\n        if (this._isNodeOfNativeOfflineAudioContext) {\n          throw createInvalidStateError();\n        }\n\n        this._nativeAudioDestinationNode.channelCountMode = value;\n      }\n    }, {\n      key: \"maxChannelCount\",\n      get: function get() {\n        return this._nativeAudioDestinationNode.maxChannelCount;\n      }\n    }]);\n\n    return AudioDestinationNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"mappings":";;;;AASA,OAAO,IAAMA,qCAAqC,GAA4C,SAAjFA,qCAAiF,CAC1FC,oBAD0F,EAE1FC,kCAF0F,EAG1FC,oBAH0F,EAI1FC,uBAJ0F,EAK1FC,gCAL0F,EAM1FC,gBAN0F,EAO1FC,2BAP0F,EAQ1FC,uBAR0F,EAS1F;AACA;AAAA;;AAAA;;AAKI,kCAAYC,OAAZ,EAAwBC,YAAxB,EAA4C;AAAA;;AAAA;;AACxC,UAAMC,aAAa,GAAGL,gBAAgB,CAACG,OAAD,CAAtC;AACA,UAAMG,SAAS,GAAGL,2BAA2B,CAACI,aAAD,CAA7C;AACA,UAAME,0BAA0B,GAAGR,gCAAgC,CAACM,aAAD,EAAgBD,YAAhB,EAA8BE,SAA9B,CAAnE;AACA,UAAME,4BAA4B,GAC7BF,SAAS,GAAGV,kCAAkC,CAACM,uBAAD,CAArC,GAAiE,IAD/E;AAIA,gCAAMC,OAAN,EAAe,KAAf,EAAsBI,0BAAtB,EAAkDC,4BAAlD;AAEA,YAAKC,kCAAL,GAA0CH,SAA1C;AACA,YAAKI,2BAAL,GAAmCH,0BAAnC;AAXwC;AAY3C;;AAjBL;AAAA;AAAA,WAmBI,eAAgB;AACZ,eAAO,KAAKG,2BAAL,CAAiCN,YAAxC;AACH,OArBL;AAAA,WAuBI,aAAiBO,KAAjB,EAAsB;AAClB;AACA;AACA,YAAI,KAAKF,kCAAT,EAA6C;AACzC,gBAAMX,uBAAuB,EAA7B;AACH,SALiB,CAOlB;;;AACA,YAAIa,KAAK,GAAG,KAAKD,2BAAL,CAAiCE,eAA7C,EAA8D;AAC1D,gBAAMf,oBAAoB,EAA1B;AACH;;AAED,aAAKa,2BAAL,CAAiCN,YAAjC,GAAgDO,KAAhD;AACH;AApCL;AAAA;AAAA,WAsCI,eAAoB;AAChB,eAAO,KAAKD,2BAAL,CAAiCG,gBAAxC;AACH,OAxCL;AAAA,WA0CI,aAAqBF,KAArB,EAA0B;AACtB;AACA,YAAI,KAAKF,kCAAT,EAA6C;AACzC,gBAAMX,uBAAuB,EAA7B;AACH;;AAED,aAAKY,2BAAL,CAAiCG,gBAAjC,GAAoDF,KAApD;AACH;AAjDL;AAAA;AAAA,WAmDI,eAAmB;AACf,eAAO,KAAKD,2BAAL,CAAiCE,eAAxC;AACH;AArDL;;AAAA;AAAA,IAA8DjB,oBAA9D;AAuDH,CAjEM","names":["createAudioDestinationNodeConstructor","audioNodeConstructor","createAudioDestinationNodeRenderer","createIndexSizeError","createInvalidStateError","createNativeAudioDestinationNode","getNativeContext","isNativeOfflineAudioContext","renderInputsOfAudioNode","context","channelCount","nativeContext","isOffline","nativeAudioDestinationNode","audioDestinationNodeRenderer","_isNodeOfNativeOfflineAudioContext","_nativeAudioDestinationNode","value","maxChannelCount","channelCountMode"],"sourceRoot":"","sources":["../../../src/factories/audio-destination-node-constructor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}