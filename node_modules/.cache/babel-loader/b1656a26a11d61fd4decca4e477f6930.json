{"ast":null,"code":"import _asyncToGenerator from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\";\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport var createOscillatorNodeRendererFactory = function createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {\n  return function () {\n    var renderedNativeOscillatorNodes = new WeakMap();\n    var periodicWave = null;\n    var start = null;\n    var stop = null;\n\n    var createOscillatorNode = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(proxy, nativeOfflineAudioContext) {\n        var nativeOscillatorNode, nativeOscillatorNodeIsOwnedByContext, options;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                nativeOscillatorNode = getNativeAudioNode(proxy); // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n                nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n\n                if (!nativeOscillatorNodeIsOwnedByContext) {\n                  options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: periodicWave === null ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                  };\n                  nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n\n                  if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                  }\n\n                  if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                  }\n                }\n\n                renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n\n                if (nativeOscillatorNodeIsOwnedByContext) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.next = 7;\n                return renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n\n              case 7:\n                _context.next = 9;\n                return renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n\n              case 9:\n                _context.next = 15;\n                break;\n\n              case 11:\n                _context.next = 13;\n                return connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n\n              case 13:\n                _context.next = 15;\n                return connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n\n              case 15:\n                _context.next = 17;\n                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode);\n\n              case 17:\n                return _context.abrupt(\"return\", nativeOscillatorNode);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function createOscillatorNode(_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return {\n      set periodicWave(value) {\n        periodicWave = value;\n      },\n\n      set start(value) {\n        start = value;\n      },\n\n      set stop(value) {\n        stop = value;\n      },\n\n      render: function render(proxy, nativeOfflineAudioContext) {\n        var renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeOscillatorNode !== undefined) {\n          return Promise.resolve(renderedNativeOscillatorNode);\n        }\n\n        return createOscillatorNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};","map":{"version":3,"mappings":";;AAAA,SAASA,gBAAT,QAAiC,gCAAjC;AAIA,OAAO,IAAMC,mCAAmC,GAA0C,SAA7EA,mCAA6E,CACtFC,iBADsF,EAEtFC,0BAFsF,EAGtFC,kBAHsF,EAItFC,gBAJsF,EAKtFC,uBALsF,EAMtF;AACA,SAAO,YAAmE;AACtE,QAAMC,6BAA6B,GAAG,IAAIC,OAAJ,EAAtC;AAEA,QAAIC,YAAY,GAAyB,IAAzC;AACA,QAAIC,KAAK,GAAkB,IAA3B;AACA,QAAIC,IAAI,GAAkB,IAA1B;;AAEA,QAAMC,oBAAoB;AAAA,0EAAG,iBAAOC,KAAP,EAAkCC,yBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,oCADqB,GACEX,kBAAkB,CAA2BS,KAA3B,CADpB,EAGzB;;AACMG,oDAJmB,GAIoBhB,gBAAgB,CAACe,oBAAD,EAAuBD,yBAAvB,CAJpC;;AAMzB,oBAAI,CAACE,oCAAL,EAA2C;AACjCC,yBADiC,GACvB;AACZC,gCAAY,EAAEH,oBAAoB,CAACG,YADvB;AAEZC,oCAAgB,EAAEJ,oBAAoB,CAACI,gBAF3B;AAGZC,yCAAqB,EAAEL,oBAAoB,CAACK,qBAHhC;AAIZC,0BAAM,EAAEN,oBAAoB,CAACM,MAArB,CAA4BC,KAJxB;AAKZC,6BAAS,EAAER,oBAAoB,CAACQ,SAArB,CAA+BD,KAL9B;AAMZb,gCAAY,EAAEA,YAAY,KAAK,IAAjB,GAAwBe,SAAxB,GAAoCf,YANtC;AAOZgB,wBAAI,EAAEV,oBAAoB,CAACU;AAPf,mBADuB;AAWvCV,sCAAoB,GAAGZ,0BAA0B,CAACW,yBAAD,EAA4BG,OAA5B,CAAjD;;AAEA,sBAAIP,KAAK,KAAK,IAAd,EAAoB;AAChBK,wCAAoB,CAACL,KAArB,CAA2BA,KAA3B;AACH;;AAED,sBAAIC,IAAI,KAAK,IAAb,EAAmB;AACfI,wCAAoB,CAACJ,IAArB,CAA0BA,IAA1B;AACH;AACJ;;AAEDJ,6CAA6B,CAACmB,GAA9B,CAAkCZ,yBAAlC,EAA6DC,oBAA7D;;AA5ByB,oBA8BpBC,oCA9BoB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA+BfX,gBAAgB,CAACS,yBAAD,EAA4BD,KAAK,CAACQ,MAAlC,EAA0CN,oBAAoB,CAACM,MAA/D,CA/BD;;AAAA;AAAA;AAAA,uBAgCfhB,gBAAgB,CAACS,yBAAD,EAA4BD,KAAK,CAACU,SAAlC,EAA6CR,oBAAoB,CAACQ,SAAlE,CAhCD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAkCfrB,iBAAiB,CAACY,yBAAD,EAA4BD,KAAK,CAACQ,MAAlC,EAA0CN,oBAAoB,CAACM,MAA/D,CAlCF;;AAAA;AAAA;AAAA,uBAmCfnB,iBAAiB,CAACY,yBAAD,EAA4BD,KAAK,CAACU,SAAlC,EAA6CR,oBAAoB,CAACQ,SAAlE,CAnCF;;AAAA;AAAA;AAAA,uBAsCnBjB,uBAAuB,CAACO,KAAD,EAAQC,yBAAR,EAAmCC,oBAAnC,CAtCJ;;AAAA;AAAA,iDAwClBA,oBAxCkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAApBH,oBAAoB;AAAA;AAAA;AAAA,OAA1B;;AA2CA,WAAO;AACH,UAAIH,YAAJ,CAAiBa,KAAjB,EAA4C;AACxCb,oBAAY,GAAGa,KAAf;AACH,OAHE;;AAIH,UAAIZ,KAAJ,CAAUY,KAAV,EAAuB;AACnBZ,aAAK,GAAGY,KAAR;AACH,OANE;;AAOH,UAAIX,IAAJ,CAASW,KAAT,EAAsB;AAClBX,YAAI,GAAGW,KAAP;AACH,OATE;;AAUHK,YAVG,kBAUId,KAVJ,EAU+BC,yBAV/B,EAUoF;AACnF,YAAMc,4BAA4B,GAAGrB,6BAA6B,CAACsB,GAA9B,CAAkCf,yBAAlC,CAArC;;AAEA,YAAIc,4BAA4B,KAAKJ,SAArC,EAAgD;AAC5C,iBAAOM,OAAO,CAACC,OAAR,CAAgBH,4BAAhB,CAAP;AACH;;AAED,eAAOhB,oBAAoB,CAACC,KAAD,EAAQC,yBAAR,CAA3B;AACH;AAlBE,KAAP;AAoBH,GAtED;AAuEH,CA9EM","names":["isOwnedByContext","createOscillatorNodeRendererFactory","connectAudioParam","createNativeOscillatorNode","getNativeAudioNode","renderAutomation","renderInputsOfAudioNode","renderedNativeOscillatorNodes","WeakMap","periodicWave","start","stop","createOscillatorNode","proxy","nativeOfflineAudioContext","nativeOscillatorNode","nativeOscillatorNodeIsOwnedByContext","options","channelCount","channelCountMode","channelInterpretation","detune","value","frequency","undefined","type","set","render","renderedNativeOscillatorNode","get","Promise","resolve"],"sourceRoot":"","sources":["../../../src/factories/oscillator-node-renderer-factory.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}