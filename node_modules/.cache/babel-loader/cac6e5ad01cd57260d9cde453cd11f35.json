{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"./Defaults\";\nimport { assert } from \"./Debug\";\nimport { EQ, GT, GTE, LT } from \"./Math\";\n/**\n * A Timeline class for scheduling and maintaining state\n * along a timeline. All events must have a \"time\" property.\n * Internally, events are stored in time order for fast\n * retrieval.\n */\n\nexport var Timeline = /*#__PURE__*/function (_Tone) {\n  _inherits(Timeline, _Tone);\n\n  var _super = _createSuper(Timeline);\n\n  function Timeline() {\n    var _this;\n\n    _classCallCheck(this, Timeline);\n\n    _this = _super.call(this);\n    _this.name = \"Timeline\";\n    /**\n     * The array of scheduled timeline events\n     */\n\n    _this._timeline = [];\n    var options = optionsFromArguments(Timeline.getDefaults(), arguments, [\"memory\"]);\n    _this.memory = options.memory;\n    _this.increasing = options.increasing;\n    return _this;\n  }\n\n  _createClass(Timeline, [{\n    key: \"length\",\n    get:\n    /**\n     * The number of items in the timeline.\n     */\n    function get() {\n      return this._timeline.length;\n    }\n    /**\n     * Insert an event object onto the timeline. Events must have a \"time\" attribute.\n     * @param event  The event object to insert into the timeline.\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(event) {\n      // the event needs to have a time attribute\n      assert(Reflect.has(event, \"time\"), \"Timeline: events must have a time attribute\");\n      event.time = event.time.valueOf();\n\n      if (this.increasing && this.length) {\n        var lastValue = this._timeline[this.length - 1];\n        assert(GTE(event.time, lastValue.time), \"The time must be greater than or equal to the last scheduled time\");\n\n        this._timeline.push(event);\n      } else {\n        var index = this._search(event.time);\n\n        this._timeline.splice(index + 1, 0, event);\n      } // if the length is more than the memory, remove the previous ones\n\n\n      if (this.length > this.memory) {\n        var diff = this.length - this.memory;\n\n        this._timeline.splice(0, diff);\n      }\n\n      return this;\n    }\n    /**\n     * Remove an event from the timeline.\n     * @param  {Object}  event  The event object to remove from the list.\n     * @returns {Timeline} this\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(event) {\n      var index = this._timeline.indexOf(event);\n\n      if (index !== -1) {\n        this._timeline.splice(index, 1);\n      }\n\n      return this;\n    }\n    /**\n     * Get the nearest event whose time is less than or equal to the given time.\n     * @param  time  The time to query.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(time) {\n      var param = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"time\";\n\n      var index = this._search(time, param);\n\n      if (index !== -1) {\n        return this._timeline[index];\n      } else {\n        return null;\n      }\n    }\n    /**\n     * Return the first event in the timeline without removing it\n     * @returns {Object} The first event object\n     */\n\n  }, {\n    key: \"peek\",\n    value: function peek() {\n      return this._timeline[0];\n    }\n    /**\n     * Return the first event in the timeline and remove it\n     */\n\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      return this._timeline.shift();\n    }\n    /**\n     * Get the event which is scheduled after the given time.\n     * @param  time  The time to query.\n     */\n\n  }, {\n    key: \"getAfter\",\n    value: function getAfter(time) {\n      var param = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"time\";\n\n      var index = this._search(time, param);\n\n      if (index + 1 < this._timeline.length) {\n        return this._timeline[index + 1];\n      } else {\n        return null;\n      }\n    }\n    /**\n     * Get the event before the event at the given time.\n     * @param  time  The time to query.\n     */\n\n  }, {\n    key: \"getBefore\",\n    value: function getBefore(time) {\n      var len = this._timeline.length; // if it's after the last item, return the last item\n\n      if (len > 0 && this._timeline[len - 1].time < time) {\n        return this._timeline[len - 1];\n      }\n\n      var index = this._search(time);\n\n      if (index - 1 >= 0) {\n        return this._timeline[index - 1];\n      } else {\n        return null;\n      }\n    }\n    /**\n     * Cancel events at and after the given time\n     * @param  after  The time to query.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel(after) {\n      if (this._timeline.length > 1) {\n        var index = this._search(after);\n\n        if (index >= 0) {\n          if (EQ(this._timeline[index].time, after)) {\n            // get the first item with that time\n            for (var i = index; i >= 0; i--) {\n              if (EQ(this._timeline[i].time, after)) {\n                index = i;\n              } else {\n                break;\n              }\n            }\n\n            this._timeline = this._timeline.slice(0, index);\n          } else {\n            this._timeline = this._timeline.slice(0, index + 1);\n          }\n        } else {\n          this._timeline = [];\n        }\n      } else if (this._timeline.length === 1) {\n        // the first item's time\n        if (GTE(this._timeline[0].time, after)) {\n          this._timeline = [];\n        }\n      }\n\n      return this;\n    }\n    /**\n     * Cancel events before or equal to the given time.\n     * @param  time  The time to cancel before.\n     */\n\n  }, {\n    key: \"cancelBefore\",\n    value: function cancelBefore(time) {\n      var index = this._search(time);\n\n      if (index >= 0) {\n        this._timeline = this._timeline.slice(index + 1);\n      }\n\n      return this;\n    }\n    /**\n     * Returns the previous event if there is one. null otherwise\n     * @param  event The event to find the previous one of\n     * @return The event right before the given event\n     */\n\n  }, {\n    key: \"previousEvent\",\n    value: function previousEvent(event) {\n      var index = this._timeline.indexOf(event);\n\n      if (index > 0) {\n        return this._timeline[index - 1];\n      } else {\n        return null;\n      }\n    }\n    /**\n     * Does a binary search on the timeline array and returns the\n     * nearest event index whose time is after or equal to the given time.\n     * If a time is searched before the first index in the timeline, -1 is returned.\n     * If the time is after the end, the index of the last item is returned.\n     */\n\n  }, {\n    key: \"_search\",\n    value: function _search(time) {\n      var param = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"time\";\n\n      if (this._timeline.length === 0) {\n        return -1;\n      }\n\n      var beginning = 0;\n      var len = this._timeline.length;\n      var end = len;\n\n      if (len > 0 && this._timeline[len - 1][param] <= time) {\n        return len - 1;\n      }\n\n      while (beginning < end) {\n        // calculate the midpoint for roughly equal partition\n        var midPoint = Math.floor(beginning + (end - beginning) / 2);\n        var event = this._timeline[midPoint];\n        var nextEvent = this._timeline[midPoint + 1];\n\n        if (EQ(event[param], time)) {\n          // choose the last one that has the same time\n          for (var i = midPoint; i < this._timeline.length; i++) {\n            var testEvent = this._timeline[i];\n\n            if (EQ(testEvent[param], time)) {\n              midPoint = i;\n            } else {\n              break;\n            }\n          }\n\n          return midPoint;\n        } else if (LT(event[param], time) && GT(nextEvent[param], time)) {\n          return midPoint;\n        } else if (GT(event[param], time)) {\n          // search lower\n          end = midPoint;\n        } else {\n          // search upper\n          beginning = midPoint + 1;\n        }\n      }\n\n      return -1;\n    }\n    /**\n     * Internal iterator. Applies extra safety checks for\n     * removing items from the array.\n     */\n\n  }, {\n    key: \"_iterate\",\n    value: function _iterate(callback) {\n      var lowerBound = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var upperBound = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this._timeline.length - 1;\n\n      this._timeline.slice(lowerBound, upperBound + 1).forEach(callback);\n    }\n    /**\n     * Iterate over everything in the array\n     * @param  callback The callback to invoke with every item\n     */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback) {\n      this._iterate(callback);\n\n      return this;\n    }\n    /**\n     * Iterate over everything in the array at or before the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n\n  }, {\n    key: \"forEachBefore\",\n    value: function forEachBefore(time, callback) {\n      // iterate over the items in reverse so that removing an item doesn't break things\n      var upperBound = this._search(time);\n\n      if (upperBound !== -1) {\n        this._iterate(callback, 0, upperBound);\n      }\n\n      return this;\n    }\n    /**\n     * Iterate over everything in the array after the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n\n  }, {\n    key: \"forEachAfter\",\n    value: function forEachAfter(time, callback) {\n      // iterate over the items in reverse so that removing an item doesn't break things\n      var lowerBound = this._search(time);\n\n      this._iterate(callback, lowerBound + 1);\n\n      return this;\n    }\n    /**\n     * Iterate over everything in the array between the startTime and endTime.\n     * The timerange is inclusive of the startTime, but exclusive of the endTime.\n     * range = [startTime, endTime).\n     * @param  startTime The time to check if items are before\n     * @param  endTime The end of the test interval.\n     * @param  callback The callback to invoke with every item\n     */\n\n  }, {\n    key: \"forEachBetween\",\n    value: function forEachBetween(startTime, endTime, callback) {\n      var lowerBound = this._search(startTime);\n\n      var upperBound = this._search(endTime);\n\n      if (lowerBound !== -1 && upperBound !== -1) {\n        if (this._timeline[lowerBound].time !== startTime) {\n          lowerBound += 1;\n        } // exclusive of the end time\n\n\n        if (this._timeline[upperBound].time === endTime) {\n          upperBound -= 1;\n        }\n\n        this._iterate(callback, lowerBound, upperBound);\n      } else if (lowerBound === -1) {\n        this._iterate(callback, 0, upperBound);\n      }\n\n      return this;\n    }\n    /**\n     * Iterate over everything in the array at or after the given time. Similar to\n     * forEachAfter, but includes the item(s) at the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n\n  }, {\n    key: \"forEachFrom\",\n    value: function forEachFrom(time, callback) {\n      // iterate over the items in reverse so that removing an item doesn't break things\n      var lowerBound = this._search(time); // work backwards until the event time is less than time\n\n\n      while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n        lowerBound--;\n      }\n\n      this._iterate(callback, lowerBound + 1);\n\n      return this;\n    }\n    /**\n     * Iterate over everything in the array at the given time\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n\n  }, {\n    key: \"forEachAtTime\",\n    value: function forEachAtTime(time, callback) {\n      // iterate over the items in reverse so that removing an item doesn't break things\n      var upperBound = this._search(time);\n\n      if (upperBound !== -1 && EQ(this._timeline[upperBound].time, time)) {\n        var lowerBound = upperBound;\n\n        for (var i = upperBound; i >= 0; i--) {\n          if (EQ(this._timeline[i].time, time)) {\n            lowerBound = i;\n          } else {\n            break;\n          }\n        }\n\n        this._iterate(function (event) {\n          callback(event);\n        }, lowerBound, upperBound);\n      }\n\n      return this;\n    }\n    /**\n     * Clean up.\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Timeline.prototype), \"dispose\", this).call(this);\n\n      this._timeline = [];\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return {\n        memory: Infinity,\n        increasing: false\n      };\n    }\n  }]);\n\n  return Timeline;\n}(Tone);","map":{"version":3,"mappings":"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","names":["Tone","optionsFromArguments","assert","EQ","GT","GTE","LT","Timeline","options","getDefaults","arguments","memory","increasing","_timeline","length","event","Reflect","has","time","valueOf","lastValue","push","index","_search","splice","diff","indexOf","param","shift","len","after","i","slice","beginning","end","midPoint","Math","floor","nextEvent","testEvent","callback","lowerBound","upperBound","forEach","_iterate","startTime","endTime","Infinity"],"sourceRoot":"","sources":["../../../../Tone/core/util/Timeline.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}