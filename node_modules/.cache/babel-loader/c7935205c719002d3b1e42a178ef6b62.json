{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { getContext } from \"../Global\";\nimport { TransportTimeClass } from \"./TransportTime\";\n/**\n * Ticks is a primitive type for encoding Time values.\n * Ticks can be constructed with or without the `new` keyword. Ticks can be passed\n * into the parameter of any method which takes time as an argument.\n * @example\n * const t = Tone.Ticks(\"4n\"); // a quarter note as ticks\n * @category Unit\n */\n\nexport var TicksClass = /*#__PURE__*/function (_TransportTimeClass) {\n  _inherits(TicksClass, _TransportTimeClass);\n\n  var _super = _createSuper(TicksClass);\n\n  function TicksClass() {\n    var _this;\n\n    _classCallCheck(this, TicksClass);\n\n    _this = _super.apply(this, arguments);\n    _this.name = \"Ticks\";\n    _this.defaultUnits = \"i\";\n    return _this;\n  }\n  /**\n   * Get the current time in the given units\n   */\n\n\n  _createClass(TicksClass, [{\n    key: \"_now\",\n    value: function _now() {\n      return this.context.transport.ticks;\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n\n  }, {\n    key: \"_beatsToUnits\",\n    value: function _beatsToUnits(beats) {\n      return this._getPPQ() * beats;\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n\n  }, {\n    key: \"_secondsToUnits\",\n    value: function _secondsToUnits(seconds) {\n      return Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n\n  }, {\n    key: \"_ticksToUnits\",\n    value: function _ticksToUnits(ticks) {\n      return ticks;\n    }\n    /**\n     * Return the time in ticks\n     */\n\n  }, {\n    key: \"toTicks\",\n    value: function toTicks() {\n      return this.valueOf();\n    }\n    /**\n     * Return the time in seconds\n     */\n\n  }, {\n    key: \"toSeconds\",\n    value: function toSeconds() {\n      return this.valueOf() / this._getPPQ() * (60 / this._getBpm());\n    }\n  }]);\n\n  return TicksClass;\n}(TransportTimeClass);\n/**\n * Convert a time representation to ticks\n * @category Unit\n */\n\nexport function Ticks(value, units) {\n  return new TicksClass(getContext(), value, units);\n}","map":{"version":3,"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,WAA3B;AAEA,SAASC,kBAAT,QAAmC,iBAAnC;AAGA;;;;;;;;;AAQA,WAAaC,UAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAEU,iBAAe,OAAf;AAEA,yBAA6B,GAA7B;AAJV;AA+CC;AAzCA;;;;;AAND;AAAA;AAAA,WASW,gBAAI;AACb,aAAO,KAAKC,OAAL,CAAaC,SAAb,CAAuBC,KAA9B;AACA;AAED;;;;AAbD;AAAA;AAAA,WAgBW,uBAAcC,KAAd,EAA2B;AACpC,aAAO,KAAKC,OAAL,KAAiBD,KAAxB;AACA;AAED;;;;AApBD;AAAA;AAAA,WAuBW,yBAAgBE,OAAhB,EAAgC;AACzC,aAAOC,IAAI,CAACC,KAAL,CAAWF,OAAO,IAAI,KAAK,KAAKG,OAAL,EAAT,CAAP,GAAkC,KAAKJ,OAAL,EAA7C,CAAP;AACA;AAED;;;;AA3BD;AAAA;AAAA,WA8BW,uBAAcF,KAAd,EAA0B;AACnC,aAAOA,KAAP;AACA;AAED;;;;AAlCD;AAAA;AAAA,WAqCC,mBAAO;AACN,aAAO,KAAKO,OAAL,EAAP;AACA;AAED;;;;AAzCD;AAAA;AAAA,WA4CC,qBAAS;AACR,aAAQ,KAAKA,OAAL,KAAiB,KAAKL,OAAL,EAAlB,IAAqC,KAAK,KAAKI,OAAL,EAA1C,CAAP;AACA;AA9CF;;AAAA;AAAA,EAAgCV,kBAAhC;AAiDA;;;;;AAIA,OAAM,SAAUY,KAAV,CAAgBC,KAAhB,EAAmCC,KAAnC,EAAuD;AAC5D,SAAO,IAAIb,UAAJ,CAAeF,UAAU,EAAzB,EAA6Bc,KAA7B,EAAoCC,KAApC,CAAP;AACA","names":["getContext","TransportTimeClass","TicksClass","context","transport","ticks","beats","_getPPQ","seconds","Math","floor","_getBpm","valueOf","Ticks","value","units"],"sourceRoot":"","sources":["../../../../Tone/core/type/Ticks.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}