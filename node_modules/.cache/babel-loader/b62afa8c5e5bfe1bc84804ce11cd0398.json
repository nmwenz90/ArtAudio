{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].\n * See [[AudioToGain]].\n * @category Signal\n */\n\nexport var GainToAudio = /*#__PURE__*/function (_SignalOperator) {\n  _inherits(GainToAudio, _SignalOperator);\n\n  var _super = _createSuper(GainToAudio);\n\n  function GainToAudio() {\n    var _this;\n\n    _classCallCheck(this, GainToAudio);\n\n    _this = _super.apply(this, arguments);\n    _this.name = \"GainToAudio\";\n    /**\n     * The node which converts the audio ranges\n     */\n\n    _this._norm = new WaveShaper({\n      context: _this.context,\n      mapping: function mapping(x) {\n        return Math.abs(x) * 2 - 1;\n      }\n    });\n    /**\n     * The NormalRange input [0, 1]\n     */\n\n    _this.input = _this._norm;\n    /**\n     * The AudioRange output [-1, 1]\n     */\n\n    _this.output = _this._norm;\n    return _this;\n  }\n  /**\n   * clean up\n   */\n\n\n  _createClass(GainToAudio, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(GainToAudio.prototype), \"dispose\", this).call(this);\n\n      this._norm.dispose();\n\n      return this;\n    }\n  }]);\n\n  return GainToAudio;\n}(SignalOperator);","map":{"version":3,"mappings":";;;;;;AACA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA;;;;;;AAKA,WAAaC,WAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAEU,iBAAe,aAAf;AAET;;;;AAGQ,kBAAQ,IAAID,UAAJ,CAAe;AAC9BE,aAAO,EAAE,MAAKA,OADgB;AAE9BC,aAAO,EAAE,kBAAC;AAAA,eAAIC,IAAI,CAACC,GAAL,CAASC,CAAT,IAAc,CAAd,GAAkB,CAAtB;AAAA;AAFoB,KAAf,CAAR;AAKR;;;;AAGA,kBAAQ,MAAKC,KAAb;AAEA;;;;AAGA,mBAAS,MAAKA,KAAd;AApBD;AA8BC;AARA;;;;;AAtBD;AAAA;AAAA,WAyBC,mBAAO;AACN;;AACA,WAAKA,KAAL,CAAWC,OAAX;;AACA,aAAO,IAAP;AACA;AA7BF;;AAAA;AAAA,EAAiCT,cAAjC","names":["SignalOperator","WaveShaper","GainToAudio","context","mapping","Math","abs","x","_norm","dispose"],"sourceRoot":"","sources":["../../../Tone/signal/GainToAudio.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}