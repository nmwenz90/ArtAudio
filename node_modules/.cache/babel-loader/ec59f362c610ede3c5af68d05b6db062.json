{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Add a signal and a number or two signals. When no value is\n * passed into the constructor, Tone.Add will sum input and `addend`\n * If a value is passed into the constructor, the it will be added to the input.\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst add = new Tone.Add(2).toDestination();\n * \tadd.addend.setValueAtTime(1, 0.2);\n * \tconst signal = new Tone.Signal(2);\n * \t// add a signal and a scalar\n * \tsignal.connect(add);\n * \tsignal.setValueAtTime(1, 0.1);\n * }, 0.5, 1);\n * @category Signal\n */\n\nexport var Add = /*#__PURE__*/function (_Signal) {\n  _inherits(Add, _Signal);\n\n  var _super = _createSuper(Add);\n\n  function Add() {\n    var _this;\n\n    _classCallCheck(this, Add);\n\n    _this = _super.call(this, Object.assign(optionsFromArguments(Add.getDefaults(), arguments, [\"value\"])));\n    _this.override = false;\n    _this.name = \"Add\";\n    /**\n     * the summing node\n     */\n\n    _this._sum = new Gain({\n      context: _this.context\n    });\n    _this.input = _this._sum;\n    _this.output = _this._sum;\n    /**\n     * The value which is added to the input signal\n     */\n\n    _this.addend = _this._param;\n    connectSeries(_this._constantSource, _this._sum);\n    return _this;\n  }\n\n  _createClass(Add, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Add.prototype), \"dispose\", this).call(this);\n\n      this._sum.dispose();\n\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(Signal.getDefaults(), {\n        value: 0\n      });\n    }\n  }]);\n\n  return Add;\n}(Signal);","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,+BAA9B;AACA,SAASC,IAAT,QAAqB,sBAArB;AAEA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,MAAT,QAAsC,UAAtC;AAEA;;;;;;;;;;;;;;;;;AAgBA,WAAaC,GAAb;AAAA;;AAAA;;AAuBC;AAAA;;AAAA;;AACC,8BAAMC,MAAM,CAACC,MAAP,CAAcJ,oBAAoB,CAACE,GAAG,CAACG,WAAJ,EAAD,EAAoBC,SAApB,EAA+B,CAAC,OAAD,CAA/B,CAAlC,CAAN;AAtBD,qBAAW,KAAX;AAES,iBAAe,KAAf;AAET;;;;AAGQ,iBAAa,IAAIP,IAAJ,CAAS;AAAEQ,aAAO,EAAE,MAAKA;AAAhB,KAAT,CAAb;AACC,kBAAQ,MAAKC,IAAb;AACA,mBAAS,MAAKA,IAAd;AAET;;;;AAGS,mBAA0B,MAAKC,MAA/B;AAURX,iBAAa,CAAC,MAAKY,eAAN,EAAuB,MAAKF,IAA5B,CAAb;AAHD;AAIC;;AA3BF;AAAA;AAAA,WAmCC,mBAAO;AACN;;AACA,WAAKA,IAAL,CAAUG,OAAV;;AACA,aAAO,IAAP;AACA;AAvCF;AAAA;AAAA,WA6BC,uBAAkB;AACjB,aAAOR,MAAM,CAACC,MAAP,CAAcH,MAAM,CAACI,WAAP,EAAd,EAAoC;AAC1CO,aAAK,EAAE;AADmC,OAApC,CAAP;AAGA;AAjCF;;AAAA;AAAA,EAAyBX,MAAzB","names":["connectSeries","Gain","optionsFromArguments","Signal","Add","Object","assign","getDefaults","arguments","context","_sum","_param","_constantSource","dispose","value"],"sourceRoot":"","sources":["../../../Tone/signal/Add.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}