{"ast":null,"code":"import _objectSpread from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar DEFAULT_OPTIONS = {\n  disableNormalization: false\n};\nexport var createPeriodicWaveConstructor = function createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions) {\n  return /*#__PURE__*/function (_Symbol$hasInstance) {\n    function PeriodicWave(context, options) {\n      _classCallCheck(this, PeriodicWave);\n\n      var nativeContext = getNativeContext(context);\n      var mergedOptions = sanitizePeriodicWaveOptions(_objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options));\n      var periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n      periodicWaveStore.add(periodicWave); // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n\n      return periodicWave;\n    }\n\n    _createClass(PeriodicWave, null, [{\n      key: _Symbol$hasInstance,\n      value: function value(instance) {\n        return instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype || periodicWaveStore.has(instance);\n      }\n    }]);\n\n    return PeriodicWave;\n  }(Symbol.hasInstance);\n};","map":{"version":3,"mappings":";;;AAGA,IAAMA,eAAe,GAAG;AACpBC,sBAAoB,EAAE;AADF,CAAxB;AAIA,OAAO,IAAMC,6BAA6B,GAAoC,SAAjEA,6BAAiE,CAC1EC,wBAD0E,EAE1EC,gBAF0E,EAG1EC,iBAH0E,EAI1EC,2BAJ0E,EAK1E;AACA;AACI,0BAAYC,OAAZ,EAAwBC,OAAxB,EAA+D;AAAA;;AAC3D,UAAMC,aAAa,GAAGL,gBAAgB,CAACG,OAAD,CAAtC;AACA,UAAMG,aAAa,GAAGJ,2BAA2B,iCAAMN,eAAN,GAA0BQ,OAA1B,EAAjD;AACA,UAAMG,YAAY,GAAGR,wBAAwB,CAACM,aAAD,EAAgBC,aAAhB,CAA7C;AAEAL,uBAAiB,CAACO,GAAlB,CAAsBD,YAAtB,EAL2D,CAO3D;;AACA,aAAOA,YAAP;AACH;;AAVL;AAAA;AAAA,aAYW,eAA4BE,QAA5B,EAA6C;AAChD,eACKA,QAAQ,KAAK,IAAb,IAAqB,OAAOA,QAAP,KAAoB,QAAzC,IAAqDC,MAAM,CAACC,cAAP,CAAsBF,QAAtB,MAAoCG,YAAY,CAACC,SAAvG,IACAZ,iBAAiB,CAACa,GAAlB,CAA2BL,QAA3B,CAFJ;AAIH;AAjBL;;AAAA;AAAA,IAYmBM,MAAM,CAACC,WAZ1B;AAmBH,CAzBM","names":["DEFAULT_OPTIONS","disableNormalization","createPeriodicWaveConstructor","createNativePeriodicWave","getNativeContext","periodicWaveStore","sanitizePeriodicWaveOptions","context","options","nativeContext","mergedOptions","periodicWave","add","instance","Object","getPrototypeOf","PeriodicWave","prototype","has","Symbol","hasInstance"],"sourceRoot":"","sources":["../../../src/factories/periodic-wave-constructor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}