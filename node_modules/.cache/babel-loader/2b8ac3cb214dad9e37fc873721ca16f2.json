{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Split } from \"../component/channel/Split\";\nimport { Merge } from \"../component/channel/Merge\";\n/**\n * Base class for stereo feedback effects where the effectReturn is fed back into the same channel.\n */\n\nexport var StereoFeedbackEffect = /*#__PURE__*/function (_StereoEffect) {\n  _inherits(StereoFeedbackEffect, _StereoEffect);\n\n  var _super = _createSuper(StereoFeedbackEffect);\n\n  function StereoFeedbackEffect(options) {\n    var _this;\n\n    _classCallCheck(this, StereoFeedbackEffect);\n\n    _this = _super.call(this, options);\n    _this.feedback = new Signal({\n      context: _this.context,\n      value: options.feedback,\n      units: \"normalRange\"\n    });\n    _this._feedbackL = new Gain({\n      context: _this.context\n    });\n    _this._feedbackR = new Gain({\n      context: _this.context\n    });\n    _this._feedbackSplit = new Split({\n      context: _this.context,\n      channels: 2\n    });\n    _this._feedbackMerge = new Merge({\n      context: _this.context,\n      channels: 2\n    });\n\n    _this._merge.connect(_this._feedbackSplit);\n\n    _this._feedbackMerge.connect(_this._split); // the left output connected to the left input\n\n\n    _this._feedbackSplit.connect(_this._feedbackL, 0, 0);\n\n    _this._feedbackL.connect(_this._feedbackMerge, 0, 0); // the right output connected to the right input\n\n\n    _this._feedbackSplit.connect(_this._feedbackR, 1, 0);\n\n    _this._feedbackR.connect(_this._feedbackMerge, 0, 1); // the feedback control\n\n\n    _this.feedback.fan(_this._feedbackL.gain, _this._feedbackR.gain);\n\n    readOnly(_assertThisInitialized(_this), [\"feedback\"]);\n    return _this;\n  }\n\n  _createClass(StereoFeedbackEffect, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(StereoFeedbackEffect.prototype), \"dispose\", this).call(this);\n\n      this.feedback.dispose();\n\n      this._feedbackL.dispose();\n\n      this._feedbackR.dispose();\n\n      this._feedbackSplit.dispose();\n\n      this._feedbackMerge.dispose();\n\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(StereoEffect.getDefaults(), {\n        feedback: 0.5\n      });\n    }\n  }]);\n\n  return StereoFeedbackEffect;\n}(StereoEffect);","map":{"version":3,"mappings":";;;;;;;AAAA,SAASA,YAAT,QAAkD,gBAAlD;AAEA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,KAAT,QAAsB,4BAAtB;AAMA;;;;AAGA,WAAaC,oBAAb;AAAA;;AAAA;;AA6BC,gCAAYC,OAAZ,EAAgD;AAAA;;AAAA;;AAE/C,8BAAMA,OAAN;AAEA,UAAKC,QAAL,GAAgB,IAAIP,MAAJ,CAAW;AAC1BQ,aAAO,EAAE,MAAKA,OADY;AAE1BC,WAAK,EAAEH,OAAO,CAACC,QAFW;AAG1BG,WAAK,EAAE;AAHmB,KAAX,CAAhB;AAKA,UAAKC,UAAL,GAAkB,IAAIV,IAAJ,CAAS;AAAEO,aAAO,EAAE,MAAKA;AAAhB,KAAT,CAAlB;AACA,UAAKI,UAAL,GAAkB,IAAIX,IAAJ,CAAS;AAAEO,aAAO,EAAE,MAAKA;AAAhB,KAAT,CAAlB;AAEA,UAAKK,cAAL,GAAsB,IAAIV,KAAJ,CAAU;AAAEK,aAAO,EAAE,MAAKA,OAAhB;AAAyBM,cAAQ,EAAE;AAAnC,KAAV,CAAtB;AACA,UAAKC,cAAL,GAAsB,IAAIX,KAAJ,CAAU;AAAEI,aAAO,EAAE,MAAKA,OAAhB;AAAyBM,cAAQ,EAAE;AAAnC,KAAV,CAAtB;;AAEA,UAAKE,MAAL,CAAYC,OAAZ,CAAoB,MAAKJ,cAAzB;;AACA,UAAKE,cAAL,CAAoBE,OAApB,CAA4B,MAAKC,MAAjC,EAhB+C,CAkB/C;;;AACA,UAAKL,cAAL,CAAoBI,OAApB,CAA4B,MAAKN,UAAjC,EAA6C,CAA7C,EAAgD,CAAhD;;AACA,UAAKA,UAAL,CAAgBM,OAAhB,CAAwB,MAAKF,cAA7B,EAA6C,CAA7C,EAAgD,CAAhD,EApB+C,CAsB/C;;;AACA,UAAKF,cAAL,CAAoBI,OAApB,CAA4B,MAAKL,UAAjC,EAA6C,CAA7C,EAAgD,CAAhD;;AACA,UAAKA,UAAL,CAAgBK,OAAhB,CAAwB,MAAKF,cAA7B,EAA6C,CAA7C,EAAgD,CAAhD,EAxB+C,CA0B/C;;;AACA,UAAKR,QAAL,CAAcY,GAAd,CAAkB,MAAKR,UAAL,CAAgBS,IAAlC,EAAwC,MAAKR,UAAL,CAAgBQ,IAAxD;;AACAlB,YAAQ,gCAAO,CAAC,UAAD,CAAP,CAAR;AA5B+C;AA6B/C;;AA1DF;AAAA;AAAA,WAkEC,mBAAO;AACN;;AACA,WAAKK,QAAL,CAAcc,OAAd;;AACA,WAAKV,UAAL,CAAgBU,OAAhB;;AACA,WAAKT,UAAL,CAAgBS,OAAhB;;AACA,WAAKR,cAAL,CAAoBQ,OAApB;;AACA,WAAKN,cAAL,CAAoBM,OAApB;;AACA,aAAO,IAAP;AACA;AA1EF;AAAA;AAAA,WA4DC,uBAAkB;AACjB,aAAOC,MAAM,CAACC,MAAP,CAAcxB,YAAY,CAACyB,WAAb,EAAd,EAA0C;AAChDjB,gBAAQ,EAAE;AADsC,OAA1C,CAAP;AAGA;AAhEF;;AAAA;AAAA,EAAuFR,YAAvF","names":["StereoEffect","Signal","Gain","readOnly","Split","Merge","StereoFeedbackEffect","options","feedback","context","value","units","_feedbackL","_feedbackR","_feedbackSplit","channels","_feedbackMerge","_merge","connect","_split","fan","gain","dispose","Object","assign","getDefaults"],"sourceRoot":"","sources":["../../../Tone/effect/StereoFeedbackEffect.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}