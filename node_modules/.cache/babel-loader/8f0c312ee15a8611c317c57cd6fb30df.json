{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Monophonic } from \"../instrument/Monophonic\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { FrequencyEnvelope } from \"../component/envelope/FrequencyEnvelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\n/**\n * MonoSynth is composed of one `oscillator`, one `filter`, and two `envelopes`.\n * The amplitude of the Oscillator and the cutoff frequency of the\n * Filter are controlled by Envelopes.\n * <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n * @example\n * const synth = new Tone.MonoSynth({\n * \toscillator: {\n * \t\ttype: \"square\"\n * \t},\n * \tenvelope: {\n * \t\tattack: 0.1\n * \t}\n * }).toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\n\nexport var MonoSynth = /*#__PURE__*/function (_Monophonic) {\n  _inherits(MonoSynth, _Monophonic);\n\n  var _super = _createSuper(MonoSynth);\n\n  function MonoSynth() {\n    var _this;\n\n    _classCallCheck(this, MonoSynth);\n\n    _this = _super.call(this, optionsFromArguments(MonoSynth.getDefaults(), arguments));\n    _this.name = \"MonoSynth\";\n    var options = optionsFromArguments(MonoSynth.getDefaults(), arguments);\n    _this.oscillator = new OmniOscillator(Object.assign(options.oscillator, {\n      context: _this.context,\n      detune: options.detune,\n      onstop: function onstop() {\n        return _this.onsilence(_assertThisInitialized(_this));\n      }\n    }));\n    _this.frequency = _this.oscillator.frequency;\n    _this.detune = _this.oscillator.detune;\n    _this.filter = new Filter(Object.assign(options.filter, {\n      context: _this.context\n    }));\n    _this.filterEnvelope = new FrequencyEnvelope(Object.assign(options.filterEnvelope, {\n      context: _this.context\n    }));\n    _this.envelope = new AmplitudeEnvelope(Object.assign(options.envelope, {\n      context: _this.context\n    })); // connect the oscillators to the output\n\n    _this.oscillator.chain(_this.filter, _this.envelope, _this.output); // connect the filter envelope\n\n\n    _this.filterEnvelope.connect(_this.filter.frequency);\n\n    readOnly(_assertThisInitialized(_this), [\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n    return _this;\n  }\n\n  _createClass(MonoSynth, [{\n    key: \"_triggerEnvelopeAttack\",\n    value:\n    /**\n     * start the attack portion of the envelope\n     * @param time the time the attack should start\n     * @param velocity the velocity of the note (0-1)\n     */\n    function _triggerEnvelopeAttack(time) {\n      var velocity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      this.envelope.triggerAttack(time, velocity);\n      this.filterEnvelope.triggerAttack(time);\n      this.oscillator.start(time);\n\n      if (this.envelope.sustain === 0) {\n        var computedAttack = this.toSeconds(this.envelope.attack);\n        var computedDecay = this.toSeconds(this.envelope.decay);\n        this.oscillator.stop(time + computedAttack + computedDecay);\n      }\n    }\n    /**\n     * start the release portion of the envelope\n     * @param time the time the release should start\n     */\n\n  }, {\n    key: \"_triggerEnvelopeRelease\",\n    value: function _triggerEnvelopeRelease(time) {\n      this.envelope.triggerRelease(time);\n      this.filterEnvelope.triggerRelease(time);\n      this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n    }\n  }, {\n    key: \"getLevelAtTime\",\n    value: function getLevelAtTime(time) {\n      time = this.toSeconds(time);\n      return this.envelope.getValueAtTime(time);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(MonoSynth.prototype), \"dispose\", this).call(this);\n\n      this.oscillator.dispose();\n      this.envelope.dispose();\n      this.filterEnvelope.dispose();\n      this.filter.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(Monophonic.getDefaults(), {\n        envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n          attack: 0.005,\n          decay: 0.1,\n          release: 1,\n          sustain: 0.9\n        }),\n        filter: Object.assign(omitFromObject(Filter.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n          Q: 1,\n          rolloff: -12,\n          type: \"lowpass\"\n        }),\n        filterEnvelope: Object.assign(omitFromObject(FrequencyEnvelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n          attack: 0.6,\n          baseFrequency: 200,\n          decay: 0.2,\n          exponent: 2,\n          octaves: 3,\n          release: 2,\n          sustain: 0.5\n        }),\n        oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), Object.keys(Source.getDefaults())), {\n          type: \"sawtooth\"\n        })\n      });\n    }\n  }]);\n\n  return MonoSynth;\n}(Monophonic);","map":{"version":3,"mappings":"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","names":["AmplitudeEnvelope","Envelope","Filter","omitFromObject","optionsFromArguments","readOnly","Monophonic","OmniOscillator","Source","FrequencyEnvelope","ToneAudioNode","MonoSynth","getDefaults","arguments","options","oscillator","Object","assign","context","detune","onstop","onsilence","frequency","filter","filterEnvelope","envelope","chain","output","connect","time","velocity","triggerAttack","start","sustain","computedAttack","toSeconds","attack","computedDecay","decay","stop","triggerRelease","release","getValueAtTime","dispose","keys","Q","rolloff","type","baseFrequency","exponent","octaves"],"sourceRoot":"","sources":["../../../Tone/instrument/MonoSynth.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}