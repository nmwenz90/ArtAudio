{"ast":null,"code":"import _slicedToArray from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectDestructuringEmpty from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js\";\n\nvar _jsxFileName = \"/Users/natewamwenze/Documents/personalProjects/musicidea/src/components/AudioEngine.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState, useContext } from 'react';\nimport { Player, loaded, FFT, Destination } from 'tone';\nimport React from 'react';\nimport { ArtMusicEngineContext } from '../store';\nimport { Stage } from '@inlet/react-pixi';\nimport { Artwork } from './Artwork';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var AudioEngine = function AudioEngine(_ref) {\n  _s();\n\n  var _player$current;\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useContext = useContext(ArtMusicEngineContext),\n      store = _useContext.store,\n      dispatch = _useContext.dispatch;\n\n  var gweiSong = 'https://res.cloudinary.com/dvwvkt7iq/video/upload/v1646968232/natekodi_gwei_q52txi.mp3';\n  var timer;\n  var player = useRef(null);\n  var fft = useRef(new FFT(32));\n  var animationRef = useRef(0); // const time = useRef<number>(0);\n\n  var _useState = useState(fft.current),\n      _useState2 = _slicedToArray(_useState, 2),\n      fftData = _useState2[0],\n      setFftData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isButtonPressed = _useState4[0],\n      setIsButtonPressed = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      time = _useState6[0],\n      setTime = _useState6[1];\n\n  var _useState7 = useState(new Float32Array(32)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      artFft = _useState8[0],\n      setArtFft = _useState8[1];\n\n  useEffect(function () {\n    player.current = new Player(gweiSong).chain(fft.current, Destination);\n  }, [(_player$current = player.current) === null || _player$current === void 0 ? void 0 : _player$current.state]);\n  useEffect(function () {\n    if (artFft) {\n      dispatch({\n        type: 'UpdateFftData',\n        payload: {\n          fftData: artFft\n        }\n      });\n    }\n  }, [artFft]);\n  useEffect(function () {\n    // if (fft.current.getValue()[0]) setFftData(fft.current.getValue());\n    console.log('fft value -->', fft.current.getValue());\n  }, [time]);\n\n  function loop() {\n    if (animationRef.current) {\n      setTime(animationRef.current);\n    }\n\n    animationRef.current = requestAnimationFrame(loop); // console.log('looop');\n  }\n\n  var handleClick = function handleClick() {\n    if (player.current) {\n      if (!isButtonPressed) {\n        loaded().then(function () {\n          var _player$current2;\n\n          setIsButtonPressed(true);\n          loop();\n          (_player$current2 = player.current) === null || _player$current2 === void 0 ? void 0 : _player$current2.start(); // }\n        });\n      } else {\n        setIsButtonPressed(false);\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = 0;\n        player.current.stop();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Stage, {\n      height: 540,\n      width: 540,\n      children: /*#__PURE__*/_jsxDEV(Artwork, {\n        artFFT: fft.current.getValue()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return handleClick();\n      },\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(AudioEngine, \"x66jfrOGyTsYxEgN705nm4jMR7o=\");\n\n_c = AudioEngine;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioEngine\");","map":{"version":3,"sources":["/Users/natewamwenze/Documents/personalProjects/musicidea/src/components/AudioEngine.tsx"],"names":["useRef","useEffect","useState","useContext","Player","loaded","FFT","Destination","React","ArtMusicEngineContext","Stage","Artwork","AudioEngine","store","dispatch","gweiSong","timer","player","fft","animationRef","current","fftData","setFftData","isButtonPressed","setIsButtonPressed","time","setTime","Float32Array","artFft","setArtFft","chain","state","type","payload","console","log","getValue","loop","requestAnimationFrame","handleClick","then","start","cancelAnimationFrame","stop"],"mappings":"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","sourcesContent":["import { useRef, useEffect, useState, useContext, ContextType } from 'react';\nimport {\n  Player,\n  loaded,\n  start,\n  FFT,\n  FFTOptions,\n  InputNode,\n  Destination,\n  Draw,\n  Transport,\n} from 'tone';\nimport React from 'react';\nimport { ActionType, ArtMusicEngineContext, InitialState } from '../store';\nimport { MeterBase } from 'tone/build/esm/component/analysis/MeterBase';\nimport { Stage } from '@inlet/react-pixi';\nimport { Artwork } from './Artwork';\n\ninterface AudioEngineProps {}\n\nexport const AudioEngine: React.FC<AudioEngineProps> = ({}) => {\n  const { store, dispatch } = useContext(ArtMusicEngineContext);\n\n  const gweiSong =\n    'https://res.cloudinary.com/dvwvkt7iq/video/upload/v1646968232/natekodi_gwei_q52txi.mp3';\n\n  let timer: number;\n  const player = useRef<Player | null>(null);\n  const fft = useRef(new FFT(32));\n  const animationRef = useRef<number>(0);\n  // const time = useRef<number>(0);\n\n  const [fftData, setFftData] = useState<any>(fft.current);\n  const [isButtonPressed, setIsButtonPressed] = useState(false);\n  const [time, setTime] = useState(0);\n  const [artFft, setArtFft] = useState<Float32Array>(new Float32Array(32));\n\n  useEffect(() => {\n    player.current = new Player(gweiSong).chain(fft.current, Destination);\n  }, [player.current?.state]);\n\n  useEffect(() => {\n    if (artFft) {\n      dispatch({ type: 'UpdateFftData', payload: { fftData: artFft } });\n    }\n  }, [artFft]);\n\n  useEffect(() => {\n    // if (fft.current.getValue()[0]) setFftData(fft.current.getValue());\n    console.log('fft value -->', fft.current.getValue());\n  }, [time]);\n\n  function loop() {\n    if (animationRef.current) {\n      setTime(animationRef.current);\n    }\n    animationRef.current = requestAnimationFrame(loop);\n    // console.log('looop');\n  }\n\n  const handleClick = () => {\n    if (player.current) {\n      if (!isButtonPressed) {\n        loaded().then(() => {\n          setIsButtonPressed(true);\n          loop();\n          player.current?.start();\n          // }\n        });\n      } else {\n        setIsButtonPressed(false);\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = 0;\n        player.current.stop();\n      }\n    }\n  };\n\n  return (\n    <>\n      <Stage height={540} width={540}>\n        <Artwork artFFT={fft.current.getValue()} />\n      </Stage>\n      <button onClick={() => handleClick()}>Play</button>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}