{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Split } from \"./Split\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Mid/Side processing separates the the 'mid' signal (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels).\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right\n * ```\n * @category Component\n */\n\nexport var MidSideSplit = /*#__PURE__*/function (_ToneAudioNode) {\n  _inherits(MidSideSplit, _ToneAudioNode);\n\n  var _super = _createSuper(MidSideSplit);\n\n  function MidSideSplit() {\n    var _this;\n\n    _classCallCheck(this, MidSideSplit);\n\n    _this = _super.call(this, optionsFromArguments(MidSideSplit.getDefaults(), arguments));\n    _this.name = \"MidSideSplit\";\n    _this._split = _this.input = new Split({\n      channels: 2,\n      context: _this.context\n    });\n    _this._midAdd = new Add({\n      context: _this.context\n    });\n    _this.mid = new Multiply({\n      context: _this.context,\n      value: Math.SQRT1_2\n    });\n    _this._sideSubtract = new Subtract({\n      context: _this.context\n    });\n    _this.side = new Multiply({\n      context: _this.context,\n      value: Math.SQRT1_2\n    });\n\n    _this._split.connect(_this._midAdd, 0);\n\n    _this._split.connect(_this._midAdd.addend, 1);\n\n    _this._split.connect(_this._sideSubtract, 0);\n\n    _this._split.connect(_this._sideSubtract.subtrahend, 1);\n\n    _this._midAdd.connect(_this.mid);\n\n    _this._sideSubtract.connect(_this.side);\n\n    return _this;\n  }\n\n  _createClass(MidSideSplit, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(MidSideSplit.prototype), \"dispose\", this).call(this);\n\n      this.mid.dispose();\n      this.side.dispose();\n\n      this._midAdd.dispose();\n\n      this._sideSubtract.dispose();\n\n      this._split.dispose();\n\n      return this;\n    }\n  }]);\n\n  return MidSideSplit;\n}(ToneAudioNode);","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,aAAT,QAAoD,kCAApD;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,oBAAT,QAAqC,0BAArC;AAIA;;;;;;;;;;AASA,WAAaC,YAAb;AAAA;;AAAA;;AAoCC;AAAA;;AAAA;;AACC,8BAAMD,oBAAoB,CAACC,YAAY,CAACC,WAAb,EAAD,EAA6BC,SAA7B,CAA1B;AAnCQ,iBAAe,cAAf;AAqCR,UAAKC,MAAL,GAAc,MAAKC,KAAL,GAAa,IAAIT,KAAJ,CAAU;AACpCU,cAAQ,EAAE,CAD0B;AAEpCC,aAAO,EAAE,MAAKA;AAFsB,KAAV,CAA3B;AAIA,UAAKC,OAAL,GAAe,IAAIX,GAAJ,CAAQ;AAAEU,aAAO,EAAE,MAAKA;AAAhB,KAAR,CAAf;AACA,UAAKE,GAAL,GAAW,IAAIX,QAAJ,CAAa;AACvBS,aAAO,EAAE,MAAKA,OADS;AAEvBG,WAAK,EAAEC,IAAI,CAACC;AAFW,KAAb,CAAX;AAIA,UAAKC,aAAL,GAAqB,IAAId,QAAJ,CAAa;AAAEQ,aAAO,EAAE,MAAKA;AAAhB,KAAb,CAArB;AACA,UAAKO,IAAL,GAAY,IAAIhB,QAAJ,CAAa;AACxBS,aAAO,EAAE,MAAKA,OADU;AAExBG,WAAK,EAAEC,IAAI,CAACC;AAFY,KAAb,CAAZ;;AAKA,UAAKR,MAAL,CAAYW,OAAZ,CAAoB,MAAKP,OAAzB,EAAkC,CAAlC;;AACA,UAAKJ,MAAL,CAAYW,OAAZ,CAAoB,MAAKP,OAAL,CAAaQ,MAAjC,EAAyC,CAAzC;;AACA,UAAKZ,MAAL,CAAYW,OAAZ,CAAoB,MAAKF,aAAzB,EAAwC,CAAxC;;AACA,UAAKT,MAAL,CAAYW,OAAZ,CAAoB,MAAKF,aAAL,CAAmBI,UAAvC,EAAmD,CAAnD;;AACA,UAAKT,OAAL,CAAaO,OAAb,CAAqB,MAAKN,GAA1B;;AACA,UAAKI,aAAL,CAAmBE,OAAnB,CAA2B,MAAKD,IAAhC;;AAvBD;AAwBC;;AA5DF;AAAA;AAAA,WA8DC,mBAAO;AACN;;AACA,WAAKL,GAAL,CAASS,OAAT;AACA,WAAKJ,IAAL,CAAUI,OAAV;;AACA,WAAKV,OAAL,CAAaU,OAAb;;AACA,WAAKL,aAAL,CAAmBK,OAAnB;;AACA,WAAKd,MAAL,CAAYc,OAAZ;;AACA,aAAO,IAAP;AACA;AAtEF;;AAAA;AAAA,EAAkCvB,aAAlC","names":["ToneAudioNode","Split","Add","Multiply","Subtract","optionsFromArguments","MidSideSplit","getDefaults","arguments","_split","input","channels","context","_midAdd","mid","value","Math","SQRT1_2","_sideSubtract","side","connect","addend","subtrahend","dispose"],"sourceRoot":"","sources":["../../../../Tone/component/channel/MidSideSplit.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}