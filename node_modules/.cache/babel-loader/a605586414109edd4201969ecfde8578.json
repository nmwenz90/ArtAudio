{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { ModulationSynth } from \"./ModulationSynth\";\n/**\n * FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n * the frequency of a second Tone.Synth. A lot of spectral content\n * can be explored using the modulationIndex parameter. Read more about\n * frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).\n *\n * @example\n * const fmSynth = new Tone.FMSynth().toDestination();\n * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n *\n * @category Instrument\n */\n\nexport var FMSynth = /*#__PURE__*/function (_ModulationSynth) {\n  _inherits(FMSynth, _ModulationSynth);\n\n  var _super = _createSuper(FMSynth);\n\n  function FMSynth() {\n    var _this;\n\n    _classCallCheck(this, FMSynth);\n\n    _this = _super.call(this, optionsFromArguments(FMSynth.getDefaults(), arguments));\n    _this.name = \"FMSynth\";\n    var options = optionsFromArguments(FMSynth.getDefaults(), arguments);\n    _this.modulationIndex = new Multiply({\n      context: _this.context,\n      value: options.modulationIndex\n    }); // control the two voices frequency\n\n    _this.frequency.connect(_this._carrier.frequency);\n\n    _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);\n\n    _this.frequency.chain(_this.modulationIndex, _this._modulationNode);\n\n    _this.detune.fan(_this._carrier.detune, _this._modulator.detune);\n\n    _this._modulator.connect(_this._modulationNode.gain);\n\n    _this._modulationNode.connect(_this._carrier.frequency);\n\n    _this._carrier.connect(_this.output);\n\n    return _this;\n  }\n\n  _createClass(FMSynth, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(FMSynth.prototype), \"dispose\", this).call(this);\n\n      this.modulationIndex.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(ModulationSynth.getDefaults(), {\n        modulationIndex: 10\n      });\n    }\n  }]);\n\n  return FMSynth;\n}(ModulationSynth);","map":{"version":3,"mappings":";;;;;;AACA,SAASA,oBAAT,QAAqC,uBAArC;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,eAAT,QAAwD,mBAAxD;AAMA;;;;;;;;;;;;;AAaA,WAAaC,OAAb;AAAA;;AAAA;;AAWC;AAAA;;AAAA;;AACC,8BAAMH,oBAAoB,CAACG,OAAO,CAACC,WAAR,EAAD,EAAwBC,SAAxB,CAA1B;AAXQ,iBAAe,SAAf;AAYR,QAAMC,OAAO,GAAGN,oBAAoB,CAACG,OAAO,CAACC,WAAR,EAAD,EAAwBC,SAAxB,CAApC;AAEA,UAAKE,eAAL,GAAuB,IAAIN,QAAJ,CAAa;AACnCO,aAAO,EAAE,MAAKA,OADqB;AAEnCC,WAAK,EAAEH,OAAO,CAACC;AAFoB,KAAb,CAAvB,CAJD,CASC;;AACA,UAAKG,SAAL,CAAeC,OAAf,CAAuB,MAAKC,QAAL,CAAcF,SAArC;;AACA,UAAKA,SAAL,CAAeG,KAAf,CAAqB,MAAKC,WAA1B,EAAuC,MAAKC,UAAL,CAAgBL,SAAvD;;AACA,UAAKA,SAAL,CAAeG,KAAf,CAAqB,MAAKN,eAA1B,EAA2C,MAAKS,eAAhD;;AACA,UAAKC,MAAL,CAAYC,GAAZ,CAAgB,MAAKN,QAAL,CAAcK,MAA9B,EAAsC,MAAKF,UAAL,CAAgBE,MAAtD;;AACA,UAAKF,UAAL,CAAgBJ,OAAhB,CAAwB,MAAKK,eAAL,CAAqBG,IAA7C;;AACA,UAAKH,eAAL,CAAqBL,OAArB,CAA6B,MAAKC,QAAL,CAAcF,SAA3C;;AACA,UAAKE,QAAL,CAAcD,OAAd,CAAsB,MAAKS,MAA3B;;AAhBD;AAiBC;;AA5BF;AAAA;AAAA,WAoCC,mBAAO;AACN;;AACA,WAAKb,eAAL,CAAqBc,OAArB;AACA,aAAO,IAAP;AACA;AAxCF;AAAA;AAAA,WA8BC,uBAAkB;AACjB,aAAOC,MAAM,CAACC,MAAP,CAAcrB,eAAe,CAACE,WAAhB,EAAd,EAA6C;AACnDG,uBAAe,EAAE;AADkC,OAA7C,CAAP;AAGA;AAlCF;;AAAA;AAAA,EAA6BL,eAA7B","names":["optionsFromArguments","Multiply","ModulationSynth","FMSynth","getDefaults","arguments","options","modulationIndex","context","value","frequency","connect","_carrier","chain","harmonicity","_modulator","_modulationNode","detune","fan","gain","output","dispose","Object","assign"],"sourceRoot":"","sources":["../../../Tone/instrument/FMSynth.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}