{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OnePoleFilter } from \"../filter/OnePoleFilter\";\nimport { Abs } from \"../../signal/Abs\";\n/**\n * Follower is a simple envelope follower.\n * It's implemented by applying a lowpass filter to the absolute value of the incoming signal.\n * ```\n *          +-----+    +---------------+\n * Input +--> Abs +----> OnePoleFilter +--> Output\n *          +-----+    +---------------+\n * ```\n * @category Component\n */\n\nexport var Follower = /*#__PURE__*/function (_ToneAudioNode) {\n  _inherits(Follower, _ToneAudioNode);\n\n  var _super = _createSuper(Follower);\n\n  function Follower() {\n    var _this;\n\n    _classCallCheck(this, Follower);\n\n    _this = _super.call(this, optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"]));\n    _this.name = \"Follower\";\n    var options = optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"]);\n    _this._abs = _this.input = new Abs({\n      context: _this.context\n    });\n    _this._lowpass = _this.output = new OnePoleFilter({\n      context: _this.context,\n      frequency: 1 / _this.toSeconds(options.smoothing),\n      type: \"lowpass\"\n    });\n\n    _this._abs.connect(_this._lowpass);\n\n    _this._smoothing = options.smoothing;\n    return _this;\n  }\n\n  _createClass(Follower, [{\n    key: \"smoothing\",\n    get:\n    /**\n     * The amount of time it takes a value change to arrive at the updated value.\n     */\n    function get() {\n      return this._smoothing;\n    },\n    set: function set(smoothing) {\n      this._smoothing = smoothing;\n      this._lowpass.frequency = 1 / this.toSeconds(this.smoothing);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Follower.prototype), \"dispose\", this).call(this);\n\n      this._abs.dispose();\n\n      this._lowpass.dispose();\n\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(ToneAudioNode.getDefaults(), {\n        smoothing: 0.05\n      });\n    }\n  }]);\n\n  return Follower;\n}(ToneAudioNode);","map":{"version":3,"mappings":";;;;;;AACA,SAAgCA,aAAhC,QAA2E,kCAA3E;AACA,SAASC,oBAAT,QAAqC,0BAArC;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,GAAT,QAAoB,kBAApB;AAMA;;;;;;;;;;;AAUA,WAAaC,QAAb;AAAA;;AAAA;;AA2BC;AAAA;;AAAA;;AACC,8BAAMH,oBAAoB,CAACG,QAAQ,CAACC,WAAT,EAAD,EAAyBC,SAAzB,EAAoC,CAAC,WAAD,CAApC,CAA1B;AA1BQ,iBAAe,UAAf;AA2BR,QAAMC,OAAO,GAAGN,oBAAoB,CAACG,QAAQ,CAACC,WAAT,EAAD,EAAyBC,SAAzB,EAAoC,CAAC,WAAD,CAApC,CAApC;AAEA,UAAKE,IAAL,GAAY,MAAKC,KAAL,GAAa,IAAIN,GAAJ,CAAQ;AAAEO,aAAO,EAAE,MAAKA;AAAhB,KAAR,CAAzB;AACA,UAAKC,QAAL,GAAgB,MAAKC,MAAL,GAAc,IAAIV,aAAJ,CAAkB;AAC/CQ,aAAO,EAAE,MAAKA,OADiC;AAE/CG,eAAS,EAAE,IAAI,MAAKC,SAAL,CAAeP,OAAO,CAACQ,SAAvB,CAFgC;AAG/CC,UAAI,EAAE;AAHyC,KAAlB,CAA9B;;AAKA,UAAKR,IAAL,CAAUS,OAAV,CAAkB,MAAKN,QAAvB;;AACA,UAAKO,UAAL,GAAkBX,OAAO,CAACQ,SAA1B;AAXD;AAYC;;AAvCF;AAAA;AAAA;AA+CC;;;AAGA,mBAAa;AACZ,aAAO,KAAKG,UAAZ;AACA,KApDF;AAAA,SAqDC,aAAcH,SAAd,EAAuB;AACtB,WAAKG,UAAL,GAAkBH,SAAlB;AACA,WAAKJ,QAAL,CAAcE,SAAd,GAA0B,IAAI,KAAKC,SAAL,CAAe,KAAKC,SAApB,CAA9B;AACA;AAxDF;AAAA;AAAA,WA0DC,mBAAO;AACN;;AACA,WAAKP,IAAL,CAAUW,OAAV;;AACA,WAAKR,QAAL,CAAcQ,OAAd;;AACA,aAAO,IAAP;AACA;AA/DF;AAAA;AAAA,WAyCC,uBAAkB;AACjB,aAAOC,MAAM,CAACC,MAAP,CAAcrB,aAAa,CAACK,WAAd,EAAd,EAA2C;AACjDU,iBAAS,EAAE;AADsC,OAA3C,CAAP;AAGA;AA7CF;;AAAA;AAAA,EAA8Bf,aAA9B","names":["ToneAudioNode","optionsFromArguments","OnePoleFilter","Abs","Follower","getDefaults","arguments","options","_abs","input","context","_lowpass","output","frequency","toSeconds","smoothing","type","connect","_smoothing","dispose","Object","assign"],"sourceRoot":"","sources":["../../../../Tone/component/analysis/Follower.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}