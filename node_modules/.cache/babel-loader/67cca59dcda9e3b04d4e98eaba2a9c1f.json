{"ast":null,"code":"import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport var createNativeChannelMergerNodeFactory = function createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode) {\n  return function (nativeContext, options) {\n    var nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n    /*\n     * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n     * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n     * the webkitAudioContext is used as a workaround here.\n     */\n\n    if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n      wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n    }\n\n    assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n    return nativeChannelMergerNode;\n  };\n};","map":{"version":3,"mappings":"AAAA,SAASA,4BAAT,QAA6C,6CAA7C;AAGA,OAAO,IAAMC,oCAAoC,GAA2C,SAA/EA,oCAA+E,CACxFC,6BADwF,EAExFC,qBAFwF,EAGxF;AACA,SAAO,UAACC,aAAD,EAAgBC,OAAhB,EAA2B;AAC9B,QAAMC,uBAAuB,GAAGF,aAAa,CAACG,mBAAd,CAAkCF,OAAO,CAACG,cAA1C,CAAhC;AAEA;;;;;;AAKA,QAAIN,6BAA6B,KAAK,IAAlC,IAA0CA,6BAA6B,CAACO,IAA9B,KAAuC,oBAArF,EAA2G;AACvGN,2BAAqB,CAACC,aAAD,EAAgBE,uBAAhB,CAArB;AACH;;AAEDN,gCAA4B,CAACM,uBAAD,EAA0BD,OAA1B,CAA5B;AAEA,WAAOC,uBAAP;AACH,GAfD;AAgBH,CApBM","names":["assignNativeAudioNodeOptions","createNativeChannelMergerNodeFactory","nativeAudioContextConstructor","wrapChannelMergerNode","nativeContext","options","nativeChannelMergerNode","createChannelMerger","numberOfInputs","name"],"sourceRoot":"","sources":["../../../src/factories/native-channel-merger-node-factory.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}