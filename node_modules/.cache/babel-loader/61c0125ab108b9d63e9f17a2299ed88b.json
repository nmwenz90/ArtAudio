{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OneShotSource } from \"../OneShotSource\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Wrapper around the native fire-and-forget OscillatorNode.\n * Adds the ability to reschedule the stop method.\n * ***[[Oscillator]] is better for most use-cases***\n * @category Source\n */\n\nexport var ToneOscillatorNode = /*#__PURE__*/function (_OneShotSource) {\n  _inherits(ToneOscillatorNode, _OneShotSource);\n\n  var _super = _createSuper(ToneOscillatorNode);\n\n  function ToneOscillatorNode() {\n    var _this;\n\n    _classCallCheck(this, ToneOscillatorNode);\n\n    _this = _super.call(this, optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]));\n    _this.name = \"ToneOscillatorNode\";\n    /**\n     * The oscillator\n     */\n\n    _this._oscillator = _this.context.createOscillator();\n    _this._internalChannels = [_this._oscillator];\n    var options = optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]);\n    connect(_this._oscillator, _this._gainNode);\n    _this.type = options.type;\n    _this.frequency = new Param({\n      context: _this.context,\n      param: _this._oscillator.frequency,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    _this.detune = new Param({\n      context: _this.context,\n      param: _this._oscillator.detune,\n      units: \"cents\",\n      value: options.detune\n    });\n    readOnly(_assertThisInitialized(_this), [\"frequency\", \"detune\"]);\n    return _this;\n  }\n\n  _createClass(ToneOscillatorNode, [{\n    key: \"start\",\n    value:\n    /**\n     * Start the oscillator node at the given time\n     * @param  time When to start the oscillator\n     */\n    function start(time) {\n      var computedTime = this.toSeconds(time);\n      this.log(\"start\", computedTime);\n\n      this._startGain(computedTime);\n\n      this._oscillator.start(computedTime);\n\n      return this;\n    }\n  }, {\n    key: \"_stopSource\",\n    value: function _stopSource(time) {\n      this._oscillator.stop(time);\n    }\n    /**\n     * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n     * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave\n     */\n\n  }, {\n    key: \"setPeriodicWave\",\n    value: function setPeriodicWave(periodicWave) {\n      this._oscillator.setPeriodicWave(periodicWave);\n\n      return this;\n    }\n    /**\n     * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._oscillator.type;\n    },\n    set: function set(type) {\n      this._oscillator.type = type;\n    }\n    /**\n     * Clean up.\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(ToneOscillatorNode.prototype), \"dispose\", this).call(this);\n\n      if (this.state === \"started\") {\n        this.stop();\n      }\n\n      this._oscillator.disconnect();\n\n      this.frequency.dispose();\n      this.detune.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(OneShotSource.getDefaults(), {\n        detune: 0,\n        frequency: 440,\n        type: \"sine\"\n      });\n    }\n  }]);\n\n  return ToneOscillatorNode;\n}(OneShotSource);","map":{"version":3,"mappings":"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","names":["connect","Param","optionsFromArguments","OneShotSource","readOnly","ToneOscillatorNode","getDefaults","arguments","context","createOscillator","_oscillator","options","_gainNode","type","frequency","param","units","value","detune","time","computedTime","toSeconds","log","_startGain","start","stop","periodicWave","setPeriodicWave","state","disconnect","dispose","Object","assign"],"sourceRoot":"","sources":["../../../../Tone/source/oscillator/ToneOscillatorNode.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}