{"ast":null,"code":"export var wrapAudioScheduledSourceNodeStartMethodNegativeParameters = function wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioScheduledSourceNode) {\n  nativeAudioScheduledSourceNode.start = function (start) {\n    return function () {\n      var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var duration = arguments.length > 2 ? arguments[2] : undefined;\n\n      if (typeof duration === 'number' && duration < 0 || offset < 0 || when < 0) {\n        throw new RangeError(\"The parameters can't be negative.\");\n      } // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n\n\n      start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n    };\n  }(nativeAudioScheduledSourceNode.start);\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,yDAAyD,GAAG,SAA5DA,yDAA4D,CACrEC,8BADqE,EAE/D;AACNA,gCAA8B,CAACC,KAA/B,GAAwC,UAACA,KAAD,EAAU;AAC9C,WAAO,YAA4C;AAAA,UAA3CC,IAA2C,uEAApC,CAAoC;AAAA,UAAjCC,MAAiC,uEAAxB,CAAwB;AAAA,UAArBC,QAAqB;;AAC/C,UAAK,OAAOA,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,GAAG,CAA5C,IAAkDD,MAAM,GAAG,CAA3D,IAAgED,IAAI,GAAG,CAA3E,EAA8E;AAC1E,cAAM,IAAIG,UAAJ,CAAe,mCAAf,CAAN;AACH,OAH8C,CAK/C;;;AAC4DJ,WAAM,CAACK,IAAP,CAAYN,8BAAZ,EAA4CE,IAA5C,EAAkDC,MAAlD,EAA0DC,QAA1D;AAC/D,KAPD;AAQH,GATsC,CASpCJ,8BAA8B,CAACC,KATK,CAAvC;AAUH,CAbM","names":["wrapAudioScheduledSourceNodeStartMethodNegativeParameters","nativeAudioScheduledSourceNode","start","when","offset","duration","RangeError","call"],"sourceRoot":"","sources":["../../../src/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}