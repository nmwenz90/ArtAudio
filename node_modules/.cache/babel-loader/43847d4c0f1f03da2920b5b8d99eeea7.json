{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\";\nimport { __awaiter } from \"tslib\";\nimport { BaseContext } from \"./BaseContext\";\nexport var DummyContext = /*#__PURE__*/function (_BaseContext) {\n  _inherits(DummyContext, _BaseContext);\n\n  var _super = _createSuper(DummyContext);\n\n  function DummyContext() {\n    var _this;\n\n    _classCallCheck(this, DummyContext);\n\n    _this = _super.apply(this, arguments);\n    _this.lookAhead = 0;\n    _this.latencyHint = 0;\n    _this.isOffline = false;\n    return _this;\n  } //---------------------------\n  // BASE AUDIO CONTEXT METHODS\n  //---------------------------\n\n\n  _createClass(DummyContext, [{\n    key: \"createAnalyser\",\n    value: function createAnalyser() {\n      return {};\n    }\n  }, {\n    key: \"createOscillator\",\n    value: function createOscillator() {\n      return {};\n    }\n  }, {\n    key: \"createBufferSource\",\n    value: function createBufferSource() {\n      return {};\n    }\n  }, {\n    key: \"createBiquadFilter\",\n    value: function createBiquadFilter() {\n      return {};\n    }\n  }, {\n    key: \"createBuffer\",\n    value: function createBuffer(_numberOfChannels, _length, _sampleRate) {\n      return {};\n    }\n  }, {\n    key: \"createChannelMerger\",\n    value: function createChannelMerger(_numberOfInputs) {\n      return {};\n    }\n  }, {\n    key: \"createChannelSplitter\",\n    value: function createChannelSplitter(_numberOfOutputs) {\n      return {};\n    }\n  }, {\n    key: \"createConstantSource\",\n    value: function createConstantSource() {\n      return {};\n    }\n  }, {\n    key: \"createConvolver\",\n    value: function createConvolver() {\n      return {};\n    }\n  }, {\n    key: \"createDelay\",\n    value: function createDelay(_maxDelayTime) {\n      return {};\n    }\n  }, {\n    key: \"createDynamicsCompressor\",\n    value: function createDynamicsCompressor() {\n      return {};\n    }\n  }, {\n    key: \"createGain\",\n    value: function createGain() {\n      return {};\n    }\n  }, {\n    key: \"createIIRFilter\",\n    value: function createIIRFilter(_feedForward, _feedback) {\n      return {};\n    }\n  }, {\n    key: \"createPanner\",\n    value: function createPanner() {\n      return {};\n    }\n  }, {\n    key: \"createPeriodicWave\",\n    value: function createPeriodicWave(_real, _imag, _constraints) {\n      return {};\n    }\n  }, {\n    key: \"createStereoPanner\",\n    value: function createStereoPanner() {\n      return {};\n    }\n  }, {\n    key: \"createWaveShaper\",\n    value: function createWaveShaper() {\n      return {};\n    }\n  }, {\n    key: \"createMediaStreamSource\",\n    value: function createMediaStreamSource(_stream) {\n      return {};\n    }\n  }, {\n    key: \"createMediaElementSource\",\n    value: function createMediaElementSource(_element) {\n      return {};\n    }\n  }, {\n    key: \"createMediaStreamDestination\",\n    value: function createMediaStreamDestination() {\n      return {};\n    }\n  }, {\n    key: \"decodeAudioData\",\n    value: function decodeAudioData(_audioData) {\n      return Promise.resolve({});\n    } //---------------------------\n    // TONE AUDIO CONTEXT METHODS\n    //---------------------------\n\n  }, {\n    key: \"createAudioWorkletNode\",\n    value: function createAudioWorkletNode(_name, _options) {\n      return {};\n    }\n  }, {\n    key: \"rawContext\",\n    get: function get() {\n      return {};\n    }\n  }, {\n    key: \"addAudioWorkletModule\",\n    value: function addAudioWorkletModule(_url, _name) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", Promise.resolve());\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      return Promise.resolve();\n    }\n  }, {\n    key: \"setTimeout\",\n    value: function setTimeout(_fn, _timeout) {\n      return 0;\n    }\n  }, {\n    key: \"clearTimeout\",\n    value: function clearTimeout(_id) {\n      return this;\n    }\n  }, {\n    key: \"setInterval\",\n    value: function setInterval(_fn, _interval) {\n      return 0;\n    }\n  }, {\n    key: \"clearInterval\",\n    value: function clearInterval(_id) {\n      return this;\n    }\n  }, {\n    key: \"getConstant\",\n    value: function getConstant(_val) {\n      return {};\n    }\n  }, {\n    key: \"currentTime\",\n    get: function get() {\n      return 0;\n    }\n  }, {\n    key: \"state\",\n    get: function get() {\n      return {};\n    }\n  }, {\n    key: \"sampleRate\",\n    get: function get() {\n      return 0;\n    }\n  }, {\n    key: \"listener\",\n    get: function get() {\n      return {};\n    }\n  }, {\n    key: \"transport\",\n    get: function get() {\n      return {};\n    }\n  }, {\n    key: \"draw\",\n    get: function get() {\n      return {};\n    },\n    set: function set(_d) {}\n  }, {\n    key: \"destination\",\n    get: function get() {\n      return {};\n    },\n    set: function set(_d) {}\n  }, {\n    key: \"now\",\n    value: function now() {\n      return 0;\n    }\n  }, {\n    key: \"immediate\",\n    value: function immediate() {\n      return 0;\n    }\n  }]);\n\n  return DummyContext;\n}(BaseContext);","map":{"version":3,"mappings":"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","names":["BaseContext","DummyContext","_numberOfChannels","_length","_sampleRate","_numberOfInputs","_numberOfOutputs","_maxDelayTime","_feedForward","_feedback","_real","_imag","_constraints","_stream","_element","_audioData","Promise","resolve","_name","_options","_url","_fn","_timeout","_id","_interval","_val","_d"],"sourceRoot":"","sources":["../../../../Tone/core/context/DummyContext.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}