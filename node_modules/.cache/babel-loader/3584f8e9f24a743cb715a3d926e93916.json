{"ast":null,"code":"import _objectSpread from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar DEFAULT_OPTIONS = {\n  channelCount: 6,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'discrete',\n  numberOfOutputs: 6\n};\nexport var createChannelSplitterNodeConstructor = function createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(ChannelSplitterNode, _audioNodeConstructor);\n\n    var _super = _createSuper(ChannelSplitterNode);\n\n    function ChannelSplitterNode(context, options) {\n      _classCallCheck(this, ChannelSplitterNode);\n\n      var nativeContext = getNativeContext(context);\n      var mergedOptions = sanitizeChannelSplitterOptions(_objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options));\n      var nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n      var channelSplitterNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null;\n      return _super.call(this, context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n    }\n\n    return _createClass(ChannelSplitterNode);\n  }(audioNodeConstructor);\n};","map":{"version":3,"mappings":";;;;;AAGA,IAAMA,eAAe,GAAG;AACpBC,cAAY,EAAE,CADM;AAEpBC,kBAAgB,EAAE,UAFE;AAGpBC,uBAAqB,EAAE,UAHH;AAIpBC,iBAAe,EAAE;AAJG,CAAxB;AAOA,OAAO,IAAMC,oCAAoC,GAA2C,SAA/EA,oCAA+E,CACxFC,oBADwF,EAExFC,iCAFwF,EAGxFC,+BAHwF,EAIxFC,gBAJwF,EAKxFC,2BALwF,EAMxFC,8BANwF,EAOxF;AACA;AAAA;;AAAA;;AACI,iCAAYC,OAAZ,EAAwBC,OAAxB,EAAkE;AAAA;;AAC9D,UAAMC,aAAa,GAAGL,gBAAgB,CAACG,OAAD,CAAtC;AACA,UAAMG,aAAa,GAAGJ,8BAA8B,iCAAMX,eAAN,GAA0Ba,OAA1B,EAApD;AACA,UAAMG,yBAAyB,GAAGR,+BAA+B,CAACM,aAAD,EAAgBC,aAAhB,CAAjE;AACA,UAAME,2BAA2B,GAC5BP,2BAA2B,CAACI,aAAD,CAA3B,GAA6CP,iCAAiC,EAA9E,GAAmF,IADxF;AAJ8D,+BAQxDK,OARwD,EAQ/C,KAR+C,EAQxCI,yBARwC,EAQbC,2BARa;AASjE;;AAVL;AAAA,IAA6DX,oBAA7D;AAYH,CApBM","names":["DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","numberOfOutputs","createChannelSplitterNodeConstructor","audioNodeConstructor","createChannelSplitterNodeRenderer","createNativeChannelSplitterNode","getNativeContext","isNativeOfflineAudioContext","sanitizeChannelSplitterOptions","context","options","nativeContext","mergedOptions","nativeChannelSplitterNode","channelSplitterNodeRenderer"],"sourceRoot":"","sources":["../../../src/factories/channel-splitter-node-constructor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}