{"ast":null,"code":"import { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nexport var createAddConnectionToAudioNode = function createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode) {\n  var tailTimeTimeoutIds = new WeakMap();\n  return function (source, destination, output, input, isOffline) {\n    var _getAudioNodeConnecti = getAudioNodeConnections(destination),\n        activeInputs = _getAudioNodeConnecti.activeInputs,\n        passiveInputs = _getAudioNodeConnecti.passiveInputs;\n\n    var _getAudioNodeConnecti2 = getAudioNodeConnections(source),\n        outputs = _getAudioNodeConnecti2.outputs;\n\n    var eventListeners = getEventListenersOfAudioNode(source);\n\n    var eventListener = function eventListener(isActive) {\n      var nativeDestinationAudioNode = getNativeAudioNode(destination);\n      var nativeSourceAudioNode = getNativeAudioNode(source);\n\n      if (isActive) {\n        var partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n\n        if (!isOffline && !isPartOfACycle(source)) {\n          connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n        }\n\n        if (isPassiveAudioNode(destination)) {\n          setInternalStateToActive(destination);\n        }\n      } else {\n        var _partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n\n        addPassiveInputConnectionToAudioNode(passiveInputs, input, _partialConnection, false);\n\n        if (!isOffline && !isPartOfACycle(source)) {\n          disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n        }\n\n        var tailTime = getAudioNodeTailTime(destination);\n\n        if (tailTime === 0) {\n          if (isActiveAudioNode(destination)) {\n            setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n          }\n        } else {\n          var tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);\n\n          if (tailTimeTimeoutId !== undefined) {\n            clearTimeout(tailTimeTimeoutId);\n          }\n\n          tailTimeTimeoutIds.set(destination, setTimeout(function () {\n            if (isActiveAudioNode(destination)) {\n              setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n            }\n          }, tailTime * 1000));\n        }\n      }\n    };\n\n    if (insertElementInSet(outputs, [destination, output, input], function (outputConnection) {\n      return outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input;\n    }, true)) {\n      eventListeners.add(eventListener);\n\n      if (isActiveAudioNode(source)) {\n        addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n      } else {\n        addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n};","map":{"version":3,"mappings":"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","names":["deletePassiveInputConnectionToAudioNode","setInternalStateToActive","setInternalStateToPassiveWhenNecessary","createAddConnectionToAudioNode","addActiveInputConnectionToAudioNode","addPassiveInputConnectionToAudioNode","connectNativeAudioNodeToNativeAudioNode","deleteActiveInputConnectionToAudioNode","disconnectNativeAudioNodeFromNativeAudioNode","getAudioNodeConnections","getAudioNodeTailTime","getEventListenersOfAudioNode","getNativeAudioNode","insertElementInSet","isActiveAudioNode","isPartOfACycle","isPassiveAudioNode","tailTimeTimeoutIds","WeakMap","source","destination","output","input","isOffline","activeInputs","passiveInputs","outputs","eventListeners","eventListener","isActive","nativeDestinationAudioNode","nativeSourceAudioNode","partialConnection","tailTime","tailTimeTimeoutId","get","undefined","clearTimeout","set","setTimeout","outputConnection","add"],"sourceRoot":"","sources":["../../../src/factories/add-connection-to-audio-node.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}