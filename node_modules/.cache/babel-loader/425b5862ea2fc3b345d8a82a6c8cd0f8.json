{"ast":null,"code":"import _asyncToGenerator from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\";\nexport var createIsSupportedPromise = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cacheTestResult, testAudioBufferCopyChannelMethodsSubarraySupport, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testAudioNodeConnectMethodSupport, testAudioWorkletProcessorNoOutputsSupport, testChannelMergerNodeChannelCountSupport, testConstantSourceNodeAccurateSchedulingSupport, testConvolverNodeBufferReassignabilitySupport, testConvolverNodeChannelCountSupport, testDomExceptionContrucorSupport, testIsSecureContextSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testStereoPannerNodeDefaultValueSupport, testTransferablesSupport) {\n    var results;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, testAudioBufferCopyChannelMethodsSubarraySupport) && cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport) && cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport) && cacheTestResult(testAudioNodeConnectMethodSupport, testAudioNodeConnectMethodSupport) && cacheTestResult(testChannelMergerNodeChannelCountSupport, testChannelMergerNodeChannelCountSupport) && cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport) && cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport) && cacheTestResult(testConvolverNodeChannelCountSupport, testConvolverNodeChannelCountSupport) && cacheTestResult(testDomExceptionContrucorSupport, testDomExceptionContrucorSupport) && cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport) && cacheTestResult(testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport))) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 3;\n            return Promise.all([cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport), cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport), cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport), cacheTestResult(testTransferablesSupport, testTransferablesSupport)]);\n\n          case 3:\n            results = _context.sent;\n            return _context.abrupt(\"return\", results.every(function (result) {\n              return result;\n            }));\n\n          case 5:\n            return _context.abrupt(\"return\", false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function createIsSupportedPromise(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"mappings":";;AAEA,OAAO,IAAMA,wBAAwB;AAAA,sEAA+B,iBAChEC,eADgE,EAEhEC,gDAFgE,EAGhEC,kCAHgE,EAIhEC,qDAJgE,EAKhEC,8BALgE,EAMhEC,iCANgE,EAOhEC,yCAPgE,EAQhEC,wCARgE,EAShEC,+CATgE,EAUhEC,6CAVgE,EAWhEC,oCAXgE,EAYhEC,gCAZgE,EAahEC,0BAbgE,EAchEC,iEAdgE,EAehEC,uCAfgE,EAgBhEC,wBAhBgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAmB5Df,eAAe,CAACC,gDAAD,EAAmDA,gDAAnD,CAAf,IACAD,eAAe,CAACE,kCAAD,EAAqCA,kCAArC,CADf,IAEAF,eAAe,CAACI,8BAAD,EAAiCA,8BAAjC,CAFf,IAGAJ,eAAe,CAACK,iCAAD,EAAoCA,iCAApC,CAHf,IAIAL,eAAe,CAACO,wCAAD,EAA2CA,wCAA3C,CAJf,IAKAP,eAAe,CAACQ,+CAAD,EAAkDA,+CAAlD,CALf,IAMAR,eAAe,CAACS,6CAAD,EAAgDA,6CAAhD,CANf,IAOAT,eAAe,CAACU,oCAAD,EAAuCA,oCAAvC,CAPf,IAQAV,eAAe,CAACW,gCAAD,EAAmCA,gCAAnC,CARf,IASAX,eAAe,CAACY,0BAAD,EAA6BA,0BAA7B,CATf,IAUAZ,eAAe,CACXa,iEADW,EAEXA,iEAFW,CA7B6C;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAkCtCG,OAAO,CAACC,GAAR,CAAY,CAC9BjB,eAAe,CAACG,qDAAD,EAAwDA,qDAAxD,CADe,EAE9BH,eAAe,CAACM,yCAAD,EAA4CA,yCAA5C,CAFe,EAG9BN,eAAe,CAACc,uCAAD,EAA0CA,uCAA1C,CAHe,EAI9Bd,eAAe,CAACe,wBAAD,EAA2BA,wBAA3B,CAJe,CAAZ,CAlCsC;;AAAA;AAkCtDG,mBAlCsD;AAAA,6CAyCrDA,OAAO,CAACC,KAAR,CAAc,UAACC,MAAD;AAAA,qBAAYA,MAAZ;AAAA,aAAd,CAzCqD;;AAAA;AAAA,6CA4CzD,KA5CyD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA,kBAAxBrB,wBAAwB;AAAA;AAAA;AAAA,GAA9B","names":["createIsSupportedPromise","cacheTestResult","testAudioBufferCopyChannelMethodsSubarraySupport","testAudioContextCloseMethodSupport","testAudioContextDecodeAudioDataMethodTypeErrorSupport","testAudioContextOptionsSupport","testAudioNodeConnectMethodSupport","testAudioWorkletProcessorNoOutputsSupport","testChannelMergerNodeChannelCountSupport","testConstantSourceNodeAccurateSchedulingSupport","testConvolverNodeBufferReassignabilitySupport","testConvolverNodeChannelCountSupport","testDomExceptionContrucorSupport","testIsSecureContextSupport","testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport","testStereoPannerNodeDefaultValueSupport","testTransferablesSupport","Promise","all","results","every","result"],"sourceRoot":"","sources":["../../../src/factories/is-supported-promise.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}