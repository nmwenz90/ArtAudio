{"ast":null,"code":"import _objectSpread from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nvar DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers'\n};\nexport var createIIRFilterNodeConstructor = function createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(IIRFilterNode, _audioNodeConstructor);\n\n    var _super = _createSuper(IIRFilterNode);\n\n    function IIRFilterNode(context, options) {\n      var _this;\n\n      _classCallCheck(this, IIRFilterNode);\n\n      var nativeContext = getNativeContext(context);\n      var isOffline = isNativeOfflineAudioContext(nativeContext);\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n      var iirFilterNodeRenderer = isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null;\n      _this = _super.call(this, context, false, nativeIIRFilterNode, iirFilterNodeRenderer); // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n      // @todo Write a test which allows other browsers to remain unpatched.\n\n      wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n      _this._nativeIIRFilterNode = nativeIIRFilterNode; // @todo Determine a meaningful tail-time instead of just using one second.\n\n      setAudioNodeTailTime(_assertThisInitialized(_this), 1);\n      return _this;\n    }\n\n    _createClass(IIRFilterNode, [{\n      key: \"getFrequencyResponse\",\n      value: function getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n        return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n      }\n    }]);\n\n    return IIRFilterNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,2CAAT,QAA4D,+DAA5D;AAIA,IAAMC,eAAe,GAAG;AACpBC,cAAY,EAAE,CADM;AAEpBC,kBAAgB,EAAE,KAFE;AAGpBC,uBAAqB,EAAE;AAHH,CAAxB;AAMA,OAAO,IAAMC,8BAA8B,GAAqC,SAAnEA,8BAAmE,CAC5EC,oBAD4E,EAE5EC,yBAF4E,EAG5EC,2BAH4E,EAI5EC,gBAJ4E,EAK5EC,2BAL4E,EAM5EC,oBAN4E,EAO5E;AACA;AAAA;;AAAA;;AAGI,2BACIC,OADJ,EAEIC,OAFJ,EAEoI;AAAA;;AAAA;;AAEhI,UAAMC,aAAa,GAAGL,gBAAgB,CAACG,OAAD,CAAtC;AACA,UAAMG,SAAS,GAAGL,2BAA2B,CAACI,aAAD,CAA7C;;AACA,UAAME,aAAa,mCAAQf,eAAR,GAA4BY,OAA5B,CAAnB;;AACA,UAAMI,mBAAmB,GAAGV,yBAAyB,CACjDO,aADiD,EAEjDC,SAAS,GAAG,IAAH,GAAuCH,OAAS,CAACM,WAFT,EAGjDF,aAHiD,CAArD;AAKA,UAAMG,qBAAqB,GACtBJ,SAAS,GAAGP,2BAA2B,CAACQ,aAAa,CAACI,QAAf,EAAyBJ,aAAa,CAACK,WAAvC,CAA9B,GAAoF,IADlG;AAIA,gCAAMT,OAAN,EAAe,KAAf,EAAsBK,mBAAtB,EAA2CE,qBAA3C,EAdgI,CAgBhI;AACA;;AACAnB,iDAA2C,CAACiB,mBAAD,CAA3C;AAEA,YAAKK,oBAAL,GAA4BL,mBAA5B,CApBgI,CAsBhI;;AACAN,0BAAoB,gCAAO,CAAP,CAApB;AAvBgI;AAwBnI;;AA7BL;AAAA;AAAA,aA+BW,8BAAqBY,WAArB,EAAgDC,WAAhD,EAA2EC,aAA3E,EAAsG;AACzG,eAAO,KAAKH,oBAAL,CAA0BI,oBAA1B,CAA+CH,WAA/C,EAA4DC,WAA5D,EAAyEC,aAAzE,CAAP;AACH;AAjCL;;AAAA;AAAA,IAAuDnB,oBAAvD;AAmCH,CA3CM","names":["wrapIIRFilterNodeGetFrequencyResponseMethod","DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","createIIRFilterNodeConstructor","audioNodeConstructor","createNativeIIRFilterNode","createIIRFilterNodeRenderer","getNativeContext","isNativeOfflineAudioContext","setAudioNodeTailTime","context","options","nativeContext","isOffline","mergedOptions","nativeIIRFilterNode","baseLatency","iirFilterNodeRenderer","feedback","feedforward","_nativeIIRFilterNode","frequencyHz","magResponse","phaseResponse","getFrequencyResponse"],"sourceRoot":"","sources":["../../../src/factories/iir-filter-node-constructor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}