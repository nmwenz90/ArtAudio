{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Tone } from \"../Tone\";\nimport { isUndef } from \"./TypeCheck\";\n/**\n * Emitter gives classes which extend it\n * the ability to listen for and emit events.\n * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n * MIT (c) 2011 Jerome Etienne.\n * @category Core\n */\n\nexport var Emitter = /*#__PURE__*/function (_Tone) {\n  _inherits(Emitter, _Tone);\n\n  var _super = _createSuper(Emitter);\n\n  function Emitter() {\n    var _this;\n\n    _classCallCheck(this, Emitter);\n\n    _this = _super.apply(this, arguments);\n    _this.name = \"Emitter\";\n    return _this;\n  }\n  /**\n   * Bind a callback to a specific event.\n   * @param  event     The name of the event to listen for.\n   * @param  callback  The callback to invoke when the event is emitted\n   */\n\n\n  _createClass(Emitter, [{\n    key: \"on\",\n    value: function on(event, callback) {\n      var _this2 = this;\n\n      // split the event\n      var events = event.split(/\\W+/);\n      events.forEach(function (eventName) {\n        if (isUndef(_this2._events)) {\n          _this2._events = {};\n        }\n\n        if (!_this2._events.hasOwnProperty(eventName)) {\n          _this2._events[eventName] = [];\n        }\n\n        _this2._events[eventName].push(callback);\n      });\n      return this;\n    }\n    /**\n     * Bind a callback which is only invoked once\n     * @param  event     The name of the event to listen for.\n     * @param  callback  The callback to invoke when the event is emitted\n     */\n\n  }, {\n    key: \"once\",\n    value: function once(event, callback) {\n      var _this3 = this;\n\n      var boundCallback = function boundCallback() {\n        // invoke the callback\n        callback.apply(void 0, arguments); // remove the event\n\n        _this3.off(event, boundCallback);\n      };\n\n      this.on(event, boundCallback);\n      return this;\n    }\n    /**\n     * Remove the event listener.\n     * @param  event     The event to stop listening to.\n     * @param  callback  The callback which was bound to the event with Emitter.on.\n     *                   If no callback is given, all callbacks events are removed.\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(event, callback) {\n      var _this4 = this;\n\n      var events = event.split(/\\W+/);\n      events.forEach(function (eventName) {\n        if (isUndef(_this4._events)) {\n          _this4._events = {};\n        }\n\n        if (_this4._events.hasOwnProperty(event)) {\n          if (isUndef(callback)) {\n            _this4._events[event] = [];\n          } else {\n            var eventList = _this4._events[event];\n\n            for (var i = eventList.length - 1; i >= 0; i--) {\n              if (eventList[i] === callback) {\n                eventList.splice(i, 1);\n              }\n            }\n          }\n        }\n      });\n      return this;\n    }\n    /**\n     * Invoke all of the callbacks bound to the event\n     * with any arguments passed in.\n     * @param  event  The name of the event.\n     * @param args The arguments to pass to the functions listening.\n     */\n\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      if (this._events) {\n        if (this._events.hasOwnProperty(event)) {\n          var eventList = this._events[event].slice(0);\n\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          for (var i = 0, len = eventList.length; i < len; i++) {\n            eventList[i].apply(this, args);\n          }\n        }\n      }\n\n      return this;\n    }\n    /**\n     * Add Emitter functions (on/off/emit) to the object\n     */\n\n  }, {\n    key: \"dispose\",\n    value:\n    /**\n     * Clean up\n     */\n    function dispose() {\n      _get(_getPrototypeOf(Emitter.prototype), \"dispose\", this).call(this);\n\n      this._events = undefined;\n      return this;\n    }\n  }], [{\n    key: \"mixin\",\n    value: function mixin(constr) {\n      // instance._events = {};\n      [\"on\", \"once\", \"off\", \"emit\"].forEach(function (name) {\n        var property = Object.getOwnPropertyDescriptor(Emitter.prototype, name);\n        Object.defineProperty(constr.prototype, name, property);\n      });\n    }\n  }]);\n\n  return Emitter;\n}(Tone);","map":{"version":3,"mappings":"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","names":["Tone","isUndef","Emitter","event","callback","events","split","forEach","_events","hasOwnProperty","eventName","push","boundCallback","off","on","eventList","i","length","splice","slice","args","len","apply","undefined","constr","property","Object","getOwnPropertyDescriptor","prototype","name","defineProperty"],"sourceRoot":"","sources":["../../../../Tone/core/util/Emitter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}