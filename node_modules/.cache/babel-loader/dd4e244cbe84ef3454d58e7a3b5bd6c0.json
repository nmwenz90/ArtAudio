{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/**\n * Tone.js\n * @author Yotam Mann\n * @license http://opensource.org/licenses/MIT MIT License\n * @copyright 2014-2019 Yotam Mann\n */\nimport { version } from \"../version\";\nimport { theWindow } from \"./context/AudioContext\";\nimport { log as _log } from \"./util/Debug\";\n/**\n * @class  Tone is the base class of all other classes.\n * @category Core\n * @constructor\n */\n\nexport var Tone = /*#__PURE__*/function () {\n  function Tone() {\n    _classCallCheck(this, Tone);\n\n    //-------------------------------------\n    // \tDEBUGGING\n    //-------------------------------------\n\n    /**\n     * Set this debug flag to log all events that happen in this class.\n     */\n    this.debug = false; //-------------------------------------\n    // \tDISPOSING\n    //-------------------------------------\n\n    /**\n     * Indicates if the instance was disposed\n     */\n\n    this._wasDisposed = false;\n  }\n  /**\n   * Returns all of the default options belonging to the class.\n   */\n\n\n  _createClass(Tone, [{\n    key: \"log\",\n    value:\n    /**\n     * Prints the outputs to the console log for debugging purposes.\n     * Prints the contents only if either the object has a property\n     * called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n     * is set to the name of the class.\n     * @example\n     * const osc = new Tone.Oscillator();\n     * // prints all logs originating from this oscillator\n     * osc.debug = true;\n     * // calls to start/stop will print in the console\n     * osc.start();\n     */\n    function log() {\n      // if the object is either set to debug = true\n      // or if there is a string on the Tone.global.with the class name\n      if (this.debug || theWindow && this.toString() === theWindow.TONE_DEBUG_CLASS) {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _log.apply(void 0, [this].concat(args));\n      }\n    }\n    /**\n     * disconnect and dispose.\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._wasDisposed = true;\n      return this;\n    }\n    /**\n     * Indicates if the instance was disposed. 'Disposing' an\n     * instance means that all of the Web Audio nodes that were\n     * created for the instance are disconnected and freed for garbage collection.\n     */\n\n  }, {\n    key: \"disposed\",\n    get: function get() {\n      return this._wasDisposed;\n    }\n    /**\n     * Convert the class to a string\n     * @example\n     * const osc = new Tone.Oscillator();\n     * console.log(osc.toString());\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.name;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return {};\n    }\n  }]);\n\n  return Tone;\n}();\n/**\n * The version number semver\n */\n\nTone.version = version;","map":{"version":3,"mappings":";;;AAAA;;;;;;AAMA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,GAAG,IAAHA,IAAT,QAAoB,cAApB;AASA;;;;;;AAKA,WAAsBC,IAAtB;AAAA;AAAA;;AAmBC;AACA;AACA;;AAEA;;;AAGA,iBAAQ,KAAR,CA1BD,CAgDC;AACA;AACA;;AAEA;;;;AAGQ,wBAAe,KAAf;AA4BR;AAvEA;;;;;AAZD;AAAA;AAAA;AA4BC;;;;;;;;;;;;AAYU,mBAAkB;AAC3B;AACA;AACA,UAAI,KAAKC,KAAL,IAAeH,SAAS,IAAI,KAAKI,QAAL,OAAoBJ,SAAS,CAACK,gBAA9D,EAAiF;AAAA,0CAHjEC,IAGiE;AAHjEA,cAGiE;AAAA;;AAChFL,YAAG,MAAH,UAAI,IAAJ,SAAaK,IAAb;AACA;AACD;AAWD;;;;AAzDD;AAAA;AAAA,WA4DC,mBAAO;AACN,WAAKC,YAAL,GAAoB,IAApB;AACA,aAAO,IAAP;AACA;AAED;;;;;;AAjED;AAAA;AAAA,SAsEC,eAAY;AACX,aAAO,KAAKA,YAAZ;AACA;AAED;;;;;;;AA1ED;AAAA;AAAA,WAgFC,oBAAQ;AACP,aAAO,KAAKC,IAAZ;AACA;AAlFF;AAAA;AAAA,WAeC,uBAAkB;AACjB,aAAO,EAAP;AACA;AAjBF;;AAAA;AAAA;AAEC;;;;AAGON,eAAkBH,OAAlB","names":["version","theWindow","log","Tone","debug","toString","TONE_DEBUG_CLASS","args","_wasDisposed","name"],"sourceRoot":"","sources":["../../../Tone/core/Tone.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}