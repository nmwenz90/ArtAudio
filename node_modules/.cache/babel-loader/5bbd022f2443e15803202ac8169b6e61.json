{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { connect } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { OneShotSource } from \"../source/OneShotSource\";\n/**\n * Wrapper around the native fire-and-forget ConstantSource.\n * Adds the ability to reschedule the stop method.\n * @category Signal\n */\n\nexport var ToneConstantSource = /*#__PURE__*/function (_OneShotSource) {\n  _inherits(ToneConstantSource, _OneShotSource);\n\n  var _super = _createSuper(ToneConstantSource);\n\n  function ToneConstantSource() {\n    var _this;\n\n    _classCallCheck(this, ToneConstantSource);\n\n    _this = _super.call(this, optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]));\n    _this.name = \"ToneConstantSource\";\n    /**\n     * The signal generator\n     */\n\n    _this._source = _this.context.createConstantSource();\n    var options = optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]);\n    connect(_this._source, _this._gainNode);\n    _this.offset = new Param({\n      context: _this.context,\n      convert: options.convert,\n      param: _this._source.offset,\n      units: options.units,\n      value: options.offset,\n      minValue: options.minValue,\n      maxValue: options.maxValue\n    });\n    return _this;\n  }\n\n  _createClass(ToneConstantSource, [{\n    key: \"start\",\n    value:\n    /**\n     * Start the source node at the given time\n     * @param  time When to start the source\n     */\n    function start(time) {\n      var computedTime = this.toSeconds(time);\n      this.log(\"start\", computedTime);\n\n      this._startGain(computedTime);\n\n      this._source.start(computedTime);\n\n      return this;\n    }\n  }, {\n    key: \"_stopSource\",\n    value: function _stopSource(time) {\n      this._source.stop(time);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(ToneConstantSource.prototype), \"dispose\", this).call(this);\n\n      if (this.state === \"started\") {\n        this.stop();\n      }\n\n      this._source.disconnect();\n\n      this.offset.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(OneShotSource.getDefaults(), {\n        convert: true,\n        offset: 1,\n        units: \"number\"\n      });\n    }\n  }]);\n\n  return ToneConstantSource;\n}(OneShotSource);","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,+BAAxB;AACA,SAASC,KAAT,QAAsB,uBAAtB;AAEA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,aAAT,QAAoD,yBAApD;AAUA;;;;;;AAKA,WAAaC,kBAAb;AAAA;;AAAA;;AAmBC;AAAA;;AAAA;;AAEC,8BAAMF,oBAAoB,CAACE,kBAAkB,CAACC,WAAnB,EAAD,EAAmCC,SAAnC,EAA8C,CAAC,QAAD,CAA9C,CAA1B;AAnBQ,iBAAe,oBAAf;AAET;;;;AAGQ,oBAAU,MAAKC,OAAL,CAAaC,oBAAb,EAAV;AAeP,QAAMC,OAAO,GAAGP,oBAAoB,CAACE,kBAAkB,CAACC,WAAnB,EAAD,EAAmCC,SAAnC,EAA8C,CAAC,QAAD,CAA9C,CAApC;AAEAN,WAAO,CAAC,MAAKU,OAAN,EAAe,MAAKC,SAApB,CAAP;AAEA,UAAKC,MAAL,GAAc,IAAIX,KAAJ,CAAU;AACvBM,aAAO,EAAE,MAAKA,OADS;AAEvBM,aAAO,EAAEJ,OAAO,CAACI,OAFM;AAGvBC,WAAK,EAAE,MAAKJ,OAAL,CAAaE,MAHG;AAIvBG,WAAK,EAAEN,OAAO,CAACM,KAJQ;AAKvBC,WAAK,EAAEP,OAAO,CAACG,MALQ;AAMvBK,cAAQ,EAAER,OAAO,CAACQ,QANK;AAOvBC,cAAQ,EAAET,OAAO,CAACS;AAPK,KAAV,CAAd;AAPD;AAgBC;;AAnCF;AAAA;AAAA;AA6CC;;;;AAIA,mBAAMC,IAAN,EAAiB;AAChB,UAAMC,YAAY,GAAG,KAAKC,SAAL,CAAeF,IAAf,CAArB;AACA,WAAKG,GAAL,CAAS,OAAT,EAAkBF,YAAlB;;AACA,WAAKG,UAAL,CAAgBH,YAAhB;;AACA,WAAKV,OAAL,CAAac,KAAb,CAAmBJ,YAAnB;;AACA,aAAO,IAAP;AACA;AAvDF;AAAA;AAAA,WAyDW,qBAAYD,IAAZ,EAA0B;AACnC,WAAKT,OAAL,CAAae,IAAb,CAAkBN,IAAlB;AACA;AA3DF;AAAA;AAAA,WA6DC,mBAAO;AACN;;AACA,UAAI,KAAKO,KAAL,KAAe,SAAnB,EAA8B;AAC7B,aAAKD,IAAL;AACA;;AACD,WAAKf,OAAL,CAAaiB,UAAb;;AACA,WAAKf,MAAL,CAAYgB,OAAZ;AACA,aAAO,IAAP;AACA;AArEF;AAAA;AAAA,WAqCC,uBAAkB;AACjB,aAAOC,MAAM,CAACC,MAAP,CAAc3B,aAAa,CAACE,WAAd,EAAd,EAA2C;AACjDQ,eAAO,EAAE,IADwC;AAEjDD,cAAM,EAAE,CAFyC;AAGjDG,aAAK,EAAE;AAH0C,OAA3C,CAAP;AAKA;AA3CF;;AAAA;AAAA,EAA8EZ,aAA9E","names":["connect","Param","optionsFromArguments","OneShotSource","ToneConstantSource","getDefaults","arguments","context","createConstantSource","options","_source","_gainNode","offset","convert","param","units","value","minValue","maxValue","time","computedTime","toSeconds","log","_startGain","start","stop","state","disconnect","dispose","Object","assign"],"sourceRoot":"","sources":["../../../Tone/signal/ToneConstantSource.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}