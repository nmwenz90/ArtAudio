{"ast":null,"code":"import { isNativeAudioNode } from '../guards/native-audio-node';\n\nvar getOutputAudioNodeAtIndex = function getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output) {\n  var outputAudioNode = outputAudioNodes[output];\n\n  if (outputAudioNode === undefined) {\n    throw createIndexSizeError();\n  }\n\n  return outputAudioNode;\n};\n\nexport var createDisconnectMultipleOutputs = function createDisconnectMultipleOutputs(createIndexSizeError) {\n  return function (outputAudioNodes) {\n    var destinationOrOutput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    var output = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    var input = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    if (destinationOrOutput === undefined) {\n      return outputAudioNodes.forEach(function (outputAudioNode) {\n        return outputAudioNode.disconnect();\n      });\n    }\n\n    if (typeof destinationOrOutput === 'number') {\n      return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n    }\n\n    if (isNativeAudioNode(destinationOrOutput)) {\n      if (output === undefined) {\n        return outputAudioNodes.forEach(function (outputAudioNode) {\n          return outputAudioNode.disconnect(destinationOrOutput);\n        });\n      }\n\n      if (input === undefined) {\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n      }\n\n      return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n    }\n\n    if (output === undefined) {\n      return outputAudioNodes.forEach(function (outputAudioNode) {\n        return outputAudioNode.disconnect(destinationOrOutput);\n      });\n    }\n\n    return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n  };\n};","map":{"version":3,"mappings":"AAAA,SAASA,iBAAT,QAAkC,6BAAlC;;AAGA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAC9BC,oBAD8B,EAE9BC,gBAF8B,EAG9BC,MAH8B,EAIZ;AAClB,MAAMC,eAAe,GAAGF,gBAAgB,CAACC,MAAD,CAAxC;;AAEA,MAAIC,eAAe,KAAKC,SAAxB,EAAmC;AAC/B,UAAMJ,oBAAoB,EAA1B;AACH;;AAED,SAAOG,eAAP;AACH,CAZD;;AAcA,OAAO,IAAME,+BAA+B,GAAsC,SAArEA,+BAAqE,CAACL,oBAAD,EAAyB;AACvG,SAAO,UAACC,gBAAD,EAAqF;AAAA,QAAlEK,mBAAkE,uEAA5CF,SAA4C;AAAA,QAAjCF,MAAiC,uEAAxBE,SAAwB;AAAA,QAAbG,KAAa,uEAAL,CAAK;;AACxF,QAAID,mBAAmB,KAAKF,SAA5B,EAAuC;AACnC,aAAOH,gBAAgB,CAACO,OAAjB,CAAyB,UAACL,eAAD;AAAA,eAAqBA,eAAe,CAACM,UAAhB,EAArB;AAAA,OAAzB,CAAP;AACH;;AAED,QAAI,OAAOH,mBAAP,KAA+B,QAAnC,EAA6C;AACzC,aAAOP,yBAAyB,CAACC,oBAAD,EAAuBC,gBAAvB,EAAyCK,mBAAzC,CAAzB,CAAuFG,UAAvF,EAAP;AACH;;AAED,QAAIX,iBAAiB,CAACQ,mBAAD,CAArB,EAA4C;AACxC,UAAIJ,MAAM,KAAKE,SAAf,EAA0B;AACtB,eAAOH,gBAAgB,CAACO,OAAjB,CAAyB,UAACL,eAAD;AAAA,iBAAqBA,eAAe,CAACM,UAAhB,CAA2BH,mBAA3B,CAArB;AAAA,SAAzB,CAAP;AACH;;AAED,UAAIC,KAAK,KAAKH,SAAd,EAAyB;AACrB,eAAOL,yBAAyB,CAACC,oBAAD,EAAuBC,gBAAvB,EAAyCC,MAAzC,CAAzB,CAA0EO,UAA1E,CAAqFH,mBAArF,EAA0G,CAA1G,CAAP;AACH;;AAED,aAAOP,yBAAyB,CAACC,oBAAD,EAAuBC,gBAAvB,EAAyCC,MAAzC,CAAzB,CAA0EO,UAA1E,CAAqFH,mBAArF,EAA0G,CAA1G,EAA6GC,KAA7G,CAAP;AACH;;AAED,QAAIL,MAAM,KAAKE,SAAf,EAA0B;AACtB,aAAOH,gBAAgB,CAACO,OAAjB,CAAyB,UAACL,eAAD;AAAA,eAAqBA,eAAe,CAACM,UAAhB,CAA2BH,mBAA3B,CAArB;AAAA,OAAzB,CAAP;AACH;;AAED,WAAOP,yBAAyB,CAACC,oBAAD,EAAuBC,gBAAvB,EAAyCC,MAAzC,CAAzB,CAA0EO,UAA1E,CAAqFH,mBAArF,EAA0G,CAA1G,CAAP;AACH,GA1BD;AA2BH,CA5BM","names":["isNativeAudioNode","getOutputAudioNodeAtIndex","createIndexSizeError","outputAudioNodes","output","outputAudioNode","undefined","createDisconnectMultipleOutputs","destinationOrOutput","input","forEach","disconnect"],"sourceRoot":"","sources":["../../../src/factories/disconnect-multiple-outputs.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}