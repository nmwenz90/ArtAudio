{"ast":null,"code":"import _defineProperty from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { isAudioBuffer, isAudioNode, isAudioParam } from \"./AdvancedTypeCheck\";\nimport { isDefined, isObject, isUndef } from \"./TypeCheck\";\n/**\n * Some objects should not be merged\n */\n\nfunction noCopy(key, arg) {\n  return key === \"value\" || isAudioParam(arg) || isAudioNode(arg) || isAudioBuffer(arg);\n}\n\nexport function deepMerge(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (!sources.length) {\n    return target;\n  }\n\n  var source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (var key in source) {\n      if (noCopy(key, source[key])) {\n        target[key] = source[key];\n      } else if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, _defineProperty({}, key, {}));\n        }\n\n        deepMerge(target[key], source[key]);\n      } else {\n        Object.assign(target, _defineProperty({}, key, source[key]));\n      }\n    }\n  } // @ts-ignore\n\n\n  return deepMerge.apply(void 0, [target].concat(sources));\n}\n/**\n * Returns true if the two arrays have the same value for each of the elements\n */\n\nexport function deepEquals(arrayA, arrayB) {\n  return arrayA.length === arrayB.length && arrayA.every(function (element, index) {\n    return arrayB[index] === element;\n  });\n}\n/**\n * Convert an args array into an object.\n */\n\nexport function optionsFromArguments(defaults, argsArray) {\n  var keys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var objKey = arguments.length > 3 ? arguments[3] : undefined;\n  var opts = {};\n  var args = Array.from(argsArray); // if the first argument is an object and has an object key\n\n  if (isObject(args[0]) && objKey && !Reflect.has(args[0], objKey)) {\n    // if it's not part of the defaults\n    var partOfDefaults = Object.keys(args[0]).some(function (key) {\n      return Reflect.has(defaults, key);\n    });\n\n    if (!partOfDefaults) {\n      // merge that key\n      deepMerge(opts, _defineProperty({}, objKey, args[0])); // remove the obj key from the keys\n\n      keys.splice(keys.indexOf(objKey), 1); // shift the first argument off\n\n      args.shift();\n    }\n  }\n\n  if (args.length === 1 && isObject(args[0])) {\n    deepMerge(opts, args[0]);\n  } else {\n    for (var i = 0; i < keys.length; i++) {\n      if (isDefined(args[i])) {\n        opts[keys[i]] = args[i];\n      }\n    }\n  }\n\n  return deepMerge(defaults, opts);\n}\n/**\n * Return this instances default values by calling Constructor.getDefaults()\n */\n\nexport function getDefaultsFromInstance(instance) {\n  return instance.constructor.getDefaults();\n}\n/**\n * Returns the fallback if the given object is undefined.\n * Take an array of arguments and return a formatted options object.\n */\n\nexport function defaultArg(given, fallback) {\n  if (isUndef(given)) {\n    return fallback;\n  } else {\n    return given;\n  }\n}\n/**\n * Remove all of the properties belonging to omit from obj.\n */\n\nexport function omitFromObject(obj, omit) {\n  omit.forEach(function (prop) {\n    if (Reflect.has(obj, prop)) {\n      delete obj[prop];\n    }\n  });\n  return obj;\n}","map":{"version":3,"mappings":"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","names":["isAudioBuffer","isAudioNode","isAudioParam","isDefined","isObject","isUndef","noCopy","key","arg","deepMerge","target","sources","length","source","shift","Object","assign","deepEquals","arrayA","arrayB","every","element","index","optionsFromArguments","defaults","argsArray","keys","objKey","opts","args","Array","from","Reflect","has","partOfDefaults","some","splice","indexOf","i","getDefaultsFromInstance","instance","constructor","getDefaults","defaultArg","given","fallback","omitFromObject","obj","omit","forEach","prop"],"sourceRoot":"","sources":["../../../../Tone/core/util/Defaults.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}