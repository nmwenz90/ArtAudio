{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { MidSideEffect } from \"../effect/MidSideEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Subtract } from \"../signal/Subtract\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { connect } from \"../core/context/ToneAudioNode\";\n/**\n * Applies a width factor to the mid/side seperation.\n * 0 is all mid and 1 is all side.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * ```\n * Mid *= 2*(1-width)<br>\n * Side *= 2*width\n * ```\n * @category Effect\n */\n\nexport var StereoWidener = /*#__PURE__*/function (_MidSideEffect) {\n  _inherits(StereoWidener, _MidSideEffect);\n\n  var _super = _createSuper(StereoWidener);\n\n  function StereoWidener() {\n    var _this;\n\n    _classCallCheck(this, StereoWidener);\n\n    _this = _super.call(this, optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]));\n    _this.name = \"StereoWidener\";\n    var options = optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]);\n    _this.width = new Signal({\n      context: _this.context,\n      value: options.width,\n      units: \"normalRange\"\n    });\n    readOnly(_assertThisInitialized(_this), [\"width\"]);\n    _this._twoTimesWidthMid = new Multiply({\n      context: _this.context,\n      value: 2\n    });\n    _this._twoTimesWidthSide = new Multiply({\n      context: _this.context,\n      value: 2\n    });\n    _this._midMult = new Multiply({\n      context: _this.context\n    });\n\n    _this._twoTimesWidthMid.connect(_this._midMult.factor);\n\n    _this.connectEffectMid(_this._midMult);\n\n    _this._oneMinusWidth = new Subtract({\n      context: _this.context\n    });\n\n    _this._oneMinusWidth.connect(_this._twoTimesWidthMid);\n\n    connect(_this.context.getConstant(1), _this._oneMinusWidth);\n\n    _this.width.connect(_this._oneMinusWidth.subtrahend);\n\n    _this._sideMult = new Multiply({\n      context: _this.context\n    });\n\n    _this.width.connect(_this._twoTimesWidthSide);\n\n    _this._twoTimesWidthSide.connect(_this._sideMult.factor);\n\n    _this.connectEffectSide(_this._sideMult);\n\n    return _this;\n  }\n\n  _createClass(StereoWidener, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(StereoWidener.prototype), \"dispose\", this).call(this);\n\n      this.width.dispose();\n\n      this._midMult.dispose();\n\n      this._sideMult.dispose();\n\n      this._twoTimesWidthMid.dispose();\n\n      this._twoTimesWidthSide.dispose();\n\n      this._oneMinusWidth.dispose();\n\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(MidSideEffect.getDefaults(), {\n        width: 0.5\n      });\n    }\n  }]);\n\n  return StereoWidener;\n}(MidSideEffect);","map":{"version":3,"mappings":";;;;;;;AAAA,SAASA,aAAT,QAAoD,yBAApD;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AAMA;;;;;;;;;;;AAUA,WAAaC,aAAb;AAAA;;AAAA;;AAuCC;AAAA;;AAAA;;AAEC,8BAAMH,oBAAoB,CAACG,aAAa,CAACC,WAAd,EAAD,EAA8BC,SAA9B,EAAyC,CAAC,OAAD,CAAzC,CAA1B;AAvCQ,iBAAe,eAAf;AAwCR,QAAMC,OAAO,GAAGN,oBAAoB,CAACG,aAAa,CAACC,WAAd,EAAD,EAA8BC,SAA9B,EAAyC,CAAC,OAAD,CAAzC,CAApC;AACA,UAAKE,KAAL,GAAa,IAAIV,MAAJ,CAAW;AACvBW,aAAO,EAAE,MAAKA,OADS;AAEvBC,WAAK,EAAEH,OAAO,CAACC,KAFQ;AAGvBG,WAAK,EAAE;AAHgB,KAAX,CAAb;AAKAT,YAAQ,gCAAO,CAAC,OAAD,CAAP,CAAR;AACA,UAAKU,iBAAL,GAAyB,IAAIb,QAAJ,CAAa;AACrCU,aAAO,EAAE,MAAKA,OADuB;AAErCC,WAAK,EAAE;AAF8B,KAAb,CAAzB;AAIA,UAAKG,kBAAL,GAA0B,IAAId,QAAJ,CAAa;AACtCU,aAAO,EAAE,MAAKA,OADwB;AAEtCC,WAAK,EAAE;AAF+B,KAAb,CAA1B;AAIA,UAAKI,QAAL,GAAgB,IAAIf,QAAJ,CAAa;AAAEU,aAAO,EAAE,MAAKA;AAAhB,KAAb,CAAhB;;AACA,UAAKG,iBAAL,CAAuBT,OAAvB,CAA+B,MAAKW,QAAL,CAAcC,MAA7C;;AACA,UAAKC,gBAAL,CAAsB,MAAKF,QAA3B;;AAEA,UAAKG,cAAL,GAAsB,IAAIjB,QAAJ,CAAa;AAAES,aAAO,EAAE,MAAKA;AAAhB,KAAb,CAAtB;;AACA,UAAKQ,cAAL,CAAoBd,OAApB,CAA4B,MAAKS,iBAAjC;;AACAT,WAAO,CAAC,MAAKM,OAAL,CAAaS,WAAb,CAAyB,CAAzB,CAAD,EAA8B,MAAKD,cAAnC,CAAP;;AACA,UAAKT,KAAL,CAAWL,OAAX,CAAmB,MAAKc,cAAL,CAAoBE,UAAvC;;AAEA,UAAKC,SAAL,GAAiB,IAAIrB,QAAJ,CAAa;AAAEU,aAAO,EAAE,MAAKA;AAAhB,KAAb,CAAjB;;AACA,UAAKD,KAAL,CAAWL,OAAX,CAAmB,MAAKU,kBAAxB;;AACA,UAAKA,kBAAL,CAAwBV,OAAxB,CAAgC,MAAKiB,SAAL,CAAeL,MAA/C;;AACA,UAAKM,iBAAL,CAAuB,MAAKD,SAA5B;;AA9BD;AA+BC;;AAtEF;AAAA;AAAA,WA8EC,mBAAO;AACN;;AACA,WAAKZ,KAAL,CAAWc,OAAX;;AACA,WAAKR,QAAL,CAAcQ,OAAd;;AACA,WAAKF,SAAL,CAAeE,OAAf;;AACA,WAAKV,iBAAL,CAAuBU,OAAvB;;AACA,WAAKT,kBAAL,CAAwBS,OAAxB;;AACA,WAAKL,cAAL,CAAoBK,OAApB;;AACA,aAAO,IAAP;AACA;AAvFF;AAAA;AAAA,WAwEC,uBAAkB;AACjB,aAAOC,MAAM,CAACC,MAAP,CAAc3B,aAAa,CAACQ,WAAd,EAAd,EAA2C;AACjDG,aAAK,EAAE;AAD0C,OAA3C,CAAP;AAGA;AA5EF;;AAAA;AAAA,EAAmCX,aAAnC","names":["MidSideEffect","Signal","Multiply","Subtract","optionsFromArguments","readOnly","connect","StereoWidener","getDefaults","arguments","options","width","context","value","units","_twoTimesWidthMid","_twoTimesWidthSide","_midMult","factor","connectEffectMid","_oneMinusWidth","getConstant","subtrahend","_sideMult","connectEffectSide","dispose","Object","assign"],"sourceRoot":"","sources":["../../../Tone/effect/StereoWidener.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}