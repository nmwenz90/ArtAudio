{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Scale } from \"./Scale\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Pow } from \"./Pow\";\n/**\n * Performs an exponential scaling on an input signal.\n * Scales a NormalRange value [0,1] exponentially\n * to the output range of outputMin to outputMax.\n * @example\n * const scaleExp = new Tone.ScaleExp(0, 100, 2);\n * const signal = new Tone.Signal(0.5).connect(scaleExp);\n * @category Signal\n */\n\nexport var ScaleExp = /*#__PURE__*/function (_Scale) {\n  _inherits(ScaleExp, _Scale);\n\n  var _super = _createSuper(ScaleExp);\n\n  function ScaleExp() {\n    var _this;\n\n    _classCallCheck(this, ScaleExp);\n\n    _this = _super.call(this, Object.assign(optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"])));\n    _this.name = \"ScaleExp\";\n    var options = optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"]);\n    _this.input = _this._exp = new Pow({\n      context: _this.context,\n      value: options.exponent\n    });\n\n    _this._exp.connect(_this._mult);\n\n    return _this;\n  }\n\n  _createClass(ScaleExp, [{\n    key: \"exponent\",\n    get:\n    /**\n     * Instead of interpolating linearly between the [[min]] and\n     * [[max]] values, setting the exponent will interpolate between\n     * the two values with an exponential curve.\n     */\n    function get() {\n      return this._exp.value;\n    },\n    set: function set(exp) {\n      this._exp.value = exp;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(ScaleExp.prototype), \"dispose\", this).call(this);\n\n      this._exp.dispose();\n\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(Scale.getDefaults(), {\n        exponent: 1\n      });\n    }\n  }]);\n\n  return ScaleExp;\n}(Scale);","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,KAAT,QAAoC,SAApC;AAEA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,GAAT,QAAoB,OAApB;AAMA;;;;;;;;;;AASA,WAAaC,QAAb;AAAA;;AAAA;;AAgBC;AAAA;;AAAA;;AACC,8BAAMC,MAAM,CAACC,MAAP,CAAcJ,oBAAoB,CAACE,QAAQ,CAACG,WAAT,EAAD,EAAyBC,SAAzB,EAAoC,CAAC,KAAD,EAAQ,KAAR,EAAe,UAAf,CAApC,CAAlC,CAAN;AAfQ,iBAAe,UAAf;AAgBR,QAAMC,OAAO,GAAGP,oBAAoB,CAACE,QAAQ,CAACG,WAAT,EAAD,EAAyBC,SAAzB,EAAoC,CAAC,KAAD,EAAQ,KAAR,EAAe,UAAf,CAApC,CAApC;AAEA,UAAKE,KAAL,GAAa,MAAKC,IAAL,GAAY,IAAIR,GAAJ,CAAQ;AAChCS,aAAO,EAAE,MAAKA,OADkB;AAEhCC,WAAK,EAAEJ,OAAO,CAACK;AAFiB,KAAR,CAAzB;;AAIA,UAAKH,IAAL,CAAUI,OAAV,CAAkB,MAAKC,KAAvB;;AARD;AASC;;AAzBF;AAAA;AAAA;AAiCC;;;;;AAKA,mBAAY;AACX,aAAO,KAAKL,IAAL,CAAUE,KAAjB;AACA,KAxCF;AAAA,SAyCC,aAAaI,GAAb,EAAgB;AACf,WAAKN,IAAL,CAAUE,KAAV,GAAkBI,GAAlB;AACA;AA3CF;AAAA;AAAA,WA6CC,mBAAO;AACN;;AACA,WAAKN,IAAL,CAAUO,OAAV;;AACA,aAAO,IAAP;AACA;AAjDF;AAAA;AAAA,WA2BC,uBAAkB;AACjB,aAAOb,MAAM,CAACC,MAAP,CAAcL,KAAK,CAACM,WAAN,EAAd,EAAmC;AACzCO,gBAAQ,EAAE;AAD+B,OAAnC,CAAP;AAGA;AA/BF;;AAAA;AAAA,EAA8Bb,KAA9B","names":["Scale","optionsFromArguments","Pow","ScaleExp","Object","assign","getDefaults","arguments","options","input","_exp","context","value","exponent","connect","_mult","exp","dispose"],"sourceRoot":"","sources":["../../../Tone/signal/ScaleExp.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}