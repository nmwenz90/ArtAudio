{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A thin wrapper around the Native Web Audio GainNode.\n * The GainNode is a basic building block of the Web Audio\n * API and is useful for routing audio and adjusting gains.\n * @category Core\n * @example\n * return Tone.Offline(() => {\n * \tconst gainNode = new Tone.Gain(0).toDestination();\n * \tconst osc = new Tone.Oscillator(30).connect(gainNode).start();\n * \tgainNode.gain.rampTo(1, 0.1);\n * \tgainNode.gain.rampTo(0, 0.4, 0.2);\n * }, 0.7, 1);\n */\n\nexport var Gain = /*#__PURE__*/function (_ToneAudioNode) {\n  _inherits(Gain, _ToneAudioNode);\n\n  var _super = _createSuper(Gain);\n\n  function Gain() {\n    var _this;\n\n    _classCallCheck(this, Gain);\n\n    _this = _super.call(this, optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]));\n    _this.name = \"Gain\";\n    /**\n     * The wrapped GainNode.\n     */\n\n    _this._gainNode = _this.context.createGain(); // input = output\n\n    _this.input = _this._gainNode;\n    _this.output = _this._gainNode;\n    var options = optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]);\n    _this.gain = new Param({\n      context: _this.context,\n      convert: options.convert,\n      param: _this._gainNode.gain,\n      units: options.units,\n      value: options.gain,\n      minValue: options.minValue,\n      maxValue: options.maxValue\n    });\n    readOnly(_assertThisInitialized(_this), \"gain\");\n    return _this;\n  }\n\n  _createClass(Gain, [{\n    key: \"dispose\",\n    value:\n    /**\n     * Clean up.\n     */\n    function dispose() {\n      _get(_getPrototypeOf(Gain.prototype), \"dispose\", this).call(this);\n\n      this._gainNode.disconnect();\n\n      this.gain.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(ToneAudioNode.getDefaults(), {\n        convert: true,\n        gain: 1,\n        units: \"gain\"\n      });\n    }\n  }]);\n\n  return Gain;\n}(ToneAudioNode);","map":{"version":3,"mappings":";;;;;;;AAAA,SAASA,KAAT,QAAsB,kBAAtB;AAEA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,aAAT,QAAoD,iBAApD;AAUA;;;;;;;;;;;;;;AAaA,WAAaC,IAAb;AAAA;;AAAA;;AA6BC;AAAA;;AAAA;;AACC,8BAAMH,oBAAoB,CAACG,IAAI,CAACC,WAAL,EAAD,EAAqBC,SAArB,EAAgC,CAAC,MAAD,EAAS,OAAT,CAAhC,CAA1B;AA5BQ,iBAAe,MAAf;AAYT;;;;AAGQ,sBAAsB,MAAKC,OAAL,CAAaC,UAAb,EAAtB,CAYR,CAVA;;AACS,kBAAkB,MAAKC,SAAvB;AACA,mBAAmB,MAAKA,SAAxB;AAUR,QAAMC,OAAO,GAAGT,oBAAoB,CAACG,IAAI,CAACC,WAAL,EAAD,EAAqBC,SAArB,EAAgC,CAAC,MAAD,EAAS,OAAT,CAAhC,CAApC;AAEA,UAAKK,IAAL,GAAY,IAAIX,KAAJ,CAAU;AACrBO,aAAO,EAAE,MAAKA,OADO;AAErBK,aAAO,EAAEF,OAAO,CAACE,OAFI;AAGrBC,WAAK,EAAE,MAAKJ,SAAL,CAAeE,IAHD;AAIrBG,WAAK,EAAEJ,OAAO,CAACI,KAJM;AAKrBC,WAAK,EAAEL,OAAO,CAACC,IALM;AAMrBK,cAAQ,EAAEN,OAAO,CAACM,QANG;AAOrBC,cAAQ,EAAEP,OAAO,CAACO;AAPG,KAAV,CAAZ;AASAf,YAAQ,gCAAO,MAAP,CAAR;AAbD;AAcC;;AA3CF;AAAA;AAAA;AAqDC;;;AAGA,uBAAO;AACN;;AACA,WAAKO,SAAL,CAAeS,UAAf;;AACA,WAAKP,IAAL,CAAUQ,OAAV;AACA,aAAO,IAAP;AACA;AA7DF;AAAA;AAAA,WA6CC,uBAAkB;AACjB,aAAOC,MAAM,CAACC,MAAP,CAAclB,aAAa,CAACE,WAAd,EAAd,EAA2C;AACjDO,eAAO,EAAE,IADwC;AAEjDD,YAAI,EAAE,CAF2C;AAGjDG,aAAK,EAAE;AAH0C,OAA3C,CAAP;AAKA;AAnDF;;AAAA;AAAA,EAAyFX,aAAzF","names":["Param","optionsFromArguments","readOnly","ToneAudioNode","Gain","getDefaults","arguments","context","createGain","_gainNode","options","gain","convert","param","units","value","minValue","maxValue","disconnect","dispose","Object","assign"],"sourceRoot":"","sources":["../../../../Tone/core/context/Gain.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}