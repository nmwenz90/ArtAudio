{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _toConsumableArray from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { addActiveInputConnectionToAudioParam } from '../helpers/add-active-input-connection-to-audio-param';\nimport { addPassiveInputConnectionToAudioParam } from '../helpers/add-passive-input-connection-to-audio-param';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteActiveInputConnection } from '../helpers/delete-active-input-connection';\nimport { deleteActiveInputConnectionToAudioParam } from '../helpers/delete-active-input-connection-to-audio-param';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { deletePassiveInputConnectionToAudioParam } from '../helpers/delete-passive-input-connection-to-audio-param';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\n\nvar addConnectionToAudioParamOfAudioContext = function addConnectionToAudioParamOfAudioContext(source, destination, output, isOffline) {\n  var _getAudioParamConnect = getAudioParamConnections(destination),\n      activeInputs = _getAudioParamConnect.activeInputs,\n      passiveInputs = _getAudioParamConnect.passiveInputs;\n\n  var _getAudioNodeConnecti = getAudioNodeConnections(source),\n      outputs = _getAudioNodeConnecti.outputs;\n\n  var eventListeners = getEventListenersOfAudioNode(source);\n\n  var eventListener = function eventListener(isActive) {\n    var nativeAudioNode = getNativeAudioNode(source);\n    var nativeAudioParam = getNativeAudioParam(destination);\n\n    if (isActive) {\n      var partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n      addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n\n      if (!isOffline && !isPartOfACycle(source)) {\n        nativeAudioNode.connect(nativeAudioParam, output);\n      }\n    } else {\n      var _partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n\n      addPassiveInputConnectionToAudioParam(passiveInputs, _partialConnection, false);\n\n      if (!isOffline && !isPartOfACycle(source)) {\n        nativeAudioNode.disconnect(nativeAudioParam, output);\n      }\n    }\n  };\n\n  if (insertElementInSet(outputs, [destination, output], function (outputConnection) {\n    return outputConnection[0] === destination && outputConnection[1] === output;\n  }, true)) {\n    eventListeners.add(eventListener);\n\n    if (isActiveAudioNode(source)) {\n      addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n    } else {\n      addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nvar deleteInputConnectionOfAudioNode = function deleteInputConnectionOfAudioNode(source, destination, output, input) {\n  var _getAudioNodeConnecti2 = getAudioNodeConnections(destination),\n      activeInputs = _getAudioNodeConnecti2.activeInputs,\n      passiveInputs = _getAudioNodeConnecti2.passiveInputs;\n\n  var activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n\n  if (activeInputConnection === null) {\n    var passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n    return [passiveInputConnection[2], false];\n  }\n\n  return [activeInputConnection[2], true];\n};\n\nvar deleteInputConnectionOfAudioParam = function deleteInputConnectionOfAudioParam(source, destination, output) {\n  var _getAudioParamConnect2 = getAudioParamConnections(destination),\n      activeInputs = _getAudioParamConnect2.activeInputs,\n      passiveInputs = _getAudioParamConnect2.passiveInputs;\n\n  var activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n\n  if (activeInputConnection === null) {\n    var passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n    return [passiveInputConnection[1], false];\n  }\n\n  return [activeInputConnection[2], true];\n};\n\nvar deleteInputsOfAudioNode = function deleteInputsOfAudioNode(source, isOffline, destination, output, input) {\n  var _deleteInputConnectio = deleteInputConnectionOfAudioNode(source, destination, output, input),\n      _deleteInputConnectio2 = _slicedToArray(_deleteInputConnectio, 2),\n      listener = _deleteInputConnectio2[0],\n      isActive = _deleteInputConnectio2[1];\n\n  if (listener !== null) {\n    deleteEventListenerOfAudioNode(source, listener);\n\n    if (isActive && !isOffline && !isPartOfACycle(source)) {\n      disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n    }\n  }\n\n  if (isActiveAudioNode(destination)) {\n    var _getAudioNodeConnecti3 = getAudioNodeConnections(destination),\n        activeInputs = _getAudioNodeConnecti3.activeInputs;\n\n    setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n  }\n};\n\nvar deleteInputsOfAudioParam = function deleteInputsOfAudioParam(source, isOffline, destination, output) {\n  var _deleteInputConnectio3 = deleteInputConnectionOfAudioParam(source, destination, output),\n      _deleteInputConnectio4 = _slicedToArray(_deleteInputConnectio3, 2),\n      listener = _deleteInputConnectio4[0],\n      isActive = _deleteInputConnectio4[1];\n\n  if (listener !== null) {\n    deleteEventListenerOfAudioNode(source, listener);\n\n    if (isActive && !isOffline && !isPartOfACycle(source)) {\n      getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n    }\n  }\n};\n\nvar deleteAnyConnection = function deleteAnyConnection(source, isOffline) {\n  var audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n  var destinations = [];\n\n  var _iterator = _createForOfIteratorHelper(audioNodeConnectionsOfSource.outputs),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var outputConnection = _step.value;\n\n      if (isAudioNodeOutputConnection(outputConnection)) {\n        deleteInputsOfAudioNode.apply(void 0, [source, isOffline].concat(_toConsumableArray(outputConnection)));\n      } else {\n        deleteInputsOfAudioParam.apply(void 0, [source, isOffline].concat(_toConsumableArray(outputConnection)));\n      }\n\n      destinations.push(outputConnection[0]);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  audioNodeConnectionsOfSource.outputs.clear();\n  return destinations;\n};\n\nvar deleteConnectionAtOutput = function deleteConnectionAtOutput(source, isOffline, output) {\n  var audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n  var destinations = [];\n\n  var _iterator2 = _createForOfIteratorHelper(audioNodeConnectionsOfSource.outputs),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var outputConnection = _step2.value;\n\n      if (outputConnection[1] === output) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n          deleteInputsOfAudioNode.apply(void 0, [source, isOffline].concat(_toConsumableArray(outputConnection)));\n        } else {\n          deleteInputsOfAudioParam.apply(void 0, [source, isOffline].concat(_toConsumableArray(outputConnection)));\n        }\n\n        destinations.push(outputConnection[0]);\n        audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return destinations;\n};\n\nvar deleteConnectionToDestination = function deleteConnectionToDestination(source, isOffline, destination, output, input) {\n  var audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n  return Array.from(audioNodeConnectionsOfSource.outputs).filter(function (outputConnection) {\n    return outputConnection[0] === destination && (output === undefined || outputConnection[1] === output) && (input === undefined || outputConnection[2] === input);\n  }).map(function (outputConnection) {\n    if (isAudioNodeOutputConnection(outputConnection)) {\n      deleteInputsOfAudioNode.apply(void 0, [source, isOffline].concat(_toConsumableArray(outputConnection)));\n    } else {\n      deleteInputsOfAudioParam.apply(void 0, [source, isOffline].concat(_toConsumableArray(outputConnection)));\n    }\n\n    audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n    return outputConnection[0];\n  });\n};\n\nexport var createAudioNodeConstructor = function createAudioNodeConstructor(addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor) {\n  return /*#__PURE__*/function (_eventTargetConstruct) {\n    _inherits(AudioNode, _eventTargetConstruct);\n\n    var _super = _createSuper(AudioNode);\n\n    function AudioNode(context, isActive, nativeAudioNode, audioNodeRenderer) {\n      var _this;\n\n      _classCallCheck(this, AudioNode);\n\n      _this = _super.call(this, nativeAudioNode);\n      _this._context = context;\n      _this._nativeAudioNode = nativeAudioNode;\n      var nativeContext = getNativeContext(context); // Bug #12: Safari does not support to disconnect a specific destination.\n\n      if (isNativeAudioContext(nativeContext) && true !== cacheTestResult(testAudioNodeDisconnectMethodSupport, function () {\n        return testAudioNodeDisconnectMethodSupport(nativeContext, nativeAudioWorkletNodeConstructor);\n      })) {\n        wrapAudioNodeDisconnectMethod(nativeAudioNode);\n      }\n\n      AUDIO_NODE_STORE.set(_assertThisInitialized(_this), nativeAudioNode);\n      EVENT_LISTENERS.set(_assertThisInitialized(_this), new Set());\n\n      if (context.state !== 'closed' && isActive) {\n        setInternalStateToActive(_assertThisInitialized(_this));\n      }\n\n      addAudioNodeConnections(_assertThisInitialized(_this), audioNodeRenderer, nativeAudioNode);\n      return _this;\n    }\n\n    _createClass(AudioNode, [{\n      key: \"channelCount\",\n      get: function get() {\n        return this._nativeAudioNode.channelCount;\n      },\n      set: function set(value) {\n        this._nativeAudioNode.channelCount = value;\n      }\n    }, {\n      key: \"channelCountMode\",\n      get: function get() {\n        return this._nativeAudioNode.channelCountMode;\n      },\n      set: function set(value) {\n        this._nativeAudioNode.channelCountMode = value;\n      }\n    }, {\n      key: \"channelInterpretation\",\n      get: function get() {\n        return this._nativeAudioNode.channelInterpretation;\n      },\n      set: function set(value) {\n        this._nativeAudioNode.channelInterpretation = value;\n      }\n    }, {\n      key: \"context\",\n      get: function get() {\n        return this._context;\n      }\n    }, {\n      key: \"numberOfInputs\",\n      get: function get() {\n        return this._nativeAudioNode.numberOfInputs;\n      }\n    }, {\n      key: \"numberOfOutputs\",\n      get: function get() {\n        return this._nativeAudioNode.numberOfOutputs;\n      } // tslint:disable-next-line:invalid-void\n\n    }, {\n      key: \"connect\",\n      value: function connect(destination) {\n        var output = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var input = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n        // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n        if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n          throw createIndexSizeError();\n        }\n\n        var nativeContext = getNativeContext(this._context);\n        var isOffline = isNativeOfflineAudioContext(nativeContext);\n\n        if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n          throw createInvalidAccessError();\n        }\n\n        if (isAudioNode(destination)) {\n          var nativeDestinationAudioNode = getNativeAudioNode(destination);\n\n          try {\n            var connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n            var isPassive = isPassiveAudioNode(this);\n\n            if (isOffline || isPassive) {\n              var _this$_nativeAudioNod;\n\n              (_this$_nativeAudioNod = this._nativeAudioNode).disconnect.apply(_this$_nativeAudioNod, _toConsumableArray(connection));\n            }\n\n            if (this.context.state !== 'closed' && !isPassive && isPassiveAudioNode(destination)) {\n              setInternalStateToActive(destination);\n            }\n          } catch (err) {\n            // Bug #41: Safari does not throw the correct exception so far.\n            if (err.code === 12) {\n              throw createInvalidAccessError();\n            }\n\n            throw err;\n          }\n\n          var isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline); // Bug #164: Only Firefox detects cycles so far.\n\n          if (isNewConnectionToAudioNode) {\n            var cycles = detectCycles([this], destination);\n            visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n          }\n\n          return destination;\n        }\n\n        var nativeAudioParam = getNativeAudioParam(destination);\n        /*\n         * Bug #73, #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n         * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n         * Safari. In addition to that the maxValue property is used to only detect the affected versions below v14.0.2.\n         */\n\n        if (nativeAudioParam.name === 'playbackRate' && nativeAudioParam.maxValue === 1024) {\n          throw createNotSupportedError();\n        }\n\n        try {\n          this._nativeAudioNode.connect(nativeAudioParam, output);\n\n          if (isOffline || isPassiveAudioNode(this)) {\n            this._nativeAudioNode.disconnect(nativeAudioParam, output);\n          }\n        } catch (err) {\n          // Bug #58: Safari doesn't throw an InvalidAccessError yet.\n          if (err.code === 12) {\n            throw createInvalidAccessError();\n          }\n\n          throw err;\n        }\n\n        var isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline); // Bug #164: Only Firefox detects cycles so far.\n\n        if (isNewConnectionToAudioParam) {\n          var _cycles = detectCycles([this], destination);\n\n          visitEachAudioNodeOnce(_cycles, createIncrementCycleCounter(isOffline));\n        }\n      }\n    }, {\n      key: \"disconnect\",\n      value: function disconnect(destinationOrOutput, output, input) {\n        var destinations;\n        var nativeContext = getNativeContext(this._context);\n        var isOffline = isNativeOfflineAudioContext(nativeContext);\n\n        if (destinationOrOutput === undefined) {\n          destinations = deleteAnyConnection(this, isOffline);\n        } else if (typeof destinationOrOutput === 'number') {\n          if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n            throw createIndexSizeError();\n          }\n\n          destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n        } else {\n          if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n            throw createIndexSizeError();\n          }\n\n          if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n            throw createIndexSizeError();\n          }\n\n          destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n\n          if (destinations.length === 0) {\n            throw createInvalidAccessError();\n          }\n        } // Bug #164: Only Firefox detects cycles so far.\n\n\n        var _iterator3 = _createForOfIteratorHelper(destinations),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var destination = _step3.value;\n            var cycles = detectCycles([this], destination);\n            visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n    }]);\n\n    return AudioNode;\n  }(eventTargetConstructor);\n};","map":{"version":3,"mappings":"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","names":["AUDIO_NODE_STORE","EVENT_LISTENERS","isAudioNode","isAudioNodeOutputConnection","addActiveInputConnectionToAudioParam","addPassiveInputConnectionToAudioParam","connectNativeAudioNodeToNativeAudioNode","deleteActiveInputConnection","deleteActiveInputConnectionToAudioParam","deleteEventListenerOfAudioNode","deletePassiveInputConnectionToAudioNode","deletePassiveInputConnectionToAudioParam","disconnectNativeAudioNodeFromNativeAudioNode","getAudioNodeConnections","getAudioParamConnections","getEventListenersOfAudioNode","getNativeAudioNode","getNativeAudioParam","insertElementInSet","isActiveAudioNode","isPartOfACycle","isPassiveAudioNode","setInternalStateToActive","setInternalStateToPassiveWhenNecessary","testAudioNodeDisconnectMethodSupport","visitEachAudioNodeOnce","wrapAudioNodeDisconnectMethod","addConnectionToAudioParamOfAudioContext","source","destination","output","isOffline","activeInputs","passiveInputs","outputs","eventListeners","eventListener","isActive","nativeAudioNode","nativeAudioParam","partialConnection","connect","disconnect","outputConnection","add","deleteInputConnectionOfAudioNode","input","activeInputConnection","passiveInputConnection","deleteInputConnectionOfAudioParam","deleteInputsOfAudioNode","listener","deleteInputsOfAudioParam","deleteAnyConnection","audioNodeConnectionsOfSource","destinations","push","clear","deleteConnectionAtOutput","delete","deleteConnectionToDestination","Array","from","filter","undefined","map","createAudioNodeConstructor","addAudioNodeConnections","addConnectionToAudioNode","cacheTestResult","createIncrementCycleCounter","createIndexSizeError","createInvalidAccessError","createNotSupportedError","decrementCycleCounter","detectCycles","eventTargetConstructor","getNativeContext","isNativeAudioContext","isNativeAudioNode","isNativeAudioParam","isNativeOfflineAudioContext","nativeAudioWorkletNodeConstructor","context","audioNodeRenderer","_context","_nativeAudioNode","nativeContext","set","Set","state","channelCount","value","channelCountMode","channelInterpretation","numberOfInputs","numberOfOutputs","nativeDestinationAudioNode","connection","isPassive","err","code","isNewConnectionToAudioNode","cycles","name","maxValue","isNewConnectionToAudioParam","destinationOrOutput","length"],"sourceRoot":"","sources":["../../../src/factories/audio-node-constructor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}