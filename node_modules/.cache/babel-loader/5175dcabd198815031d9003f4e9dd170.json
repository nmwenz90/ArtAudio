{"ast":null,"code":"import _asyncToGenerator from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\";\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport var createConstantSourceNodeRendererFactory = function createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {\n  return function () {\n    var renderedNativeConstantSourceNodes = new WeakMap();\n    var start = null;\n    var stop = null;\n\n    var createConstantSourceNode = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(proxy, nativeOfflineAudioContext) {\n        var nativeConstantSourceNode, nativeConstantSourceNodeIsOwnedByContext, options;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                nativeConstantSourceNode = getNativeAudioNode(proxy);\n                /*\n                 * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n                 * again.\n                 */\n\n                nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n\n                if (!nativeConstantSourceNodeIsOwnedByContext) {\n                  options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                  };\n                  nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n\n                  if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                  }\n\n                  if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                  }\n                }\n\n                renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n\n                if (nativeConstantSourceNodeIsOwnedByContext) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 7;\n                return renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n\n              case 7:\n                _context.next = 11;\n                break;\n\n              case 9:\n                _context.next = 11;\n                return connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n\n              case 11:\n                _context.next = 13;\n                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode);\n\n              case 13:\n                return _context.abrupt(\"return\", nativeConstantSourceNode);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function createConstantSourceNode(_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return {\n      set start(value) {\n        start = value;\n      },\n\n      set stop(value) {\n        stop = value;\n      },\n\n      render: function render(proxy, nativeOfflineAudioContext) {\n        var renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeConstantSourceNode !== undefined) {\n          return Promise.resolve(renderedNativeConstantSourceNode);\n        }\n\n        return createConstantSourceNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};","map":{"version":3,"mappings":";;AAAA,SAASA,gBAAT,QAAiC,gCAAjC;AAIA,OAAO,IAAMC,uCAAuC,GAA8C,SAArFA,uCAAqF,CAC9FC,iBAD8F,EAE9FC,8BAF8F,EAG9FC,kBAH8F,EAI9FC,gBAJ8F,EAK9FC,uBAL8F,EAM9F;AACA,SAAO,YAAmE;AACtE,QAAMC,iCAAiC,GAAG,IAAIC,OAAJ,EAA1C;AAEA,QAAIC,KAAK,GAAkB,IAA3B;AACA,QAAIC,IAAI,GAAkB,IAA1B;;AAEA,QAAMC,wBAAwB;AAAA,0EAAG,iBAAOC,KAAP,EAAsCC,yBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AACzBC,wCADyB,GACEV,kBAAkB,CAA+BQ,KAA/B,CADpB;AAG7B;;;;;AAIMG,wDAPuB,GAOoBf,gBAAgB,CAACc,wBAAD,EAA2BD,yBAA3B,CAPpC;;AAS7B,oBAAI,CAACE,wCAAL,EAA+C;AACrCC,yBADqC,GAC3B;AACZC,gCAAY,EAAEH,wBAAwB,CAACG,YAD3B;AAEZC,oCAAgB,EAAEJ,wBAAwB,CAACI,gBAF/B;AAGZC,yCAAqB,EAAEL,wBAAwB,CAACK,qBAHpC;AAIZC,0BAAM,EAAEN,wBAAwB,CAACM,MAAzB,CAAgCC;AAJ5B,mBAD2B;AAQ3CP,0CAAwB,GAAGX,8BAA8B,CAACU,yBAAD,EAA4BG,OAA5B,CAAzD;;AAEA,sBAAIP,KAAK,KAAK,IAAd,EAAoB;AAChBK,4CAAwB,CAACL,KAAzB,CAA+BA,KAA/B;AACH;;AAED,sBAAIC,IAAI,KAAK,IAAb,EAAmB;AACfI,4CAAwB,CAACJ,IAAzB,CAA8BA,IAA9B;AACH;AACJ;;AAEDH,iDAAiC,CAACe,GAAlC,CAAsCT,yBAAtC,EAAiEC,wBAAjE;;AA5B6B,oBA8BxBC,wCA9BwB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA+BnBV,gBAAgB,CAACQ,yBAAD,EAA4BD,KAAK,CAACQ,MAAlC,EAA0CN,wBAAwB,CAACM,MAAnE,CA/BG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAiCnBlB,iBAAiB,CAACW,yBAAD,EAA4BD,KAAK,CAACQ,MAAlC,EAA0CN,wBAAwB,CAACM,MAAnE,CAjCE;;AAAA;AAAA;AAAA,uBAoCvBd,uBAAuB,CAACM,KAAD,EAAQC,yBAAR,EAAmCC,wBAAnC,CApCA;;AAAA;AAAA,iDAsCtBA,wBAtCsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAxBH,wBAAwB;AAAA;AAAA;AAAA,OAA9B;;AAyCA,WAAO;AACH,UAAIF,KAAJ,CAAUY,KAAV,EAAuB;AACnBZ,aAAK,GAAGY,KAAR;AACH,OAHE;;AAIH,UAAIX,IAAJ,CAASW,KAAT,EAAsB;AAClBX,YAAI,GAAGW,KAAP;AACH,OANE;;AAOHE,YAPG,kBAQCX,KARD,EASCC,yBATD,EASsD;AAErD,YAAMW,gCAAgC,GAAGjB,iCAAiC,CAACkB,GAAlC,CAAsCZ,yBAAtC,CAAzC;;AAEA,YAAIW,gCAAgC,KAAKE,SAAzC,EAAoD;AAChD,iBAAOC,OAAO,CAACC,OAAR,CAAgBJ,gCAAhB,CAAP;AACH;;AAED,eAAOb,wBAAwB,CAACC,KAAD,EAAQC,yBAAR,CAA/B;AACH;AAlBE,KAAP;AAoBH,GAnED;AAoEH,CA3EM","names":["isOwnedByContext","createConstantSourceNodeRendererFactory","connectAudioParam","createNativeConstantSourceNode","getNativeAudioNode","renderAutomation","renderInputsOfAudioNode","renderedNativeConstantSourceNodes","WeakMap","start","stop","createConstantSourceNode","proxy","nativeOfflineAudioContext","nativeConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","options","channelCount","channelCountMode","channelInterpretation","offset","value","set","render","renderedNativeConstantSourceNode","get","undefined","Promise","resolve"],"sourceRoot":"","sources":["../../../src/factories/constant-source-node-renderer-factory.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}