{"ast":null,"code":"import _objectSpread from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nvar DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  gain: 1\n};\nexport var createGainNodeConstructor = function createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(GainNode, _audioNodeConstructor);\n\n    var _super = _createSuper(GainNode);\n\n    function GainNode(context, options) {\n      var _this;\n\n      _classCallCheck(this, GainNode);\n\n      var nativeContext = getNativeContext(context);\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n      var isOffline = isNativeOfflineAudioContext(nativeContext);\n      var gainNodeRenderer = isOffline ? createGainNodeRenderer() : null;\n      _this = _super.call(this, context, false, nativeGainNode, gainNodeRenderer); // Bug #74: Safari does not export the correct values for maxValue and minValue.\n\n      _this._gain = createAudioParam(_assertThisInitialized(_this), isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      return _this;\n    }\n\n    _createClass(GainNode, [{\n      key: \"gain\",\n      get: function get() {\n        return this._gain;\n      }\n    }]);\n\n    return GainNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,0BAAT,EAAqCC,0BAArC,QAAuE,cAAvE;AAIA,IAAMC,eAAe,GAAG;AACpBC,cAAY,EAAE,CADM;AAEpBC,kBAAgB,EAAE,KAFE;AAGpBC,uBAAqB,EAAE,UAHH;AAIpBC,MAAI,EAAE;AAJc,CAAxB;AAOA,OAAO,IAAMC,yBAAyB,GAAgC,SAAzDA,yBAAyD,CAClEC,oBADkE,EAElEC,gBAFkE,EAGlEC,sBAHkE,EAIlEC,oBAJkE,EAKlEC,gBALkE,EAMlEC,2BANkE,EAOlE;AACA;AAAA;;AAAA;;AAGI,sBAAYC,OAAZ,EAAwBC,OAAxB,EAAuD;AAAA;;AAAA;;AACnD,UAAMC,aAAa,GAAGJ,gBAAgB,CAACE,OAAD,CAAtC;;AACA,UAAMG,aAAa,mCAAQf,eAAR,GAA4Ba,OAA5B,CAAnB;;AACA,UAAMG,cAAc,GAAGP,oBAAoB,CAACK,aAAD,EAAgBC,aAAhB,CAA3C;AACA,UAAME,SAAS,GAAGN,2BAA2B,CAACG,aAAD,CAA7C;AACA,UAAMI,gBAAgB,GAAiCD,SAAS,GAAGT,sBAAsB,EAAzB,GAA8B,IAA9F;AAEA,gCAAMI,OAAN,EAAe,KAAf,EAAsBI,cAAtB,EAAsCE,gBAAtC,EAPmD,CASnD;;AACA,YAAKC,KAAL,GAAaZ,gBAAgB,gCAAOU,SAAP,EAAkBD,cAAc,CAACZ,IAAjC,EAAuCL,0BAAvC,EAAmED,0BAAnE,CAA7B;AAVmD;AAWtD;;AAdL;AAAA;AAAA,WAgBI,eAAQ;AACJ,eAAO,KAAKqB,KAAZ;AACH;AAlBL;;AAAA;AAAA,IAAkDb,oBAAlD;AAoBH,CA5BM","names":["MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","gain","createGainNodeConstructor","audioNodeConstructor","createAudioParam","createGainNodeRenderer","createNativeGainNode","getNativeContext","isNativeOfflineAudioContext","context","options","nativeContext","mergedOptions","nativeGainNode","isOffline","gainNodeRenderer","_gain"],"sourceRoot":"","sources":["../../../src/factories/gain-node-constructor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}