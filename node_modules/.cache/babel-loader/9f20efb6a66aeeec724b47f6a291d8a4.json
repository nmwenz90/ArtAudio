{"ast":null,"code":"/*!\n * @pixi/utils - v6.3.0\n * Compiled Wed, 23 Mar 2022 18:58:56 UTC\n *\n * @pixi/utils is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { settings } from '@pixi/settings';\nexport { isMobile } from '@pixi/settings';\nexport { default as EventEmitter } from 'eventemitter3';\nexport { default as earcut } from 'earcut';\nimport { parse, format, resolve } from 'url';\nimport { BLEND_MODES } from '@pixi/constants';\n/**\n * This file contains redeclared types for Node `url` and `querystring` modules. These modules\n * don't provide their own typings but instead are a part of the full Node typings. The purpose of\n * this file is to redeclare the required types to avoid having the whole Node types as a\n * dependency.\n */\n\nvar url = {\n  parse: parse,\n  format: format,\n  resolve: resolve\n};\n/**\n * The prefix that denotes a URL is for a retina asset.\n *\n * @static\n * @name RETINA_PREFIX\n * @memberof PIXI.settings\n * @type {RegExp}\n * @default /@([0-9\\.]+)x/\n * @example `@2x`\n */\n\nsettings.RETINA_PREFIX = /@([0-9\\.]+)x/;\n/**\n * Should the `failIfMajorPerformanceCaveat` flag be enabled as a context option used in the `isWebGLSupported` function.\n * If set to true, a WebGL renderer can fail to be created if the browser thinks there could be performance issues when\n * using WebGL.\n *\n * In PixiJS v6 this has changed from true to false by default, to allow WebGL to work in as many scenarios as possible.\n * However, some users may have a poor experience, for example, if a user has a gpu or driver version blacklisted by the\n * browser.\n *\n * If your application requires high performance rendering, you may wish to set this to false.\n * We recommend one of two options if you decide to set this flag to false:\n *\n * 1: Use the `pixi.js-legacy` package, which includes a Canvas renderer as a fallback in case high performance WebGL is\n *    not supported.\n *\n * 2: Call `isWebGLSupported` (which if found in the PIXI.utils package) in your code before attempting to create a PixiJS\n *    renderer, and show an error message to the user if the function returns false, explaining that their device & browser\n *    combination does not support high performance WebGL.\n *    This is a much better strategy than trying to create a PixiJS renderer and finding it then fails.\n *\n * @static\n * @name FAIL_IF_MAJOR_PERFORMANCE_CAVEAT\n * @memberof PIXI.settings\n * @type {boolean}\n * @default false\n */\n\nsettings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\nvar saidHello = false;\nvar VERSION = '6.3.0';\n/**\n * Skips the hello message of renderers that are created after this is run.\n *\n * @function skipHello\n * @memberof PIXI.utils\n */\n\nfunction skipHello() {\n  saidHello = true;\n}\n/**\n * Logs out the version and renderer information for this running instance of PIXI.\n * If you don't want to see this message you can run `PIXI.utils.skipHello()` before\n * creating your renderer. Keep in mind that doing that will forever make you a jerk face.\n *\n * @static\n * @function sayHello\n * @memberof PIXI.utils\n * @param {string} type - The string renderer type to log.\n */\n\n\nfunction sayHello(type) {\n  var _a;\n\n  if (saidHello) {\n    return;\n  }\n\n  if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {\n    var args = [\"\\n %c %c %c PixiJS \" + VERSION + \" - \\u2730 \" + type + \" \\u2730  %c  %c  http://www.pixijs.com/  %c %c \\u2665%c\\u2665%c\\u2665 \\n\\n\", 'background: #ff66a5; padding:5px 0;', 'background: #ff66a5; padding:5px 0;', 'color: #ff66a5; background: #030307; padding:5px 0;', 'background: #ff66a5; padding:5px 0;', 'background: #ffc3dc; padding:5px 0;', 'background: #ff66a5; padding:5px 0;', 'color: #ff2424; background: #fff; padding:5px 0;', 'color: #ff2424; background: #fff; padding:5px 0;', 'color: #ff2424; background: #fff; padding:5px 0;'];\n\n    (_a = globalThis.console).log.apply(_a, args);\n  } else if (globalThis.console) {\n    globalThis.console.log(\"PixiJS \" + VERSION + \" - \" + type + \" - http://www.pixijs.com/\");\n  }\n\n  saidHello = true;\n}\n\nvar supported;\n/**\n * Helper for checking for WebGL support.\n *\n * @memberof PIXI.utils\n * @function isWebGLSupported\n * @return {boolean} Is WebGL supported.\n */\n\nfunction isWebGLSupported() {\n  if (typeof supported === 'undefined') {\n    supported = function supported() {\n      var contextOptions = {\n        stencil: true,\n        failIfMajorPerformanceCaveat: settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT\n      };\n\n      try {\n        if (!globalThis.WebGLRenderingContext) {\n          return false;\n        }\n\n        var canvas = document.createElement('canvas');\n        var gl = canvas.getContext('webgl', contextOptions) || canvas.getContext('experimental-webgl', contextOptions);\n        var success = !!(gl && gl.getContextAttributes().stencil);\n\n        if (gl) {\n          var loseContext = gl.getExtension('WEBGL_lose_context');\n\n          if (loseContext) {\n            loseContext.loseContext();\n          }\n        }\n\n        gl = null;\n        return success;\n      } catch (e) {\n        return false;\n      }\n    }();\n  }\n\n  return supported;\n}\n\nvar aliceblue = \"#f0f8ff\";\nvar antiquewhite = \"#faebd7\";\nvar aqua = \"#00ffff\";\nvar aquamarine = \"#7fffd4\";\nvar azure = \"#f0ffff\";\nvar beige = \"#f5f5dc\";\nvar bisque = \"#ffe4c4\";\nvar black = \"#000000\";\nvar blanchedalmond = \"#ffebcd\";\nvar blue = \"#0000ff\";\nvar blueviolet = \"#8a2be2\";\nvar brown = \"#a52a2a\";\nvar burlywood = \"#deb887\";\nvar cadetblue = \"#5f9ea0\";\nvar chartreuse = \"#7fff00\";\nvar chocolate = \"#d2691e\";\nvar coral = \"#ff7f50\";\nvar cornflowerblue = \"#6495ed\";\nvar cornsilk = \"#fff8dc\";\nvar crimson = \"#dc143c\";\nvar cyan = \"#00ffff\";\nvar darkblue = \"#00008b\";\nvar darkcyan = \"#008b8b\";\nvar darkgoldenrod = \"#b8860b\";\nvar darkgray = \"#a9a9a9\";\nvar darkgreen = \"#006400\";\nvar darkgrey = \"#a9a9a9\";\nvar darkkhaki = \"#bdb76b\";\nvar darkmagenta = \"#8b008b\";\nvar darkolivegreen = \"#556b2f\";\nvar darkorange = \"#ff8c00\";\nvar darkorchid = \"#9932cc\";\nvar darkred = \"#8b0000\";\nvar darksalmon = \"#e9967a\";\nvar darkseagreen = \"#8fbc8f\";\nvar darkslateblue = \"#483d8b\";\nvar darkslategray = \"#2f4f4f\";\nvar darkslategrey = \"#2f4f4f\";\nvar darkturquoise = \"#00ced1\";\nvar darkviolet = \"#9400d3\";\nvar deeppink = \"#ff1493\";\nvar deepskyblue = \"#00bfff\";\nvar dimgray = \"#696969\";\nvar dimgrey = \"#696969\";\nvar dodgerblue = \"#1e90ff\";\nvar firebrick = \"#b22222\";\nvar floralwhite = \"#fffaf0\";\nvar forestgreen = \"#228b22\";\nvar fuchsia = \"#ff00ff\";\nvar gainsboro = \"#dcdcdc\";\nvar ghostwhite = \"#f8f8ff\";\nvar goldenrod = \"#daa520\";\nvar gold = \"#ffd700\";\nvar gray = \"#808080\";\nvar green = \"#008000\";\nvar greenyellow = \"#adff2f\";\nvar grey = \"#808080\";\nvar honeydew = \"#f0fff0\";\nvar hotpink = \"#ff69b4\";\nvar indianred = \"#cd5c5c\";\nvar indigo = \"#4b0082\";\nvar ivory = \"#fffff0\";\nvar khaki = \"#f0e68c\";\nvar lavenderblush = \"#fff0f5\";\nvar lavender = \"#e6e6fa\";\nvar lawngreen = \"#7cfc00\";\nvar lemonchiffon = \"#fffacd\";\nvar lightblue = \"#add8e6\";\nvar lightcoral = \"#f08080\";\nvar lightcyan = \"#e0ffff\";\nvar lightgoldenrodyellow = \"#fafad2\";\nvar lightgray = \"#d3d3d3\";\nvar lightgreen = \"#90ee90\";\nvar lightgrey = \"#d3d3d3\";\nvar lightpink = \"#ffb6c1\";\nvar lightsalmon = \"#ffa07a\";\nvar lightseagreen = \"#20b2aa\";\nvar lightskyblue = \"#87cefa\";\nvar lightslategray = \"#778899\";\nvar lightslategrey = \"#778899\";\nvar lightsteelblue = \"#b0c4de\";\nvar lightyellow = \"#ffffe0\";\nvar lime = \"#00ff00\";\nvar limegreen = \"#32cd32\";\nvar linen = \"#faf0e6\";\nvar magenta = \"#ff00ff\";\nvar maroon = \"#800000\";\nvar mediumaquamarine = \"#66cdaa\";\nvar mediumblue = \"#0000cd\";\nvar mediumorchid = \"#ba55d3\";\nvar mediumpurple = \"#9370db\";\nvar mediumseagreen = \"#3cb371\";\nvar mediumslateblue = \"#7b68ee\";\nvar mediumspringgreen = \"#00fa9a\";\nvar mediumturquoise = \"#48d1cc\";\nvar mediumvioletred = \"#c71585\";\nvar midnightblue = \"#191970\";\nvar mintcream = \"#f5fffa\";\nvar mistyrose = \"#ffe4e1\";\nvar moccasin = \"#ffe4b5\";\nvar navajowhite = \"#ffdead\";\nvar navy = \"#000080\";\nvar oldlace = \"#fdf5e6\";\nvar olive = \"#808000\";\nvar olivedrab = \"#6b8e23\";\nvar orange = \"#ffa500\";\nvar orangered = \"#ff4500\";\nvar orchid = \"#da70d6\";\nvar palegoldenrod = \"#eee8aa\";\nvar palegreen = \"#98fb98\";\nvar paleturquoise = \"#afeeee\";\nvar palevioletred = \"#db7093\";\nvar papayawhip = \"#ffefd5\";\nvar peachpuff = \"#ffdab9\";\nvar peru = \"#cd853f\";\nvar pink = \"#ffc0cb\";\nvar plum = \"#dda0dd\";\nvar powderblue = \"#b0e0e6\";\nvar purple = \"#800080\";\nvar rebeccapurple = \"#663399\";\nvar red = \"#ff0000\";\nvar rosybrown = \"#bc8f8f\";\nvar royalblue = \"#4169e1\";\nvar saddlebrown = \"#8b4513\";\nvar salmon = \"#fa8072\";\nvar sandybrown = \"#f4a460\";\nvar seagreen = \"#2e8b57\";\nvar seashell = \"#fff5ee\";\nvar sienna = \"#a0522d\";\nvar silver = \"#c0c0c0\";\nvar skyblue = \"#87ceeb\";\nvar slateblue = \"#6a5acd\";\nvar slategray = \"#708090\";\nvar slategrey = \"#708090\";\nvar snow = \"#fffafa\";\nvar springgreen = \"#00ff7f\";\nvar steelblue = \"#4682b4\";\nvar tan = \"#d2b48c\";\nvar teal = \"#008080\";\nvar thistle = \"#d8bfd8\";\nvar tomato = \"#ff6347\";\nvar turquoise = \"#40e0d0\";\nvar violet = \"#ee82ee\";\nvar wheat = \"#f5deb3\";\nvar white = \"#ffffff\";\nvar whitesmoke = \"#f5f5f5\";\nvar yellow = \"#ffff00\";\nvar yellowgreen = \"#9acd32\";\nvar cssColorNames = {\n  aliceblue: aliceblue,\n  antiquewhite: antiquewhite,\n  aqua: aqua,\n  aquamarine: aquamarine,\n  azure: azure,\n  beige: beige,\n  bisque: bisque,\n  black: black,\n  blanchedalmond: blanchedalmond,\n  blue: blue,\n  blueviolet: blueviolet,\n  brown: brown,\n  burlywood: burlywood,\n  cadetblue: cadetblue,\n  chartreuse: chartreuse,\n  chocolate: chocolate,\n  coral: coral,\n  cornflowerblue: cornflowerblue,\n  cornsilk: cornsilk,\n  crimson: crimson,\n  cyan: cyan,\n  darkblue: darkblue,\n  darkcyan: darkcyan,\n  darkgoldenrod: darkgoldenrod,\n  darkgray: darkgray,\n  darkgreen: darkgreen,\n  darkgrey: darkgrey,\n  darkkhaki: darkkhaki,\n  darkmagenta: darkmagenta,\n  darkolivegreen: darkolivegreen,\n  darkorange: darkorange,\n  darkorchid: darkorchid,\n  darkred: darkred,\n  darksalmon: darksalmon,\n  darkseagreen: darkseagreen,\n  darkslateblue: darkslateblue,\n  darkslategray: darkslategray,\n  darkslategrey: darkslategrey,\n  darkturquoise: darkturquoise,\n  darkviolet: darkviolet,\n  deeppink: deeppink,\n  deepskyblue: deepskyblue,\n  dimgray: dimgray,\n  dimgrey: dimgrey,\n  dodgerblue: dodgerblue,\n  firebrick: firebrick,\n  floralwhite: floralwhite,\n  forestgreen: forestgreen,\n  fuchsia: fuchsia,\n  gainsboro: gainsboro,\n  ghostwhite: ghostwhite,\n  goldenrod: goldenrod,\n  gold: gold,\n  gray: gray,\n  green: green,\n  greenyellow: greenyellow,\n  grey: grey,\n  honeydew: honeydew,\n  hotpink: hotpink,\n  indianred: indianred,\n  indigo: indigo,\n  ivory: ivory,\n  khaki: khaki,\n  lavenderblush: lavenderblush,\n  lavender: lavender,\n  lawngreen: lawngreen,\n  lemonchiffon: lemonchiffon,\n  lightblue: lightblue,\n  lightcoral: lightcoral,\n  lightcyan: lightcyan,\n  lightgoldenrodyellow: lightgoldenrodyellow,\n  lightgray: lightgray,\n  lightgreen: lightgreen,\n  lightgrey: lightgrey,\n  lightpink: lightpink,\n  lightsalmon: lightsalmon,\n  lightseagreen: lightseagreen,\n  lightskyblue: lightskyblue,\n  lightslategray: lightslategray,\n  lightslategrey: lightslategrey,\n  lightsteelblue: lightsteelblue,\n  lightyellow: lightyellow,\n  lime: lime,\n  limegreen: limegreen,\n  linen: linen,\n  magenta: magenta,\n  maroon: maroon,\n  mediumaquamarine: mediumaquamarine,\n  mediumblue: mediumblue,\n  mediumorchid: mediumorchid,\n  mediumpurple: mediumpurple,\n  mediumseagreen: mediumseagreen,\n  mediumslateblue: mediumslateblue,\n  mediumspringgreen: mediumspringgreen,\n  mediumturquoise: mediumturquoise,\n  mediumvioletred: mediumvioletred,\n  midnightblue: midnightblue,\n  mintcream: mintcream,\n  mistyrose: mistyrose,\n  moccasin: moccasin,\n  navajowhite: navajowhite,\n  navy: navy,\n  oldlace: oldlace,\n  olive: olive,\n  olivedrab: olivedrab,\n  orange: orange,\n  orangered: orangered,\n  orchid: orchid,\n  palegoldenrod: palegoldenrod,\n  palegreen: palegreen,\n  paleturquoise: paleturquoise,\n  palevioletred: palevioletred,\n  papayawhip: papayawhip,\n  peachpuff: peachpuff,\n  peru: peru,\n  pink: pink,\n  plum: plum,\n  powderblue: powderblue,\n  purple: purple,\n  rebeccapurple: rebeccapurple,\n  red: red,\n  rosybrown: rosybrown,\n  royalblue: royalblue,\n  saddlebrown: saddlebrown,\n  salmon: salmon,\n  sandybrown: sandybrown,\n  seagreen: seagreen,\n  seashell: seashell,\n  sienna: sienna,\n  silver: silver,\n  skyblue: skyblue,\n  slateblue: slateblue,\n  slategray: slategray,\n  slategrey: slategrey,\n  snow: snow,\n  springgreen: springgreen,\n  steelblue: steelblue,\n  tan: tan,\n  teal: teal,\n  thistle: thistle,\n  tomato: tomato,\n  turquoise: turquoise,\n  violet: violet,\n  wheat: wheat,\n  white: white,\n  whitesmoke: whitesmoke,\n  yellow: yellow,\n  yellowgreen: yellowgreen\n};\n/**\n * Converts a hexadecimal color number to an [R, G, B] array of normalized floats (numbers from 0.0 to 1.0).\n *\n * @example\n * PIXI.utils.hex2rgb(0xffffff); // returns [1, 1, 1]\n * @memberof PIXI.utils\n * @function hex2rgb\n * @param {number} hex - The hexadecimal number to convert\n * @param  {number[]} [out=[]] - If supplied, this array will be used rather than returning a new one\n * @return {number[]} An array representing the [R, G, B] of the color where all values are floats.\n */\n\nfunction hex2rgb(hex, out) {\n  if (out === void 0) {\n    out = [];\n  }\n\n  out[0] = (hex >> 16 & 0xFF) / 255;\n  out[1] = (hex >> 8 & 0xFF) / 255;\n  out[2] = (hex & 0xFF) / 255;\n  return out;\n}\n/**\n * Converts a hexadecimal color number to a string.\n *\n * @example\n * PIXI.utils.hex2string(0xffffff); // returns \"#ffffff\"\n * @memberof PIXI.utils\n * @function hex2string\n * @param {number} hex - Number in hex (e.g., `0xffffff`)\n * @return {string} The string color (e.g., `\"#ffffff\"`).\n */\n\n\nfunction hex2string(hex) {\n  var hexString = hex.toString(16);\n  hexString = '000000'.substring(0, 6 - hexString.length) + hexString;\n  return \"#\" + hexString;\n}\n/**\n * Converts a string to a hexadecimal color number.\n * It can handle:\n *  hex strings starting with #: \"#ffffff\"\n *  hex strings starting with 0x: \"0xffffff\"\n *  hex strings without prefix: \"ffffff\"\n *  css colors: \"black\"\n *\n * @example\n * PIXI.utils.string2hex(\"#ffffff\"); // returns 0xffffff\n * @memberof PIXI.utils\n * @function string2hex\n * @param {string} string - The string color (e.g., `\"#ffffff\"`)\n * @return {number} Number in hexadecimal.\n */\n\n\nfunction string2hex(string) {\n  if (typeof string === 'string') {\n    string = cssColorNames[string.toLowerCase()] || string;\n\n    if (string[0] === '#') {\n      string = string.slice(1);\n    }\n  }\n\n  return parseInt(string, 16);\n}\n/**\n * Converts a color as an [R, G, B] array of normalized floats to a hexadecimal number.\n *\n * @example\n * PIXI.utils.rgb2hex([1, 1, 1]); // returns 0xffffff\n * @memberof PIXI.utils\n * @function rgb2hex\n * @param {number[]} rgb - Array of numbers where all values are normalized floats from 0.0 to 1.0.\n * @return {number} Number in hexadecimal.\n */\n\n\nfunction rgb2hex(rgb) {\n  return (rgb[0] * 255 << 16) + (rgb[1] * 255 << 8) + (rgb[2] * 255 | 0);\n}\n/**\n * Corrects PixiJS blend, takes premultiplied alpha into account\n *\n * @memberof PIXI.utils\n * @function mapPremultipliedBlendModes\n * @private\n * @return {Array<number[]>} Mapped modes.\n */\n\n\nfunction mapPremultipliedBlendModes() {\n  var pm = [];\n  var npm = [];\n\n  for (var i = 0; i < 32; i++) {\n    pm[i] = i;\n    npm[i] = i;\n  }\n\n  pm[BLEND_MODES.NORMAL_NPM] = BLEND_MODES.NORMAL;\n  pm[BLEND_MODES.ADD_NPM] = BLEND_MODES.ADD;\n  pm[BLEND_MODES.SCREEN_NPM] = BLEND_MODES.SCREEN;\n  npm[BLEND_MODES.NORMAL] = BLEND_MODES.NORMAL_NPM;\n  npm[BLEND_MODES.ADD] = BLEND_MODES.ADD_NPM;\n  npm[BLEND_MODES.SCREEN] = BLEND_MODES.SCREEN_NPM;\n  var array = [];\n  array.push(npm);\n  array.push(pm);\n  return array;\n}\n/**\n * maps premultiply flag and blendMode to adjusted blendMode\n * @memberof PIXI.utils\n * @const premultiplyBlendMode\n * @type {Array<number[]>}\n */\n\n\nvar premultiplyBlendMode = mapPremultipliedBlendModes();\n/**\n * changes blendMode according to texture format\n *\n * @memberof PIXI.utils\n * @function correctBlendMode\n * @param {number} blendMode - supposed blend mode\n * @param {boolean} premultiplied - whether source is premultiplied\n * @returns {number} true blend mode for this texture\n */\n\nfunction correctBlendMode(blendMode, premultiplied) {\n  return premultiplyBlendMode[premultiplied ? 1 : 0][blendMode];\n}\n/**\n * combines rgb and alpha to out array\n *\n * @memberof PIXI.utils\n * @function premultiplyRgba\n * @param {Float32Array|number[]} rgb - input rgb\n * @param {number} alpha - alpha param\n * @param {Float32Array} [out] - output\n * @param {boolean} [premultiply=true] - do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\n\n\nfunction premultiplyRgba(rgb, alpha, out, premultiply) {\n  out = out || new Float32Array(4);\n\n  if (premultiply || premultiply === undefined) {\n    out[0] = rgb[0] * alpha;\n    out[1] = rgb[1] * alpha;\n    out[2] = rgb[2] * alpha;\n  } else {\n    out[0] = rgb[0];\n    out[1] = rgb[1];\n    out[2] = rgb[2];\n  }\n\n  out[3] = alpha;\n  return out;\n}\n/**\n * premultiplies tint\n *\n * @memberof PIXI.utils\n * @function premultiplyTint\n * @param {number} tint - integer RGB\n * @param {number} alpha - floating point alpha (0.0-1.0)\n * @returns {number} tint multiplied by alpha\n */\n\n\nfunction premultiplyTint(tint, alpha) {\n  if (alpha === 1.0) {\n    return (alpha * 255 << 24) + tint;\n  }\n\n  if (alpha === 0.0) {\n    return 0;\n  }\n\n  var R = tint >> 16 & 0xFF;\n  var G = tint >> 8 & 0xFF;\n  var B = tint & 0xFF;\n  R = R * alpha + 0.5 | 0;\n  G = G * alpha + 0.5 | 0;\n  B = B * alpha + 0.5 | 0;\n  return (alpha * 255 << 24) + (R << 16) + (G << 8) + B;\n}\n/**\n * converts integer tint and float alpha to vec4 form, premultiplies by default\n *\n * @memberof PIXI.utils\n * @function premultiplyTintToRgba\n * @param {number} tint - input tint\n * @param {number} alpha - alpha param\n * @param {Float32Array} [out] - output\n * @param {boolean} [premultiply=true] - do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\n\n\nfunction premultiplyTintToRgba(tint, alpha, out, premultiply) {\n  out = out || new Float32Array(4);\n  out[0] = (tint >> 16 & 0xFF) / 255.0;\n  out[1] = (tint >> 8 & 0xFF) / 255.0;\n  out[2] = (tint & 0xFF) / 255.0;\n\n  if (premultiply || premultiply === undefined) {\n    out[0] *= alpha;\n    out[1] *= alpha;\n    out[2] *= alpha;\n  }\n\n  out[3] = alpha;\n  return out;\n}\n/**\n * Generic Mask Stack data structure\n *\n * @memberof PIXI.utils\n * @function createIndicesForQuads\n * @param {number} size - Number of quads\n * @param {Uint16Array|Uint32Array} [outBuffer] - Buffer for output, length has to be `6 * size`\n * @return {Uint16Array|Uint32Array} - Resulting index buffer\n */\n\n\nfunction createIndicesForQuads(size, outBuffer) {\n  if (outBuffer === void 0) {\n    outBuffer = null;\n  } // the total number of indices in our array, there are 6 points per quad.\n\n\n  var totalIndices = size * 6;\n  outBuffer = outBuffer || new Uint16Array(totalIndices);\n\n  if (outBuffer.length !== totalIndices) {\n    throw new Error(\"Out buffer length is incorrect, got \" + outBuffer.length + \" and expected \" + totalIndices);\n  } // fill the indices with the quads to draw\n\n\n  for (var i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\n    outBuffer[i + 0] = j + 0;\n    outBuffer[i + 1] = j + 1;\n    outBuffer[i + 2] = j + 2;\n    outBuffer[i + 3] = j + 0;\n    outBuffer[i + 4] = j + 2;\n    outBuffer[i + 5] = j + 3;\n  }\n\n  return outBuffer;\n}\n\nfunction getBufferType(array) {\n  if (array.BYTES_PER_ELEMENT === 4) {\n    if (array instanceof Float32Array) {\n      return 'Float32Array';\n    } else if (array instanceof Uint32Array) {\n      return 'Uint32Array';\n    }\n\n    return 'Int32Array';\n  } else if (array.BYTES_PER_ELEMENT === 2) {\n    if (array instanceof Uint16Array) {\n      return 'Uint16Array';\n    }\n  } else if (array.BYTES_PER_ELEMENT === 1) {\n    if (array instanceof Uint8Array) {\n      return 'Uint8Array';\n    }\n  } // TODO map out the rest of the array elements!\n\n\n  return null;\n}\n/* eslint-disable object-shorthand */\n\n\nvar map = {\n  Float32Array: Float32Array,\n  Uint32Array: Uint32Array,\n  Int32Array: Int32Array,\n  Uint8Array: Uint8Array\n};\n\nfunction interleaveTypedArrays(arrays, sizes) {\n  var outSize = 0;\n  var stride = 0;\n  var views = {};\n\n  for (var i = 0; i < arrays.length; i++) {\n    stride += sizes[i];\n    outSize += arrays[i].length;\n  }\n\n  var buffer = new ArrayBuffer(outSize * 4);\n  var out = null;\n  var littleOffset = 0;\n\n  for (var i = 0; i < arrays.length; i++) {\n    var size = sizes[i];\n    var array = arrays[i];\n    /*\n    @todo This is unsafe casting but consistent with how the code worked previously. Should it stay this way\n          or should and `getBufferTypeUnsafe` function be exposed that throws an Error if unsupported type is passed?\n     */\n\n    var type = getBufferType(array);\n\n    if (!views[type]) {\n      views[type] = new map[type](buffer);\n    }\n\n    out = views[type];\n\n    for (var j = 0; j < array.length; j++) {\n      var indexStart = (j / size | 0) * stride + littleOffset;\n      var index = j % size;\n      out[indexStart + index] = array[j];\n    }\n\n    littleOffset += size;\n  }\n\n  return new Float32Array(buffer);\n} // Taken from the bit-twiddle package\n\n/**\n * Rounds to next power of two.\n *\n * @function nextPow2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @return {number}\n */\n\n\nfunction nextPow2(v) {\n  v += v === 0 ? 1 : 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\n/**\n * Checks if a number is a power of two.\n *\n * @function isPow2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @return {boolean} `true` if value is power of two\n */\n\n\nfunction isPow2(v) {\n  return !(v & v - 1) && !!v;\n}\n/**\n * Computes ceil of log base 2\n *\n * @function log2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @return {number} logarithm base 2\n */\n\n\nfunction log2(v) {\n  var r = (v > 0xFFFF ? 1 : 0) << 4;\n  v >>>= r;\n  var shift = (v > 0xFF ? 1 : 0) << 3;\n  v >>>= shift;\n  r |= shift;\n  shift = (v > 0xF ? 1 : 0) << 2;\n  v >>>= shift;\n  r |= shift;\n  shift = (v > 0x3 ? 1 : 0) << 1;\n  v >>>= shift;\n  r |= shift;\n  return r | v >> 1;\n}\n/**\n * Remove items from a javascript array without generating garbage\n *\n * @function removeItems\n * @memberof PIXI.utils\n * @param {Array<any>} arr - Array to remove elements from\n * @param {number} startIdx - starting index\n * @param {number} removeCount - how many to remove\n */\n\n\nfunction removeItems(arr, startIdx, removeCount) {\n  var length = arr.length;\n  var i;\n\n  if (startIdx >= length || removeCount === 0) {\n    return;\n  }\n\n  removeCount = startIdx + removeCount > length ? length - startIdx : removeCount;\n  var len = length - removeCount;\n\n  for (i = startIdx; i < len; ++i) {\n    arr[i] = arr[i + removeCount];\n  }\n\n  arr.length = len;\n}\n/**\n * Returns sign of number\n *\n * @memberof PIXI.utils\n * @function sign\n * @param {number} n - the number to check the sign of\n * @returns {number} 0 if `n` is 0, -1 if `n` is negative, 1 if `n` is positive\n */\n\n\nfunction sign(n) {\n  if (n === 0) {\n    return 0;\n  }\n\n  return n < 0 ? -1 : 1;\n}\n\nvar nextUid = 0;\n/**\n * Gets the next unique identifier\n *\n * @memberof PIXI.utils\n * @function uid\n * @return {number} The next unique identifier to use.\n */\n\nfunction uid() {\n  return ++nextUid;\n} // A map of warning messages already fired\n\n\nvar warnings = {};\n/**\n * Helper for warning developers about deprecated features & settings.\n * A stack track for warnings is given; useful for tracking-down where\n * deprecated methods/properties/classes are being used within the code.\n *\n * @memberof PIXI.utils\n * @function deprecation\n * @param {string} version - The version where the feature became deprecated\n * @param {string} message - Message should include what is deprecated, where, and the new solution\n * @param {number} [ignoreDepth=3] - The number of steps to ignore at the top of the error stack\n *        this is mostly to ignore internal deprecation calls.\n */\n\nfunction deprecation(version, message, ignoreDepth) {\n  if (ignoreDepth === void 0) {\n    ignoreDepth = 3;\n  } // Ignore duplicat\n\n\n  if (warnings[message]) {\n    return;\n  }\n  /* eslint-disable no-console */\n\n\n  var stack = new Error().stack; // Handle IE < 10 and Safari < 6\n\n  if (typeof stack === 'undefined') {\n    console.warn('PixiJS Deprecation Warning: ', message + \"\\nDeprecated since v\" + version);\n  } else {\n    // chop off the stack trace which includes PixiJS internal calls\n    stack = stack.split('\\n').splice(ignoreDepth).join('\\n');\n\n    if (console.groupCollapsed) {\n      console.groupCollapsed('%cPixiJS Deprecation Warning: %c%s', 'color:#614108;background:#fffbe6', 'font-weight:normal;color:#614108;background:#fffbe6', message + \"\\nDeprecated since v\" + version);\n      console.warn(stack);\n      console.groupEnd();\n    } else {\n      console.warn('PixiJS Deprecation Warning: ', message + \"\\nDeprecated since v\" + version);\n      console.warn(stack);\n    }\n  }\n  /* eslint-enable no-console */\n\n\n  warnings[message] = true;\n}\n/**\n * @todo Describe property usage\n *\n * @static\n * @name ProgramCache\n * @memberof PIXI.utils\n * @type {Object}\n */\n\n\nvar ProgramCache = {};\n/**\n * @todo Describe property usage\n *\n * @static\n * @name TextureCache\n * @memberof PIXI.utils\n * @type {Object}\n */\n\nvar TextureCache = Object.create(null);\n/**\n * @todo Describe property usage\n *\n * @static\n * @name BaseTextureCache\n * @memberof PIXI.utils\n * @type {Object}\n */\n\nvar BaseTextureCache = Object.create(null);\n/**\n * Destroys all texture in the cache\n *\n * @memberof PIXI.utils\n * @function destroyTextureCache\n */\n\nfunction destroyTextureCache() {\n  var key;\n\n  for (key in TextureCache) {\n    TextureCache[key].destroy();\n  }\n\n  for (key in BaseTextureCache) {\n    BaseTextureCache[key].destroy();\n  }\n}\n/**\n * Removes all textures from cache, but does not destroy them\n *\n * @memberof PIXI.utils\n * @function clearTextureCache\n */\n\n\nfunction clearTextureCache() {\n  var key;\n\n  for (key in TextureCache) {\n    delete TextureCache[key];\n  }\n\n  for (key in BaseTextureCache) {\n    delete BaseTextureCache[key];\n  }\n}\n/**\n * Creates a Canvas element of the given size to be used as a target for rendering to.\n *\n * @class\n * @memberof PIXI.utils\n */\n\n\nvar CanvasRenderTarget =\n/** @class */\nfunction () {\n  /**\n   * @param width - the width for the newly created canvas\n   * @param height - the height for the newly created canvas\n   * @param {number} [resolution=PIXI.settings.RESOLUTION] - The resolution / device pixel ratio of the canvas\n   */\n  function CanvasRenderTarget(width, height, resolution) {\n    this.canvas = document.createElement('canvas');\n    this.context = this.canvas.getContext('2d');\n    this.resolution = resolution || settings.RESOLUTION;\n    this.resize(width, height);\n  }\n  /**\n   * Clears the canvas that was created by the CanvasRenderTarget class.\n   *\n   * @private\n   */\n\n\n  CanvasRenderTarget.prototype.clear = function () {\n    this.context.setTransform(1, 0, 0, 1, 0, 0);\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  };\n  /**\n   * Resizes the canvas to the specified width and height.\n   *\n   * @param desiredWidth - the desired width of the canvas\n   * @param desiredHeight - the desired height of the canvas\n   */\n\n\n  CanvasRenderTarget.prototype.resize = function (desiredWidth, desiredHeight) {\n    this.canvas.width = Math.round(desiredWidth * this.resolution);\n    this.canvas.height = Math.round(desiredHeight * this.resolution);\n  };\n  /** Destroys this canvas. */\n\n\n  CanvasRenderTarget.prototype.destroy = function () {\n    this.context = null;\n    this.canvas = null;\n  };\n\n  Object.defineProperty(CanvasRenderTarget.prototype, \"width\", {\n    /**\n     * The width of the canvas buffer in pixels.\n     *\n     * @member {number}\n     */\n    get: function get() {\n      return this.canvas.width;\n    },\n    set: function set(val) {\n      this.canvas.width = Math.round(val);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CanvasRenderTarget.prototype, \"height\", {\n    /**\n     * The height of the canvas buffer in pixels.\n     *\n     * @member {number}\n     */\n    get: function get() {\n      return this.canvas.height;\n    },\n    set: function set(val) {\n      this.canvas.height = Math.round(val);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return CanvasRenderTarget;\n}();\n/**\n * Trim transparent borders from a canvas\n *\n * @memberof PIXI.utils\n * @function trimCanvas\n * @param {HTMLCanvasElement} canvas - the canvas to trim\n * @returns {object} Trim data\n */\n\n\nfunction trimCanvas(canvas) {\n  // https://gist.github.com/remy/784508\n  var width = canvas.width;\n  var height = canvas.height;\n  var context = canvas.getContext('2d');\n  var imageData = context.getImageData(0, 0, width, height);\n  var pixels = imageData.data;\n  var len = pixels.length;\n  var bound = {\n    top: null,\n    left: null,\n    right: null,\n    bottom: null\n  };\n  var data = null;\n  var i;\n  var x;\n  var y;\n\n  for (i = 0; i < len; i += 4) {\n    if (pixels[i + 3] !== 0) {\n      x = i / 4 % width;\n      y = ~~(i / 4 / width);\n\n      if (bound.top === null) {\n        bound.top = y;\n      }\n\n      if (bound.left === null) {\n        bound.left = x;\n      } else if (x < bound.left) {\n        bound.left = x;\n      }\n\n      if (bound.right === null) {\n        bound.right = x + 1;\n      } else if (bound.right < x) {\n        bound.right = x + 1;\n      }\n\n      if (bound.bottom === null) {\n        bound.bottom = y;\n      } else if (bound.bottom < y) {\n        bound.bottom = y;\n      }\n    }\n  }\n\n  if (bound.top !== null) {\n    width = bound.right - bound.left;\n    height = bound.bottom - bound.top + 1;\n    data = context.getImageData(bound.left, bound.top, width, height);\n  }\n\n  return {\n    height: height,\n    width: width,\n    data: data\n  };\n}\n/**\n * Regexp for data URI.\n * Based on: {@link https://github.com/ragingwind/data-uri-regex}\n *\n * @static\n * @constant {RegExp|string} DATA_URI\n * @memberof PIXI\n * @example data:image/png;base64\n */\n\n\nvar DATA_URI = /^\\s*data:(?:([\\w-]+)\\/([\\w+.-]+))?(?:;charset=([\\w-]+))?(?:;(base64))?,(.*)/i;\n/**\n * @memberof PIXI.utils\n * @interface DecomposedDataUri\n */\n\n/**\n * type, eg. `image`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} mediaType\n */\n\n/**\n * Sub type, eg. `png`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} subType\n */\n\n/**\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} charset\n */\n\n/**\n * Data encoding, eg. `base64`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} encoding\n */\n\n/**\n * The actual data\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} data\n */\n\n/**\n * Split a data URI into components. Returns undefined if\n * parameter `dataUri` is not a valid data URI.\n *\n * @memberof PIXI.utils\n * @function decomposeDataUri\n * @param {string} dataUri - the data URI to check\n * @return {PIXI.utils.DecomposedDataUri|undefined} The decomposed data uri or undefined\n */\n\nfunction decomposeDataUri(dataUri) {\n  var dataUriMatch = DATA_URI.exec(dataUri);\n\n  if (dataUriMatch) {\n    return {\n      mediaType: dataUriMatch[1] ? dataUriMatch[1].toLowerCase() : undefined,\n      subType: dataUriMatch[2] ? dataUriMatch[2].toLowerCase() : undefined,\n      charset: dataUriMatch[3] ? dataUriMatch[3].toLowerCase() : undefined,\n      encoding: dataUriMatch[4] ? dataUriMatch[4].toLowerCase() : undefined,\n      data: dataUriMatch[5]\n    };\n  }\n\n  return undefined;\n}\n\nvar tempAnchor;\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n * Nipped from the resource loader!\n *\n * @ignore\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @return {string} The crossOrigin value to use (or empty string for none).\n */\n\nfunction determineCrossOrigin(url$1, loc) {\n  if (loc === void 0) {\n    loc = globalThis.location;\n  } // data: and javascript: urls are considered same-origin\n\n\n  if (url$1.indexOf('data:') === 0) {\n    return '';\n  } // default is window.location\n\n\n  loc = loc || globalThis.location;\n\n  if (!tempAnchor) {\n    tempAnchor = document.createElement('a');\n  } // let the browser determine the full href for the url of this resource and then\n  // parse with the node url lib, we can't use the properties of the anchor element\n  // because they don't work in IE9 :(\n\n\n  tempAnchor.href = url$1;\n  var parsedUrl = url.parse(tempAnchor.href);\n  var samePort = !parsedUrl.port && loc.port === '' || parsedUrl.port === loc.port; // if cross origin\n\n  if (parsedUrl.hostname !== loc.hostname || !samePort || parsedUrl.protocol !== loc.protocol) {\n    return 'anonymous';\n  }\n\n  return '';\n}\n/**\n * get the resolution / device pixel ratio of an asset by looking for the prefix\n * used by spritesheets and image urls\n *\n * @memberof PIXI.utils\n * @function getResolutionOfUrl\n * @param {string} url - the image path\n * @param {number} [defaultValue=1] - the defaultValue if no filename prefix is set.\n * @return {number} resolution / device pixel ratio of an asset\n */\n\n\nfunction getResolutionOfUrl(url, defaultValue) {\n  var resolution = settings.RETINA_PREFIX.exec(url);\n\n  if (resolution) {\n    return parseFloat(resolution[1]);\n  }\n\n  return defaultValue !== undefined ? defaultValue : 1;\n}\n\nexport { BaseTextureCache, CanvasRenderTarget, DATA_URI, ProgramCache, TextureCache, clearTextureCache, correctBlendMode, createIndicesForQuads, decomposeDataUri, deprecation, destroyTextureCache, determineCrossOrigin, getBufferType, getResolutionOfUrl, hex2rgb, hex2string, interleaveTypedArrays, isPow2, isWebGLSupported, log2, nextPow2, premultiplyBlendMode, premultiplyRgba, premultiplyTint, premultiplyTintToRgba, removeItems, rgb2hex, sayHello, sign, skipHello, string2hex, trimCanvas, uid, url };","map":{"version":3,"mappings":"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","names":["url","parse","_parse","format","_format","resolve","_resolve","settings","RETINA_PREFIX","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","saidHello","VERSION","skipHello","sayHello","type","navigator","userAgent","toLowerCase","indexOf","args","console","log","apply","_a","globalThis","supported","isWebGLSupported","contextOptions","stencil","failIfMajorPerformanceCaveat","WebGLRenderingContext","canvas","document","createElement","gl","getContext","success","getContextAttributes","loseContext","getExtension","e","hex2rgb","hex","out","hex2string","hexString","toString","substring","length","string2hex","string","cssColorNames","slice","parseInt","rgb2hex","rgb","mapPremultipliedBlendModes","pm","npm","i","BLEND_MODES","NORMAL_NPM","NORMAL","ADD_NPM","ADD","SCREEN_NPM","SCREEN","array","push","premultiplyBlendMode","correctBlendMode","blendMode","premultiplied","premultiplyRgba","alpha","premultiply","Float32Array","undefined","premultiplyTint","tint","R","G","B","premultiplyTintToRgba","createIndicesForQuads","size","outBuffer","totalIndices","Uint16Array","Error","j","getBufferType","BYTES_PER_ELEMENT","Uint32Array","Uint8Array","map","Int32Array","interleaveTypedArrays","arrays","sizes","outSize","stride","views","buffer","ArrayBuffer","littleOffset","indexStart","index","nextPow2","v","isPow2","log2","r","shift","removeItems","arr","startIdx","removeCount","len","sign","n","nextUid","uid","warnings","deprecation","version","message","ignoreDepth","stack","warn","split","splice","join","groupCollapsed","groupEnd","ProgramCache","TextureCache","Object","create","BaseTextureCache","destroyTextureCache","key","destroy","clearTextureCache","width","height","resolution","context","RESOLUTION","resize","CanvasRenderTarget","setTransform","clearRect","desiredWidth","desiredHeight","Math","round","val","trimCanvas","imageData","getImageData","pixels","data","bound","top","left","right","bottom","x","y","DATA_URI","decomposeDataUri","dataUri","dataUriMatch","exec","mediaType","subType","charset","encoding","tempAnchor","determineCrossOrigin","loc","location","href","parsedUrl","_url","samePort","port","hostname","protocol","getResolutionOfUrl","defaultValue","parseFloat"],"sources":["../../src/url.ts","../../src/settings.ts","../../src/browser/hello.ts","../../src/browser/isWebGLSupported.ts","../../src/color/hex.ts","../../src/color/premultiply.ts","../../src/data/createIndicesForQuads.ts","../../src/data/getBufferType.ts","../../src/data/interleaveTypedArrays.ts","../../src/data/pow2.ts","../../src/data/removeItems.ts","../../src/data/sign.ts","../../src/data/uid.ts","../../src/logging/deprecation.ts","../../src/media/caches.ts","../../src/media/CanvasRenderTarget.ts","../../src/media/trimCanvas.ts","../../src/const.ts","../../src/network/decomposeDataUri.ts","../../src/network/determineCrossOrigin.ts","../../src/network/getResolutionOfUrl.ts"],"sourcesContent":["/**\n * This file contains redeclared types for Node `url` and `querystring` modules. These modules\n * don't provide their own typings but instead are a part of the full Node typings. The purpose of\n * this file is to redeclare the required types to avoid having the whole Node types as a\n * dependency.\n */\n\nimport { parse as _parse, format as _format, resolve as _resolve } from 'url';\n\ninterface ParsedUrlQuery {\n    [key: string]: string | string[];\n}\n\ninterface ParsedUrlQueryInput {\n    [key: string]: unknown;\n}\n\ninterface UrlObjectCommon {\n    auth?: string;\n    hash?: string;\n    host?: string;\n    hostname?: string;\n    href?: string;\n    path?: string;\n    pathname?: string;\n    protocol?: string;\n    search?: string;\n    slashes?: boolean;\n}\n\n// Input to `url.format`\ninterface UrlObject extends UrlObjectCommon {\n    port?: string | number;\n    query?: string | null | ParsedUrlQueryInput;\n}\n\n// Output of `url.parse`\ninterface Url extends UrlObjectCommon {\n    port?: string;\n    query?: string | null | ParsedUrlQuery;\n}\n\ninterface UrlWithParsedQuery extends Url {\n    query: ParsedUrlQuery;\n}\n\ninterface UrlWithStringQuery extends Url {\n    query: string | null;\n}\n\ninterface URLFormatOptions {\n    auth?: boolean;\n    fragment?: boolean;\n    search?: boolean;\n    unicode?: boolean;\n}\n\ntype ParseFunction = {\n    (urlStr: string): UrlWithStringQuery;\n    (urlStr: string, parseQueryString: false | undefined, slashesDenoteHost?: boolean): UrlWithStringQuery;\n    (urlStr: string, parseQueryString: true, slashesDenoteHost?: boolean): UrlWithParsedQuery;\n    (urlStr: string, parseQueryString: boolean, slashesDenoteHost?: boolean): Url;\n};\n\ntype FormatFunction = {\n    (URL: URL, options?: URLFormatOptions): string;\n    (urlObject: UrlObject | string): string;\n};\n\ntype ResolveFunction = {\n    (from: string, to: string): string;\n};\n\nexport const url = {\n    parse: _parse as ParseFunction,\n    format: _format as FormatFunction,\n    resolve: _resolve as ResolveFunction,\n};\n","import { settings } from '@pixi/settings';\n\n/**\n * The prefix that denotes a URL is for a retina asset.\n *\n * @static\n * @name RETINA_PREFIX\n * @memberof PIXI.settings\n * @type {RegExp}\n * @default /@([0-9\\.]+)x/\n * @example `@2x`\n */\nsettings.RETINA_PREFIX = /@([0-9\\.]+)x/;\n\n/**\n * Should the `failIfMajorPerformanceCaveat` flag be enabled as a context option used in the `isWebGLSupported` function.\n * If set to true, a WebGL renderer can fail to be created if the browser thinks there could be performance issues when\n * using WebGL.\n *\n * In PixiJS v6 this has changed from true to false by default, to allow WebGL to work in as many scenarios as possible.\n * However, some users may have a poor experience, for example, if a user has a gpu or driver version blacklisted by the\n * browser.\n *\n * If your application requires high performance rendering, you may wish to set this to false.\n * We recommend one of two options if you decide to set this flag to false:\n *\n * 1: Use the `pixi.js-legacy` package, which includes a Canvas renderer as a fallback in case high performance WebGL is\n *    not supported.\n *\n * 2: Call `isWebGLSupported` (which if found in the PIXI.utils package) in your code before attempting to create a PixiJS\n *    renderer, and show an error message to the user if the function returns false, explaining that their device & browser\n *    combination does not support high performance WebGL.\n *    This is a much better strategy than trying to create a PixiJS renderer and finding it then fails.\n *\n * @static\n * @name FAIL_IF_MAJOR_PERFORMANCE_CAVEAT\n * @memberof PIXI.settings\n * @type {boolean}\n * @default false\n */\nsettings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\n\nexport { settings };\n","let saidHello = false;\nconst VERSION = '$_VERSION';\n\n/**\n * Skips the hello message of renderers that are created after this is run.\n *\n * @function skipHello\n * @memberof PIXI.utils\n */\nexport function skipHello(): void\n{\n    saidHello = true;\n}\n\n/**\n * Logs out the version and renderer information for this running instance of PIXI.\n * If you don't want to see this message you can run `PIXI.utils.skipHello()` before\n * creating your renderer. Keep in mind that doing that will forever make you a jerk face.\n *\n * @static\n * @function sayHello\n * @memberof PIXI.utils\n * @param {string} type - The string renderer type to log.\n */\nexport function sayHello(type: string): void\n{\n    if (saidHello)\n    {\n        return;\n    }\n\n    if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1)\n    {\n        const args = [\n            `\\n %c %c %c PixiJS ${VERSION} - ✰ ${type} ✰  %c  %c  http://www.pixijs.com/  %c %c ♥%c♥%c♥ \\n\\n`,\n            'background: #ff66a5; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'color: #ff66a5; background: #030307; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'background: #ffc3dc; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n        ];\n\n        globalThis.console.log(...args);\n    }\n    else if (globalThis.console)\n    {\n        globalThis.console.log(`PixiJS ${VERSION} - ${type} - http://www.pixijs.com/`);\n    }\n\n    saidHello = true;\n}\n","import { settings } from '../settings';\n\nlet supported: boolean|undefined;\n\n/**\n * Helper for checking for WebGL support.\n *\n * @memberof PIXI.utils\n * @function isWebGLSupported\n * @return {boolean} Is WebGL supported.\n */\nexport function isWebGLSupported(): boolean\n{\n    if (typeof supported === 'undefined')\n    {\n        supported = (function supported(): boolean\n        {\n            const contextOptions = {\n                stencil: true,\n                failIfMajorPerformanceCaveat: settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT,\n            };\n\n            try\n            {\n                if (!globalThis.WebGLRenderingContext)\n                {\n                    return false;\n                }\n\n                const canvas = document.createElement('canvas');\n                let gl = (\n                    canvas.getContext('webgl', contextOptions)\n                    || canvas.getContext('experimental-webgl', contextOptions)\n                ) as WebGLRenderingContext;\n\n                const success = !!(gl && gl.getContextAttributes().stencil);\n\n                if (gl)\n                {\n                    const loseContext = gl.getExtension('WEBGL_lose_context');\n\n                    if (loseContext)\n                    {\n                        loseContext.loseContext();\n                    }\n                }\n\n                gl = null;\n\n                return success;\n            }\n            catch (e)\n            {\n                return false;\n            }\n        })();\n    }\n\n    return supported;\n}\n","import { default as cssColorNames } from 'css-color-names';\n\n/**\n * Converts a hexadecimal color number to an [R, G, B] array of normalized floats (numbers from 0.0 to 1.0).\n *\n * @example\n * PIXI.utils.hex2rgb(0xffffff); // returns [1, 1, 1]\n * @memberof PIXI.utils\n * @function hex2rgb\n * @param {number} hex - The hexadecimal number to convert\n * @param  {number[]} [out=[]] - If supplied, this array will be used rather than returning a new one\n * @return {number[]} An array representing the [R, G, B] of the color where all values are floats.\n */\nexport function hex2rgb(hex: number, out: Array<number> | Float32Array = []): Array<number> | Float32Array\n{\n    out[0] = ((hex >> 16) & 0xFF) / 255;\n    out[1] = ((hex >> 8) & 0xFF) / 255;\n    out[2] = (hex & 0xFF) / 255;\n\n    return out;\n}\n\n/**\n * Converts a hexadecimal color number to a string.\n *\n * @example\n * PIXI.utils.hex2string(0xffffff); // returns \"#ffffff\"\n * @memberof PIXI.utils\n * @function hex2string\n * @param {number} hex - Number in hex (e.g., `0xffffff`)\n * @return {string} The string color (e.g., `\"#ffffff\"`).\n */\nexport function hex2string(hex: number): string\n{\n    let hexString = hex.toString(16);\n\n    hexString = '000000'.substring(0, 6 - hexString.length) + hexString;\n\n    return `#${hexString}`;\n}\n\n/**\n * Converts a string to a hexadecimal color number.\n * It can handle:\n *  hex strings starting with #: \"#ffffff\"\n *  hex strings starting with 0x: \"0xffffff\"\n *  hex strings without prefix: \"ffffff\"\n *  css colors: \"black\"\n *\n * @example\n * PIXI.utils.string2hex(\"#ffffff\"); // returns 0xffffff\n * @memberof PIXI.utils\n * @function string2hex\n * @param {string} string - The string color (e.g., `\"#ffffff\"`)\n * @return {number} Number in hexadecimal.\n */\nexport function string2hex(string: string): number\n{\n    if (typeof string === 'string')\n    {\n        string = (cssColorNames as {[key: string]: string})[string.toLowerCase()] || string;\n\n        if (string[0] === '#')\n        {\n            string = string.slice(1);\n        }\n    }\n\n    return parseInt(string, 16);\n}\n\n/**\n * Converts a color as an [R, G, B] array of normalized floats to a hexadecimal number.\n *\n * @example\n * PIXI.utils.rgb2hex([1, 1, 1]); // returns 0xffffff\n * @memberof PIXI.utils\n * @function rgb2hex\n * @param {number[]} rgb - Array of numbers where all values are normalized floats from 0.0 to 1.0.\n * @return {number} Number in hexadecimal.\n */\nexport function rgb2hex(rgb: number[] | Float32Array): number\n{\n    return (((rgb[0] * 255) << 16) + ((rgb[1] * 255) << 8) + (rgb[2] * 255 | 0));\n}\n","import { BLEND_MODES } from '@pixi/constants';\n\n/**\n * Corrects PixiJS blend, takes premultiplied alpha into account\n *\n * @memberof PIXI.utils\n * @function mapPremultipliedBlendModes\n * @private\n * @return {Array<number[]>} Mapped modes.\n */\nfunction mapPremultipliedBlendModes(): number[][]\n{\n    const pm = [];\n    const npm = [];\n\n    for (let i = 0; i < 32; i++)\n    {\n        pm[i] = i;\n        npm[i] = i;\n    }\n\n    pm[BLEND_MODES.NORMAL_NPM] = BLEND_MODES.NORMAL;\n    pm[BLEND_MODES.ADD_NPM] = BLEND_MODES.ADD;\n    pm[BLEND_MODES.SCREEN_NPM] = BLEND_MODES.SCREEN;\n\n    npm[BLEND_MODES.NORMAL] = BLEND_MODES.NORMAL_NPM;\n    npm[BLEND_MODES.ADD] = BLEND_MODES.ADD_NPM;\n    npm[BLEND_MODES.SCREEN] = BLEND_MODES.SCREEN_NPM;\n\n    const array: number[][] = [];\n\n    array.push(npm);\n    array.push(pm);\n\n    return array;\n}\n\n/**\n * maps premultiply flag and blendMode to adjusted blendMode\n * @memberof PIXI.utils\n * @const premultiplyBlendMode\n * @type {Array<number[]>}\n */\nexport const premultiplyBlendMode = mapPremultipliedBlendModes();\n\n/**\n * changes blendMode according to texture format\n *\n * @memberof PIXI.utils\n * @function correctBlendMode\n * @param {number} blendMode - supposed blend mode\n * @param {boolean} premultiplied - whether source is premultiplied\n * @returns {number} true blend mode for this texture\n */\nexport function correctBlendMode(blendMode: number, premultiplied: boolean): number\n{\n    return premultiplyBlendMode[premultiplied ? 1 : 0][blendMode];\n}\n\n/**\n * combines rgb and alpha to out array\n *\n * @memberof PIXI.utils\n * @function premultiplyRgba\n * @param {Float32Array|number[]} rgb - input rgb\n * @param {number} alpha - alpha param\n * @param {Float32Array} [out] - output\n * @param {boolean} [premultiply=true] - do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\nexport function premultiplyRgba(\n    rgb: Float32Array|number[],\n    alpha: number,\n    out?: Float32Array,\n    premultiply?: boolean\n): Float32Array\n{\n    out = out || new Float32Array(4);\n    if (premultiply || premultiply === undefined)\n    {\n        out[0] = rgb[0] * alpha;\n        out[1] = rgb[1] * alpha;\n        out[2] = rgb[2] * alpha;\n    }\n    else\n    {\n        out[0] = rgb[0];\n        out[1] = rgb[1];\n        out[2] = rgb[2];\n    }\n    out[3] = alpha;\n\n    return out;\n}\n\n/**\n * premultiplies tint\n *\n * @memberof PIXI.utils\n * @function premultiplyTint\n * @param {number} tint - integer RGB\n * @param {number} alpha - floating point alpha (0.0-1.0)\n * @returns {number} tint multiplied by alpha\n */\nexport function premultiplyTint(tint: number, alpha: number): number\n{\n    if (alpha === 1.0)\n    {\n        return (alpha * 255 << 24) + tint;\n    }\n    if (alpha === 0.0)\n    {\n        return 0;\n    }\n    let R = ((tint >> 16) & 0xFF);\n    let G = ((tint >> 8) & 0xFF);\n    let B = (tint & 0xFF);\n\n    R = ((R * alpha) + 0.5) | 0;\n    G = ((G * alpha) + 0.5) | 0;\n    B = ((B * alpha) + 0.5) | 0;\n\n    return (alpha * 255 << 24) + (R << 16) + (G << 8) + B;\n}\n\n/**\n * converts integer tint and float alpha to vec4 form, premultiplies by default\n *\n * @memberof PIXI.utils\n * @function premultiplyTintToRgba\n * @param {number} tint - input tint\n * @param {number} alpha - alpha param\n * @param {Float32Array} [out] - output\n * @param {boolean} [premultiply=true] - do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\nexport function premultiplyTintToRgba(tint: number, alpha: number, out: Float32Array, premultiply?: boolean): Float32Array\n{\n    out = out || new Float32Array(4);\n    out[0] = ((tint >> 16) & 0xFF) / 255.0;\n    out[1] = ((tint >> 8) & 0xFF) / 255.0;\n    out[2] = (tint & 0xFF) / 255.0;\n    if (premultiply || premultiply === undefined)\n    {\n        out[0] *= alpha;\n        out[1] *= alpha;\n        out[2] *= alpha;\n    }\n    out[3] = alpha;\n\n    return out;\n}\n","/**\n * Generic Mask Stack data structure\n *\n * @memberof PIXI.utils\n * @function createIndicesForQuads\n * @param {number} size - Number of quads\n * @param {Uint16Array|Uint32Array} [outBuffer] - Buffer for output, length has to be `6 * size`\n * @return {Uint16Array|Uint32Array} - Resulting index buffer\n */\nexport function createIndicesForQuads(size: number, outBuffer: Uint16Array|Uint32Array = null): Uint16Array|Uint32Array\n{\n    // the total number of indices in our array, there are 6 points per quad.\n    const totalIndices = size * 6;\n\n    outBuffer = outBuffer || new Uint16Array(totalIndices);\n\n    if (outBuffer.length !== totalIndices)\n    {\n        throw new Error(`Out buffer length is incorrect, got ${outBuffer.length} and expected ${totalIndices}`);\n    }\n\n    // fill the indices with the quads to draw\n    for (let i = 0, j = 0; i < totalIndices; i += 6, j += 4)\n    {\n        outBuffer[i + 0] = j + 0;\n        outBuffer[i + 1] = j + 1;\n        outBuffer[i + 2] = j + 2;\n        outBuffer[i + 3] = j + 0;\n        outBuffer[i + 4] = j + 2;\n        outBuffer[i + 5] = j + 3;\n    }\n\n    return outBuffer;\n}\n","import type { ITypedArray } from '@pixi/core';\n\nexport function getBufferType(array: ITypedArray): 'Float32Array'|'Uint32Array'|'Int32Array'|'Uint16Array'|'Uint8Array'|null\n{\n    if (array.BYTES_PER_ELEMENT === 4)\n    {\n        if (array instanceof Float32Array)\n        {\n            return 'Float32Array';\n        }\n        else if (array instanceof Uint32Array)\n        {\n            return 'Uint32Array';\n        }\n\n        return 'Int32Array';\n    }\n    else if (array.BYTES_PER_ELEMENT === 2)\n    {\n        if (array instanceof Uint16Array)\n        {\n            return 'Uint16Array';\n        }\n    }\n    else if (array.BYTES_PER_ELEMENT === 1)\n    {\n        if (array instanceof Uint8Array)\n        {\n            return 'Uint8Array';\n        }\n    }\n\n    // TODO map out the rest of the array elements!\n    return null;\n}\n","import { getBufferType } from './getBufferType';\n\n/* eslint-disable object-shorthand */\nconst map = { Float32Array: Float32Array, Uint32Array: Uint32Array, Int32Array: Int32Array, Uint8Array: Uint8Array };\n\ntype PackedArray = Float32Array|Uint32Array|Int32Array|Uint8Array;\n\nexport function interleaveTypedArrays(arrays: PackedArray[], sizes: number[]): Float32Array\n{\n    let outSize = 0;\n    let stride = 0;\n    const views: {[key: string]: PackedArray} = {};\n\n    for (let i = 0; i < arrays.length; i++)\n    {\n        stride += sizes[i];\n        outSize += arrays[i].length;\n    }\n\n    const buffer = new ArrayBuffer(outSize * 4);\n\n    let out = null;\n    let littleOffset = 0;\n\n    for (let i = 0; i < arrays.length; i++)\n    {\n        const size = sizes[i];\n        const array = arrays[i];\n\n        /*\n        @todo This is unsafe casting but consistent with how the code worked previously. Should it stay this way\n              or should and `getBufferTypeUnsafe` function be exposed that throws an Error if unsupported type is passed?\n         */\n        const type = getBufferType(array) as keyof typeof map;\n\n        if (!views[type])\n        {\n            views[type] = new map[type](buffer);\n        }\n\n        out = views[type];\n\n        for (let j = 0; j < array.length; j++)\n        {\n            const indexStart = ((j / size | 0) * stride) + littleOffset;\n            const index = j % size;\n\n            out[indexStart + index] = array[j];\n        }\n\n        littleOffset += size;\n    }\n\n    return new Float32Array(buffer);\n}\n","// Taken from the bit-twiddle package\n\n/**\n * Rounds to next power of two.\n *\n * @function nextPow2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @return {number}\n */\nexport function nextPow2(v: number): number\n{\n    v += v === 0 ? 1 : 0;\n    --v;\n    v |= v >>> 1;\n    v |= v >>> 2;\n    v |= v >>> 4;\n    v |= v >>> 8;\n    v |= v >>> 16;\n\n    return v + 1;\n}\n\n/**\n * Checks if a number is a power of two.\n *\n * @function isPow2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @return {boolean} `true` if value is power of two\n */\nexport function isPow2(v: number): boolean\n{\n    return !(v & (v - 1)) && (!!v);\n}\n\n/**\n * Computes ceil of log base 2\n *\n * @function log2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @return {number} logarithm base 2\n */\nexport function log2(v: number): number\n{\n    let r = (v > 0xFFFF ? 1 : 0) << 4;\n\n    v >>>= r;\n\n    let shift = (v > 0xFF ? 1 : 0) << 3;\n\n    v >>>= shift; r |= shift;\n    shift = (v > 0xF ? 1 : 0) << 2;\n    v >>>= shift; r |= shift;\n    shift = (v > 0x3 ? 1 : 0) << 1;\n    v >>>= shift; r |= shift;\n\n    return r | (v >> 1);\n}\n","/**\n * Remove items from a javascript array without generating garbage\n *\n * @function removeItems\n * @memberof PIXI.utils\n * @param {Array<any>} arr - Array to remove elements from\n * @param {number} startIdx - starting index\n * @param {number} removeCount - how many to remove\n */\nexport function removeItems(arr: any[], startIdx: number, removeCount: number): void\n{\n    const length = arr.length;\n    let i;\n\n    if (startIdx >= length || removeCount === 0)\n    {\n        return;\n    }\n\n    removeCount = (startIdx + removeCount > length ? length - startIdx : removeCount);\n\n    const len = length - removeCount;\n\n    for (i = startIdx; i < len; ++i)\n    {\n        arr[i] = arr[i + removeCount];\n    }\n\n    arr.length = len;\n}\n","/**\n * Returns sign of number\n *\n * @memberof PIXI.utils\n * @function sign\n * @param {number} n - the number to check the sign of\n * @returns {number} 0 if `n` is 0, -1 if `n` is negative, 1 if `n` is positive\n */\nexport function sign(n: number): -1|0|1\n{\n    if (n === 0) return 0;\n\n    return n < 0 ? -1 : 1;\n}\n","let nextUid = 0;\n\n/**\n * Gets the next unique identifier\n *\n * @memberof PIXI.utils\n * @function uid\n * @return {number} The next unique identifier to use.\n */\nexport function uid(): number\n{\n    return ++nextUid;\n}\n","import type { Dict } from '../types';\n\n// A map of warning messages already fired\nconst warnings: Dict<boolean> = {};\n\n/**\n * Helper for warning developers about deprecated features & settings.\n * A stack track for warnings is given; useful for tracking-down where\n * deprecated methods/properties/classes are being used within the code.\n *\n * @memberof PIXI.utils\n * @function deprecation\n * @param {string} version - The version where the feature became deprecated\n * @param {string} message - Message should include what is deprecated, where, and the new solution\n * @param {number} [ignoreDepth=3] - The number of steps to ignore at the top of the error stack\n *        this is mostly to ignore internal deprecation calls.\n */\nexport function deprecation(version: string, message: string, ignoreDepth = 3): void\n{\n    // Ignore duplicat\n    if (warnings[message])\n    {\n        return;\n    }\n\n    /* eslint-disable no-console */\n    let stack = new Error().stack;\n\n    // Handle IE < 10 and Safari < 6\n    if (typeof stack === 'undefined')\n    {\n        console.warn('PixiJS Deprecation Warning: ', `${message}\\nDeprecated since v${version}`);\n    }\n    else\n    {\n        // chop off the stack trace which includes PixiJS internal calls\n        stack = stack.split('\\n').splice(ignoreDepth).join('\\n');\n\n        if (console.groupCollapsed)\n        {\n            console.groupCollapsed(\n                '%cPixiJS Deprecation Warning: %c%s',\n                'color:#614108;background:#fffbe6',\n                'font-weight:normal;color:#614108;background:#fffbe6',\n                `${message}\\nDeprecated since v${version}`\n            );\n            console.warn(stack);\n            console.groupEnd();\n        }\n        else\n        {\n            console.warn('PixiJS Deprecation Warning: ', `${message}\\nDeprecated since v${version}`);\n            console.warn(stack);\n        }\n    }\n    /* eslint-enable no-console */\n\n    warnings[message] = true;\n}\n","import type { Program, Texture, BaseTexture } from '@pixi/core';\n\n/**\n * @todo Describe property usage\n *\n * @static\n * @name ProgramCache\n * @memberof PIXI.utils\n * @type {Object}\n */\nexport const ProgramCache: {[key: string]: Program} = {};\n\n/**\n * @todo Describe property usage\n *\n * @static\n * @name TextureCache\n * @memberof PIXI.utils\n * @type {Object}\n */\nexport const TextureCache: {[key: string]: Texture} = Object.create(null);\n\n/**\n * @todo Describe property usage\n *\n * @static\n * @name BaseTextureCache\n * @memberof PIXI.utils\n * @type {Object}\n */\nexport const BaseTextureCache: {[key: string]: BaseTexture} = Object.create(null);\n\n/**\n * Destroys all texture in the cache\n *\n * @memberof PIXI.utils\n * @function destroyTextureCache\n */\nexport function destroyTextureCache(): void\n{\n    let key;\n\n    for (key in TextureCache)\n    {\n        TextureCache[key].destroy();\n    }\n    for (key in BaseTextureCache)\n    {\n        BaseTextureCache[key].destroy();\n    }\n}\n\n/**\n * Removes all textures from cache, but does not destroy them\n *\n * @memberof PIXI.utils\n * @function clearTextureCache\n */\nexport function clearTextureCache(): void\n{\n    let key;\n\n    for (key in TextureCache)\n    {\n        delete TextureCache[key];\n    }\n    for (key in BaseTextureCache)\n    {\n        delete BaseTextureCache[key];\n    }\n}\n","import { settings } from '@pixi/settings';\n\n/**\n * Creates a Canvas element of the given size to be used as a target for rendering to.\n *\n * @class\n * @memberof PIXI.utils\n */\nexport class CanvasRenderTarget\n{\n    /** The Canvas object that belongs to this CanvasRenderTarget. */\n    public canvas: HTMLCanvasElement;\n\n    /** A CanvasRenderingContext2D object representing a two-dimensional rendering context. */\n    public context: CanvasRenderingContext2D;\n\n    /**\n     * The resolution / device pixel ratio of the canvas\n     * @default 1\n     */\n    public resolution: number;\n\n    /**\n     * @param width - the width for the newly created canvas\n     * @param height - the height for the newly created canvas\n     * @param {number} [resolution=PIXI.settings.RESOLUTION] - The resolution / device pixel ratio of the canvas\n     */\n    constructor(width: number, height: number, resolution?: number)\n    {\n        this.canvas = document.createElement('canvas');\n\n        this.context = this.canvas.getContext('2d');\n\n        this.resolution = resolution || settings.RESOLUTION;\n\n        this.resize(width, height);\n    }\n\n    /**\n     * Clears the canvas that was created by the CanvasRenderTarget class.\n     *\n     * @private\n     */\n    clear(): void\n    {\n        this.context.setTransform(1, 0, 0, 1, 0, 0);\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    /**\n     * Resizes the canvas to the specified width and height.\n     *\n     * @param desiredWidth - the desired width of the canvas\n     * @param desiredHeight - the desired height of the canvas\n     */\n    resize(desiredWidth: number, desiredHeight: number): void\n    {\n        this.canvas.width = Math.round(desiredWidth * this.resolution);\n        this.canvas.height = Math.round(desiredHeight * this.resolution);\n    }\n\n    /** Destroys this canvas. */\n    destroy(): void\n    {\n        this.context = null;\n        this.canvas = null;\n    }\n\n    /**\n     * The width of the canvas buffer in pixels.\n     *\n     * @member {number}\n     */\n    get width(): number\n    {\n        return this.canvas.width;\n    }\n\n    set width(val: number)\n    {\n        this.canvas.width = Math.round(val);\n    }\n\n    /**\n     * The height of the canvas buffer in pixels.\n     *\n     * @member {number}\n     */\n    get height(): number\n    {\n        return this.canvas.height;\n    }\n\n    set height(val: number)\n    {\n        this.canvas.height = Math.round(val);\n    }\n}\n","interface Inset {\n    top?: number;\n    left?: number;\n    right?: number;\n    bottom?: number;\n}\n\n/**\n * Trim transparent borders from a canvas\n *\n * @memberof PIXI.utils\n * @function trimCanvas\n * @param {HTMLCanvasElement} canvas - the canvas to trim\n * @returns {object} Trim data\n */\nexport function trimCanvas(canvas: HTMLCanvasElement): {width: number; height: number; data?: ImageData}\n{\n    // https://gist.github.com/remy/784508\n\n    let width = canvas.width;\n    let height = canvas.height;\n\n    const context = canvas.getContext('2d');\n    const imageData = context.getImageData(0, 0, width, height);\n    const pixels = imageData.data;\n    const len = pixels.length;\n\n    const bound: Inset = {\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n    };\n    let data = null;\n    let i;\n    let x;\n    let y;\n\n    for (i = 0; i < len; i += 4)\n    {\n        if (pixels[i + 3] !== 0)\n        {\n            x = (i / 4) % width;\n            y = ~~((i / 4) / width);\n\n            if (bound.top === null)\n            {\n                bound.top = y;\n            }\n\n            if (bound.left === null)\n            {\n                bound.left = x;\n            }\n            else if (x < bound.left)\n            {\n                bound.left = x;\n            }\n\n            if (bound.right === null)\n            {\n                bound.right = x + 1;\n            }\n            else if (bound.right < x)\n            {\n                bound.right = x + 1;\n            }\n\n            if (bound.bottom === null)\n            {\n                bound.bottom = y;\n            }\n            else if (bound.bottom < y)\n            {\n                bound.bottom = y;\n            }\n        }\n    }\n\n    if (bound.top !== null)\n    {\n        width = bound.right - bound.left;\n        height = bound.bottom - bound.top + 1;\n        data = context.getImageData(bound.left, bound.top, width, height);\n    }\n\n    return {\n        height,\n        width,\n        data,\n    };\n}\n","/**\n * Regexp for data URI.\n * Based on: {@link https://github.com/ragingwind/data-uri-regex}\n *\n * @static\n * @constant {RegExp|string} DATA_URI\n * @memberof PIXI\n * @example data:image/png;base64\n */\nexport const DATA_URI = /^\\s*data:(?:([\\w-]+)\\/([\\w+.-]+))?(?:;charset=([\\w-]+))?(?:;(base64))?,(.*)/i;\n","import { DATA_URI } from '../const';\n\nexport interface DecomposedDataUri {\n    mediaType: string;\n    subType: string;\n    charset: string;\n    encoding: string;\n    data: string;\n}\n\n/**\n * @memberof PIXI.utils\n * @interface DecomposedDataUri\n */\n\n/**\n * type, eg. `image`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} mediaType\n */\n\n/**\n * Sub type, eg. `png`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} subType\n */\n\n/**\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} charset\n */\n\n/**\n * Data encoding, eg. `base64`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} encoding\n */\n\n/**\n * The actual data\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} data\n */\n\n/**\n * Split a data URI into components. Returns undefined if\n * parameter `dataUri` is not a valid data URI.\n *\n * @memberof PIXI.utils\n * @function decomposeDataUri\n * @param {string} dataUri - the data URI to check\n * @return {PIXI.utils.DecomposedDataUri|undefined} The decomposed data uri or undefined\n */\nexport function decomposeDataUri(dataUri: string): DecomposedDataUri\n{\n    const dataUriMatch = DATA_URI.exec(dataUri);\n\n    if (dataUriMatch)\n    {\n        return {\n            mediaType: dataUriMatch[1] ? dataUriMatch[1].toLowerCase() : undefined,\n            subType: dataUriMatch[2] ? dataUriMatch[2].toLowerCase() : undefined,\n            charset: dataUriMatch[3] ? dataUriMatch[3].toLowerCase() : undefined,\n            encoding: dataUriMatch[4] ? dataUriMatch[4].toLowerCase() : undefined,\n            data: dataUriMatch[5],\n        };\n    }\n\n    return undefined;\n}\n","import { url as _url } from '../url';\n\nlet tempAnchor: HTMLAnchorElement|undefined;\n\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n * Nipped from the resource loader!\n *\n * @ignore\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @return {string} The crossOrigin value to use (or empty string for none).\n */\nexport function determineCrossOrigin(url: string, loc: Location = globalThis.location): string\n{\n    // data: and javascript: urls are considered same-origin\n    if (url.indexOf('data:') === 0)\n    {\n        return '';\n    }\n\n    // default is window.location\n    loc = loc || globalThis.location;\n\n    if (!tempAnchor)\n    {\n        tempAnchor = document.createElement('a');\n    }\n\n    // let the browser determine the full href for the url of this resource and then\n    // parse with the node url lib, we can't use the properties of the anchor element\n    // because they don't work in IE9 :(\n    tempAnchor.href = url;\n    const parsedUrl = _url.parse(tempAnchor.href);\n\n    const samePort = (!parsedUrl.port && loc.port === '') || (parsedUrl.port === loc.port);\n\n    // if cross origin\n    if (parsedUrl.hostname !== loc.hostname || !samePort || parsedUrl.protocol !== loc.protocol)\n    {\n        return 'anonymous';\n    }\n\n    return '';\n}\n","import { settings } from '../settings';\n\n/**\n * get the resolution / device pixel ratio of an asset by looking for the prefix\n * used by spritesheets and image urls\n *\n * @memberof PIXI.utils\n * @function getResolutionOfUrl\n * @param {string} url - the image path\n * @param {number} [defaultValue=1] - the defaultValue if no filename prefix is set.\n * @return {number} resolution / device pixel ratio of an asset\n */\nexport function getResolutionOfUrl(url: string, defaultValue?: number): number\n{\n    const resolution = settings.RETINA_PREFIX.exec(url);\n\n    if (resolution)\n    {\n        return parseFloat(resolution[1]);\n    }\n\n    return defaultValue !== undefined ? defaultValue : 1;\n}\n"]},"metadata":{},"sourceType":"module"}