{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport var createNativeConstantSourceNodeFactory = function createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) {\n  return function (nativeContext, options) {\n    // Bug #62: Safari does not support ConstantSourceNodes.\n    if (nativeContext.createConstantSource === undefined) {\n      return createNativeConstantSourceNodeFaker(nativeContext, options);\n    }\n\n    var nativeConstantSourceNode = nativeContext.createConstantSource();\n    assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset'); // Bug #44: Safari does not throw a RangeError yet.\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, function () {\n      return testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext);\n    })) {\n      wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n    } // Bug #44: Only Firefox does not throw a RangeError yet.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, function () {\n      return testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext);\n    })) {\n      wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n    } // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n\n\n    addSilentConnection(nativeContext, nativeConstantSourceNode);\n    return nativeConstantSourceNode;\n  };\n};","map":{"version":3,"mappings":"AAAA,SAASA,oCAAT,QAAqD,uDAArD;AACA,SAASC,4BAAT,QAA6C,6CAA7C;AACA,SAASC,yDAAT,QAA0E,8EAA1E;AACA,SAASC,wDAAT,QAAyE,6EAAzE;AAGA,OAAO,IAAMC,qCAAqC,GAA4C,SAAjFA,qCAAiF,CAC1FC,mBAD0F,EAE1FC,eAF0F,EAG1FC,mCAH0F,EAI1FC,gEAJ0F,EAK1FC,+DAL0F,EAM1F;AACA,SAAO,UAACC,aAAD,EAAgBC,OAAhB,EAA2B;AAC9B;AACA,QAAID,aAAa,CAACE,oBAAd,KAAuCC,SAA3C,EAAsD;AAClD,aAAON,mCAAmC,CAACG,aAAD,EAAgBC,OAAhB,CAA1C;AACH;;AAED,QAAMG,wBAAwB,GAAGJ,aAAa,CAACE,oBAAd,EAAjC;AAEAX,gCAA4B,CAACa,wBAAD,EAA2BH,OAA3B,CAA5B;AAEAX,wCAAoC,CAACc,wBAAD,EAA2BH,OAA3B,EAAoC,QAApC,CAApC,CAV8B,CAY9B;;AACA,QACI,CAACL,eAAe,CAACE,gEAAD,EAAmE;AAAA,aAC/EA,gEAAgE,CAACE,aAAD,CADe;AAAA,KAAnE,CADpB,EAIE;AACER,+DAAyD,CAACY,wBAAD,CAAzD;AACH,KAnB6B,CAqB9B;;;AACA,QACI,CAACR,eAAe,CAACG,+DAAD,EAAkE;AAAA,aAC9EA,+DAA+D,CAACC,aAAD,CADe;AAAA,KAAlE,CADpB,EAIE;AACEP,8DAAwD,CAACW,wBAAD,CAAxD;AACH,KA5B6B,CA8B9B;;;AACAT,uBAAmB,CAACK,aAAD,EAAgBI,wBAAhB,CAAnB;AAEA,WAAOA,wBAAP;AACH,GAlCD;AAmCH,CA1CM","names":["assignNativeAudioNodeAudioParamValue","assignNativeAudioNodeOptions","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","createNativeConstantSourceNodeFactory","addSilentConnection","cacheTestResult","createNativeConstantSourceNodeFaker","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","nativeContext","options","createConstantSource","undefined","nativeConstantSourceNode"],"sourceRoot":"","sources":["../../../src/factories/native-constant-source-node-factory.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}