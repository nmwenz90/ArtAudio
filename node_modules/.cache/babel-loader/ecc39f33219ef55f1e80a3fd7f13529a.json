{"ast":null,"code":"import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport var createNativeConvolverNodeFactory = function createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors) {\n  return function (nativeContext, options) {\n    var nativeConvolverNode = nativeContext.createConvolver();\n    assignNativeAudioNodeOptions(nativeConvolverNode, options); // The normalize property needs to be set before setting the buffer.\n\n    if (options.disableNormalization === nativeConvolverNode.normalize) {\n      nativeConvolverNode.normalize = !options.disableNormalization;\n    }\n\n    assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer'); // Bug #113: Safari does allow to set the channelCount to a value larger than 2.\n\n    if (options.channelCount > 2) {\n      throw createNotSupportedError();\n    }\n\n    overwriteAccessors(nativeConvolverNode, 'channelCount', function (get) {\n      return function () {\n        return get.call(nativeConvolverNode);\n      };\n    }, function (set) {\n      return function (value) {\n        if (value > 2) {\n          throw createNotSupportedError();\n        }\n\n        return set.call(nativeConvolverNode, value);\n      };\n    }); // Bug #114: Safari allows to set the channelCountMode to 'max'.\n\n    if (options.channelCountMode === 'max') {\n      throw createNotSupportedError();\n    }\n\n    overwriteAccessors(nativeConvolverNode, 'channelCountMode', function (get) {\n      return function () {\n        return get.call(nativeConvolverNode);\n      };\n    }, function (set) {\n      return function (value) {\n        if (value === 'max') {\n          throw createNotSupportedError();\n        }\n\n        return set.call(nativeConvolverNode, value);\n      };\n    });\n    return nativeConvolverNode;\n  };\n};","map":{"version":3,"mappings":"AAAA,SAASA,2BAAT,QAA4C,4CAA5C;AACA,SAASC,4BAAT,QAA6C,6CAA7C;AAGA,OAAO,IAAMC,gCAAgC,GAAuC,SAAvEA,gCAAuE,CAACC,uBAAD,EAA0BC,kBAA1B,EAAgD;AAChI,SAAO,UAACC,aAAD,EAAgBC,OAAhB,EAA2B;AAC9B,QAAMC,mBAAmB,GAAGF,aAAa,CAACG,eAAd,EAA5B;AAEAP,gCAA4B,CAACM,mBAAD,EAAsBD,OAAtB,CAA5B,CAH8B,CAK9B;;AACA,QAAIA,OAAO,CAACG,oBAAR,KAAiCF,mBAAmB,CAACG,SAAzD,EAAoE;AAChEH,yBAAmB,CAACG,SAApB,GAAgC,CAACJ,OAAO,CAACG,oBAAzC;AACH;;AAEDT,+BAA2B,CAACO,mBAAD,EAAsBD,OAAtB,EAA+B,QAA/B,CAA3B,CAV8B,CAY9B;;AACA,QAAIA,OAAO,CAACK,YAAR,GAAuB,CAA3B,EAA8B;AAC1B,YAAMR,uBAAuB,EAA7B;AACH;;AAEDC,sBAAkB,CACdG,mBADc,EAEd,cAFc,EAGd,UAACK,GAAD;AAAA,aAAS;AAAA,eAAMA,GAAG,CAACC,IAAJ,CAASN,mBAAT,CAAN;AAAA,OAAT;AAAA,KAHc,EAId,UAACO,GAAD;AAAA,aAAS,UAACC,KAAD,EAAU;AACf,YAAIA,KAAK,GAAG,CAAZ,EAAe;AACX,gBAAMZ,uBAAuB,EAA7B;AACH;;AAED,eAAOW,GAAG,CAACD,IAAJ,CAASN,mBAAT,EAA8BQ,KAA9B,CAAP;AACH,OAND;AAAA,KAJc,CAAlB,CAjB8B,CA8B9B;;AACA,QAAIT,OAAO,CAACU,gBAAR,KAA6B,KAAjC,EAAwC;AACpC,YAAMb,uBAAuB,EAA7B;AACH;;AAEDC,sBAAkB,CACdG,mBADc,EAEd,kBAFc,EAGd,UAACK,GAAD;AAAA,aAAS;AAAA,eAAMA,GAAG,CAACC,IAAJ,CAASN,mBAAT,CAAN;AAAA,OAAT;AAAA,KAHc,EAId,UAACO,GAAD;AAAA,aAAS,UAACC,KAAD,EAAU;AACf,YAAIA,KAAK,KAAK,KAAd,EAAqB;AACjB,gBAAMZ,uBAAuB,EAA7B;AACH;;AAED,eAAOW,GAAG,CAACD,IAAJ,CAASN,mBAAT,EAA8BQ,KAA9B,CAAP;AACH,OAND;AAAA,KAJc,CAAlB;AAaA,WAAOR,mBAAP;AACH,GAjDD;AAkDH,CAnDM","names":["assignNativeAudioNodeOption","assignNativeAudioNodeOptions","createNativeConvolverNodeFactory","createNotSupportedError","overwriteAccessors","nativeContext","options","nativeConvolverNode","createConvolver","disableNormalization","normalize","channelCount","get","call","set","value","channelCountMode"],"sourceRoot":"","sources":["../../../src/factories/native-convolver-node-factory.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}