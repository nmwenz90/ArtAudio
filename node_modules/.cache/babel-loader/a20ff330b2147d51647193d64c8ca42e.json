{"ast":null,"code":"/**\n * Assert that the statement is true, otherwise invoke the error.\n * @param statement\n * @param error The message which is passed into an Error\n */\nexport function assert(statement, error) {\n  if (!statement) {\n    throw new Error(error);\n  }\n}\n/**\n * Make sure that the given value is within the range\n */\n\nexport function assertRange(value, gte) {\n  var lte = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Infinity;\n\n  if (!(gte <= value && value <= lte)) {\n    throw new RangeError(\"Value must be within [\".concat(gte, \", \").concat(lte, \"], got: \").concat(value));\n  }\n}\n/**\n * Make sure that the given value is within the range\n */\n\nexport function assertContextRunning(context) {\n  // add a warning if the context is not started\n  if (!context.isOffline && context.state !== \"running\") {\n    warn(\"The AudioContext is \\\"suspended\\\". Invoke Tone.start() from a user action to start the audio.\");\n  }\n}\n/**\n * The default logger is the console\n */\n\nvar defaultLogger = console;\n/**\n * Set the logging interface\n */\n\nexport function setLogger(logger) {\n  defaultLogger = logger;\n}\n/**\n * Log anything\n */\n\nexport function log() {\n  var _defaultLogger;\n\n  (_defaultLogger = defaultLogger).log.apply(_defaultLogger, arguments);\n}\n/**\n * Warn anything\n */\n\nexport function warn() {\n  var _defaultLogger2;\n\n  (_defaultLogger2 = defaultLogger).warn.apply(_defaultLogger2, arguments);\n}","map":{"version":3,"mappings":"AAAA;;;;;AAKA,OAAM,SAAUA,MAAV,CAAiBC,SAAjB,EAAqCC,KAArC,EAAkD;AACvD,MAAI,CAACD,SAAL,EAAgB;AACf,UAAM,IAAIE,KAAJ,CAAUD,KAAV,CAAN;AACA;AACD;AAED;;;;AAGA,OAAM,SAAUE,WAAV,CAAsBC,KAAtB,EAAqCC,GAArC,EAAgE;AAAA,MAAdC,GAAc,uEAARC,QAAQ;;AACrE,MAAI,EAAEF,GAAG,IAAID,KAAP,IAAgBA,KAAK,IAAIE,GAA3B,CAAJ,EAAqC;AACpC,UAAM,IAAIE,UAAJ,iCAAwCH,GAAxC,eAAgDC,GAAhD,qBAA8DF,KAA9D,EAAN;AACA;AACD;AAED;;;;AAGA,OAAM,SAAUK,oBAAV,CAA+BC,OAA/B,EAAoF;AACzF;AACA,MAAI,CAACA,OAAO,CAACC,SAAT,IAAsBD,OAAO,CAACE,KAAR,KAAkB,SAA5C,EAAuD;AACtDC,QAAI,CAAC,+FAAD,CAAJ;AACA;AACD;AAUD;;;;AAGA,IAAIC,aAAa,GAAWC,OAA5B;AAEA;;;;AAGA,OAAM,SAAUC,SAAV,CAAoBC,MAApB,EAAkC;AACvCH,eAAa,GAAGG,MAAhB;AACA;AAED;;;;AAGA,OAAM,SAAUC,GAAV,GAA4B;AAAA;;AACjC,iCAAa,EAACA,GAAd;AACA;AAED;;;;AAGA,OAAM,SAAUL,IAAV,GAA6B;AAAA;;AAClC,kCAAa,EAACA,IAAd;AACA","names":["assert","statement","error","Error","assertRange","value","gte","lte","Infinity","RangeError","assertContextRunning","context","isOffline","state","warn","defaultLogger","console","setLogger","logger","log"],"sourceRoot":"","sources":["../../../../Tone/core/util/Debug.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}