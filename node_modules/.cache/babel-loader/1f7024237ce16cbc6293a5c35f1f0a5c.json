{"ast":null,"code":"import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive'; // Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\n\nexport var setInternalStateToPassiveWhenNecessary = function setInternalStateToPassiveWhenNecessary(audioNode, activeInputs) {\n  if (!isAudioWorkletNode(audioNode) && activeInputs.every(function (connections) {\n    return connections.size === 0;\n  })) {\n    setInternalStateToPassive(audioNode);\n  }\n};","map":{"version":3,"mappings":"AAAA,SAASA,kBAAT,QAAmC,8BAAnC;AAGA,SAASC,yBAAT,QAA0C,iCAA1C,C,CAEA;;AACA,OAAO,IAAMC,sCAAsC,GAAG,SAAzCA,sCAAyC,CAClDC,SADkD,EAElDC,YAFkD,EAGlD;AACA,MAAI,CAACJ,kBAAkB,CAACG,SAAD,CAAnB,IAAkCC,YAAY,CAACC,KAAb,CAAmB,UAACC,WAAD;AAAA,WAAiBA,WAAW,CAACC,IAAZ,KAAqB,CAAtC;AAAA,GAAnB,CAAtC,EAAmG;AAC/FN,6BAAyB,CAACE,SAAD,CAAzB;AACH;AACJ,CAPM","names":["isAudioWorkletNode","setInternalStateToPassive","setInternalStateToPassiveWhenNecessary","audioNode","activeInputs","every","connections","size"],"sourceRoot":"","sources":["../../../src/helpers/set-internal-state-to-passive-when-necessary.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}