{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Subtract } from \"./Subtract\";\nimport { Signal } from \"./Signal\";\nimport { GreaterThanZero } from \"./GreaterThanZero\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Output 1 if the signal is greater than the value, otherwise outputs 0.\n * can compare two signals or a signal and a number.\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst gt = new Tone.GreaterThan(2).toDestination();\n * \tconst sig = new Tone.Signal(4).connect(gt);\n * }, 0.1, 1);\n * @category Signal\n */\n\nexport var GreaterThan = /*#__PURE__*/function (_Signal) {\n  _inherits(GreaterThan, _Signal);\n\n  var _super = _createSuper(GreaterThan);\n\n  function GreaterThan() {\n    var _this;\n\n    _classCallCheck(this, GreaterThan);\n\n    _this = _super.call(this, Object.assign(optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"])));\n    _this.name = \"GreaterThan\";\n    _this.override = false;\n    var options = optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"]);\n    _this._subtract = _this.input = new Subtract({\n      context: _this.context,\n      value: options.value\n    });\n    _this._gtz = _this.output = new GreaterThanZero({\n      context: _this.context\n    });\n    _this.comparator = _this._param = _this._subtract.subtrahend;\n    readOnly(_assertThisInitialized(_this), \"comparator\"); // connect\n\n    _this._subtract.connect(_this._gtz);\n\n    return _this;\n  }\n\n  _createClass(GreaterThan, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(GreaterThan.prototype), \"dispose\", this).call(this);\n\n      this._gtz.dispose();\n\n      this._subtract.dispose();\n\n      this.comparator.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(Signal.getDefaults(), {\n        value: 0\n      });\n    }\n  }]);\n\n  return GreaterThan;\n}(Signal);","map":{"version":3,"mappings":";;;;;;;AACA,SAASA,oBAAT,QAAqC,uBAArC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,MAAT,QAAsC,UAAtC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAKA;;;;;;;;;;;;AAWA,WAAaC,WAAb;AAAA;;AAAA;;AAoCC;AAAA;;AAAA;;AACC,8BAAMC,MAAM,CAACC,MAAP,CAAcP,oBAAoB,CAACK,WAAW,CAACG,WAAZ,EAAD,EAA4BC,SAA5B,EAAuC,CAAC,OAAD,CAAvC,CAAlC,CAAN;AAnCQ,iBAAe,aAAf;AAEA,qBAAoB,KAApB;AAkCR,QAAMC,OAAO,GAAGV,oBAAoB,CAACK,WAAW,CAACG,WAAZ,EAAD,EAA4BC,SAA5B,EAAuC,CAAC,OAAD,CAAvC,CAApC;AAEA,UAAKE,SAAL,GAAiB,MAAKC,KAAL,GAAa,IAAIX,QAAJ,CAAa;AAC1CY,aAAO,EAAE,MAAKA,OAD4B;AAE1CC,WAAK,EAAEJ,OAAO,CAACI;AAF2B,KAAb,CAA9B;AAIA,UAAKC,IAAL,GAAY,MAAKC,MAAL,GAAc,IAAIb,eAAJ,CAAoB;AAAEU,aAAO,EAAE,MAAKA;AAAhB,KAApB,CAA1B;AAEA,UAAKI,UAAL,GAAkB,MAAKC,MAAL,GAAc,MAAKP,SAAL,CAAeQ,UAA/C;AACAf,YAAQ,gCAAO,YAAP,CAAR,CAXD,CAaC;;AACA,UAAKO,SAAL,CAAeS,OAAf,CAAuB,MAAKL,IAA5B;;AAdD;AAeC;;AAnDF;AAAA;AAAA,WA2DC,mBAAO;AACN;;AACA,WAAKA,IAAL,CAAUM,OAAV;;AACA,WAAKV,SAAL,CAAeU,OAAf;;AACA,WAAKJ,UAAL,CAAgBI,OAAhB;AACA,aAAO,IAAP;AACA;AAjEF;AAAA;AAAA,WAqDC,uBAAkB;AACjB,aAAOf,MAAM,CAACC,MAAP,CAAcL,MAAM,CAACM,WAAP,EAAd,EAAoC;AAC1CM,aAAK,EAAE;AADmC,OAApC,CAAP;AAGA;AAzDF;;AAAA;AAAA,EAAiCZ,MAAjC","names":["optionsFromArguments","Subtract","Signal","GreaterThanZero","readOnly","GreaterThan","Object","assign","getDefaults","arguments","options","_subtract","input","context","value","_gtz","output","comparator","_param","subtrahend","connect","dispose"],"sourceRoot":"","sources":["../../../Tone/signal/GreaterThan.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}