{"ast":null,"code":"import _objectSpread from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nvar DEFAULT_OPTIONS = {\n  buffer: null,\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  // Bug #149: Safari does not yet support the detune AudioParam.\n  loop: false,\n  loopEnd: 0,\n  loopStart: 0,\n  playbackRate: 1\n};\nexport var createAudioBufferSourceNodeConstructor = function createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(AudioBufferSourceNode, _audioNodeConstructor);\n\n    var _super = _createSuper(AudioBufferSourceNode);\n\n    function AudioBufferSourceNode(context, options) {\n      var _this;\n\n      _classCallCheck(this, AudioBufferSourceNode);\n\n      var nativeContext = getNativeContext(context);\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n      var isOffline = isNativeOfflineAudioContext(nativeContext);\n      var audioBufferSourceNodeRenderer = isOffline ? createAudioBufferSourceNodeRenderer() : null;\n      _this = _super.call(this, context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n      _this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n      _this._isBufferNullified = false;\n      _this._isBufferSet = mergedOptions.buffer !== null;\n      _this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n      _this._onended = null; // Bug #73: Safari does not export the correct values for maxValue and minValue.\n\n      _this._playbackRate = createAudioParam(_assertThisInitialized(_this), isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      return _this;\n    }\n\n    _createClass(AudioBufferSourceNode, [{\n      key: \"buffer\",\n      get: function get() {\n        if (this._isBufferNullified) {\n          return null;\n        }\n\n        return this._nativeAudioBufferSourceNode.buffer;\n      },\n      set: function set(value) {\n        this._nativeAudioBufferSourceNode.buffer = value; // Bug #72: Only Chrome, Edge & Opera do not allow to reassign the buffer yet.\n\n        if (value !== null) {\n          if (this._isBufferSet) {\n            throw createInvalidStateError();\n          }\n\n          this._isBufferSet = true;\n        }\n      }\n    }, {\n      key: \"loop\",\n      get: function get() {\n        return this._nativeAudioBufferSourceNode.loop;\n      },\n      set: function set(value) {\n        this._nativeAudioBufferSourceNode.loop = value;\n      }\n    }, {\n      key: \"loopEnd\",\n      get: function get() {\n        return this._nativeAudioBufferSourceNode.loopEnd;\n      },\n      set: function set(value) {\n        this._nativeAudioBufferSourceNode.loopEnd = value;\n      }\n    }, {\n      key: \"loopStart\",\n      get: function get() {\n        return this._nativeAudioBufferSourceNode.loopStart;\n      },\n      set: function set(value) {\n        this._nativeAudioBufferSourceNode.loopStart = value;\n      }\n    }, {\n      key: \"onended\",\n      get: function get() {\n        return this._onended;\n      },\n      set: function set(value) {\n        var wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n        this._nativeAudioBufferSourceNode.onended = wrappedListener;\n        var nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n        this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n      }\n    }, {\n      key: \"playbackRate\",\n      get: function get() {\n        return this._playbackRate;\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var duration = arguments.length > 2 ? arguments[2] : undefined;\n\n        this._nativeAudioBufferSourceNode.start(when, offset, duration);\n\n        if (this._audioBufferSourceNodeRenderer !== null) {\n          this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n        }\n\n        if (this.context.state !== 'closed') {\n          setInternalStateToActive(this);\n\n          var resetInternalStateToPassive = function resetInternalStateToPassive() {\n            _this2._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n\n            if (isActiveAudioNode(_this2)) {\n              setInternalStateToPassive(_this2);\n            }\n          };\n\n          this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n        this._nativeAudioBufferSourceNode.stop(when);\n\n        if (this._audioBufferSourceNodeRenderer !== null) {\n          this._audioBufferSourceNodeRenderer.stop = when;\n        }\n      }\n    }]);\n\n    return AudioBufferSourceNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"mappings":"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","names":["MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","isActiveAudioNode","setInternalStateToActive","setInternalStateToPassive","DEFAULT_OPTIONS","buffer","channelCount","channelCountMode","channelInterpretation","loop","loopEnd","loopStart","playbackRate","createAudioBufferSourceNodeConstructor","audioNodeConstructor","createAudioBufferSourceNodeRenderer","createAudioParam","createInvalidStateError","createNativeAudioBufferSourceNode","getNativeContext","isNativeOfflineAudioContext","wrapEventListener","context","options","nativeContext","mergedOptions","nativeAudioBufferSourceNode","isOffline","audioBufferSourceNodeRenderer","_audioBufferSourceNodeRenderer","_isBufferNullified","_isBufferSet","_nativeAudioBufferSourceNode","_onended","_playbackRate","value","wrappedListener","onended","nativeOnEnded","when","offset","duration","start","undefined","state","resetInternalStateToPassive","removeEventListener","addEventListener","stop"],"sourceRoot":"","sources":["../../../src/factories/audio-buffer-source-node-constructor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}