{"ast":null,"code":"export var wrapAudioBufferSourceNodeStartMethodOffsetClamping = function wrapAudioBufferSourceNodeStartMethodOffsetClamping(nativeAudioBufferSourceNode) {\n  nativeAudioBufferSourceNode.start = function (start) {\n    return function () {\n      var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var duration = arguments.length > 2 ? arguments[2] : undefined;\n      var buffer = nativeAudioBufferSourceNode.buffer; // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n\n      var clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset); // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n\n      if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n        start.call(nativeAudioBufferSourceNode, when, 0, 0);\n      } else {\n        start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n      }\n    };\n  }(nativeAudioBufferSourceNode.start);\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,kDAAkD,GAAG,SAArDA,kDAAqD,CAACC,2BAAD,EAAoE;AAClIA,6BAA2B,CAACC,KAA5B,GAAqC,UAACA,KAAD,EAAU;AAC3C,WAAO,YAA4C;AAAA,UAA3CC,IAA2C,uEAApC,CAAoC;AAAA,UAAjCC,MAAiC,uEAAxB,CAAwB;AAAA,UAArBC,QAAqB;AAC/C,UAAMC,MAAM,GAAGL,2BAA2B,CAACK,MAA3C,CAD+C,CAE/C;;AACA,UAAMC,aAAa,GAAGD,MAAM,KAAK,IAAX,GAAkBF,MAAlB,GAA2BI,IAAI,CAACC,GAAL,CAASH,MAAM,CAACD,QAAhB,EAA0BD,MAA1B,CAAjD,CAH+C,CAK/C;;AACA,UAAIE,MAAM,KAAK,IAAX,IAAmBC,aAAa,GAAGD,MAAM,CAACD,QAAP,GAAkB,MAAMJ,2BAA2B,CAACS,OAA5B,CAAoCC,UAAnG,EAA+G;AAC3GT,aAAK,CAACU,IAAN,CAAWX,2BAAX,EAAwCE,IAAxC,EAA8C,CAA9C,EAAiD,CAAjD;AACH,OAFD,MAEO;AACHD,aAAK,CAACU,IAAN,CAAWX,2BAAX,EAAwCE,IAAxC,EAA8CI,aAA9C,EAA6DF,QAA7D;AACH;AACJ,KAXD;AAYH,GAbmC,CAajCJ,2BAA2B,CAACC,KAbK,CAApC;AAcH,CAfM","names":["wrapAudioBufferSourceNodeStartMethodOffsetClamping","nativeAudioBufferSourceNode","start","when","offset","duration","buffer","clampedOffset","Math","min","context","sampleRate","call"],"sourceRoot":"","sources":["../../../src/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}