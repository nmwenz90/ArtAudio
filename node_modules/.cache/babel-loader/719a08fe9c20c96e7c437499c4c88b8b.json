{"ast":null,"code":"import _toConsumableArray from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"coneInnerAngle\", \"coneOuterAngle\", \"coneOuterGain\", \"distanceModel\", \"maxDistance\", \"orientationX\", \"orientationY\", \"orientationZ\", \"panningModel\", \"positionX\", \"positionY\", \"positionZ\", \"refDistance\", \"rolloffFactor\"];\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport var createNativePannerNodeFakerFactory = function createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections) {\n  return function (nativeContext, _ref) {\n    var coneInnerAngle = _ref.coneInnerAngle,\n        coneOuterAngle = _ref.coneOuterAngle,\n        coneOuterGain = _ref.coneOuterGain,\n        distanceModel = _ref.distanceModel,\n        maxDistance = _ref.maxDistance,\n        orientationX = _ref.orientationX,\n        orientationY = _ref.orientationY,\n        orientationZ = _ref.orientationZ,\n        panningModel = _ref.panningModel,\n        positionX = _ref.positionX,\n        positionY = _ref.positionY,\n        positionZ = _ref.positionZ,\n        refDistance = _ref.refDistance,\n        rolloffFactor = _ref.rolloffFactor,\n        audioNodeOptions = _objectWithoutProperties(_ref, _excluded);\n\n    var pannerNode = nativeContext.createPanner(); // Bug #125: Safari does not throw an error yet.\n\n    if (audioNodeOptions.channelCount > 2) {\n      throw createNotSupportedError();\n    } // Bug #126: Safari does not throw an error yet.\n\n\n    if (audioNodeOptions.channelCountMode === 'max') {\n      throw createNotSupportedError();\n    }\n\n    assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n    var SINGLE_CHANNEL_OPTIONS = {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete'\n    };\n    var channelMergerNode = createNativeChannelMergerNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {\n      channelInterpretation: 'speakers',\n      numberOfInputs: 6\n    }));\n    var inputGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, audioNodeOptions), {}, {\n      gain: 1\n    }));\n    var orientationXGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {\n      gain: 1\n    }));\n    var orientationYGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {\n      gain: 0\n    }));\n    var orientationZGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {\n      gain: 0\n    }));\n    var positionXGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {\n      gain: 0\n    }));\n    var positionYGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {\n      gain: 0\n    }));\n    var positionZGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {\n      gain: 0\n    }));\n    var scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n    var waveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {\n      curve: new Float32Array([1, 1]),\n      oversample: 'none'\n    }));\n    var lastOrientation = [orientationX, orientationY, orientationZ];\n    var lastPosition = [positionX, positionY, positionZ];\n    var buffer = new Float32Array(1); // tslint:disable-next-line:deprecation\n\n    scriptProcessorNode.onaudioprocess = function (_ref2) {\n      var inputBuffer = _ref2.inputBuffer;\n      var orientation = [getFirstSample(inputBuffer, buffer, 0), getFirstSample(inputBuffer, buffer, 1), getFirstSample(inputBuffer, buffer, 2)];\n\n      if (orientation.some(function (value, index) {\n        return value !== lastOrientation[index];\n      })) {\n        pannerNode.setOrientation.apply(pannerNode, orientation); // tslint:disable-line:deprecation\n\n        lastOrientation = orientation;\n      }\n\n      var positon = [getFirstSample(inputBuffer, buffer, 3), getFirstSample(inputBuffer, buffer, 4), getFirstSample(inputBuffer, buffer, 5)];\n\n      if (positon.some(function (value, index) {\n        return value !== lastPosition[index];\n      })) {\n        pannerNode.setPosition.apply(pannerNode, positon); // tslint:disable-line:deprecation\n\n        lastPosition = positon;\n      }\n    };\n\n    Object.defineProperty(orientationYGainNode.gain, 'defaultValue', {\n      get: function get() {\n        return 0;\n      }\n    });\n    Object.defineProperty(orientationZGainNode.gain, 'defaultValue', {\n      get: function get() {\n        return 0;\n      }\n    });\n    Object.defineProperty(positionXGainNode.gain, 'defaultValue', {\n      get: function get() {\n        return 0;\n      }\n    });\n    Object.defineProperty(positionYGainNode.gain, 'defaultValue', {\n      get: function get() {\n        return 0;\n      }\n    });\n    Object.defineProperty(positionZGainNode.gain, 'defaultValue', {\n      get: function get() {\n        return 0;\n      }\n    });\n    var nativePannerNodeFaker = {\n      get bufferSize() {\n        return undefined;\n      },\n\n      get channelCount() {\n        return pannerNode.channelCount;\n      },\n\n      set channelCount(value) {\n        // Bug #125: Safari does not throw an error yet.\n        if (value > 2) {\n          throw createNotSupportedError();\n        }\n\n        inputGainNode.channelCount = value;\n        pannerNode.channelCount = value;\n      },\n\n      get channelCountMode() {\n        return pannerNode.channelCountMode;\n      },\n\n      set channelCountMode(value) {\n        // Bug #126: Safari does not throw an error yet.\n        if (value === 'max') {\n          throw createNotSupportedError();\n        }\n\n        inputGainNode.channelCountMode = value;\n        pannerNode.channelCountMode = value;\n      },\n\n      get channelInterpretation() {\n        return pannerNode.channelInterpretation;\n      },\n\n      set channelInterpretation(value) {\n        inputGainNode.channelInterpretation = value;\n        pannerNode.channelInterpretation = value;\n      },\n\n      get coneInnerAngle() {\n        return pannerNode.coneInnerAngle;\n      },\n\n      set coneInnerAngle(value) {\n        pannerNode.coneInnerAngle = value;\n      },\n\n      get coneOuterAngle() {\n        return pannerNode.coneOuterAngle;\n      },\n\n      set coneOuterAngle(value) {\n        pannerNode.coneOuterAngle = value;\n      },\n\n      get coneOuterGain() {\n        return pannerNode.coneOuterGain;\n      },\n\n      set coneOuterGain(value) {\n        // Bug #127: Safari does not throw an InvalidStateError yet.\n        if (value < 0 || value > 1) {\n          throw createInvalidStateError();\n        }\n\n        pannerNode.coneOuterGain = value;\n      },\n\n      get context() {\n        return pannerNode.context;\n      },\n\n      get distanceModel() {\n        return pannerNode.distanceModel;\n      },\n\n      set distanceModel(value) {\n        pannerNode.distanceModel = value;\n      },\n\n      get inputs() {\n        return [inputGainNode];\n      },\n\n      get maxDistance() {\n        return pannerNode.maxDistance;\n      },\n\n      set maxDistance(value) {\n        // Bug #128: Safari does not throw an error yet.\n        if (value < 0) {\n          throw new RangeError();\n        }\n\n        pannerNode.maxDistance = value;\n      },\n\n      get numberOfInputs() {\n        return pannerNode.numberOfInputs;\n      },\n\n      get numberOfOutputs() {\n        return pannerNode.numberOfOutputs;\n      },\n\n      get orientationX() {\n        return orientationXGainNode.gain;\n      },\n\n      get orientationY() {\n        return orientationYGainNode.gain;\n      },\n\n      get orientationZ() {\n        return orientationZGainNode.gain;\n      },\n\n      get panningModel() {\n        return pannerNode.panningModel;\n      },\n\n      set panningModel(value) {\n        pannerNode.panningModel = value;\n      },\n\n      get positionX() {\n        return positionXGainNode.gain;\n      },\n\n      get positionY() {\n        return positionYGainNode.gain;\n      },\n\n      get positionZ() {\n        return positionZGainNode.gain;\n      },\n\n      get refDistance() {\n        return pannerNode.refDistance;\n      },\n\n      set refDistance(value) {\n        // Bug #129: Safari does not throw an error yet.\n        if (value < 0) {\n          throw new RangeError();\n        }\n\n        pannerNode.refDistance = value;\n      },\n\n      get rolloffFactor() {\n        return pannerNode.rolloffFactor;\n      },\n\n      set rolloffFactor(value) {\n        // Bug #130: Safari does not throw an error yet.\n        if (value < 0) {\n          throw new RangeError();\n        }\n\n        pannerNode.rolloffFactor = value;\n      },\n\n      addEventListener: function addEventListener() {\n        return inputGainNode.addEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);\n      },\n      dispatchEvent: function dispatchEvent() {\n        return inputGainNode.dispatchEvent(arguments.length <= 0 ? undefined : arguments[0]);\n      },\n      removeEventListener: function removeEventListener() {\n        return inputGainNode.removeEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);\n      }\n    };\n\n    if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n      nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n    }\n\n    if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n      nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n    }\n\n    if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n      nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n    }\n\n    if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n      nativePannerNodeFaker.distanceModel = distanceModel;\n    }\n\n    if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n      nativePannerNodeFaker.maxDistance = maxDistance;\n    }\n\n    if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n      nativePannerNodeFaker.orientationX.value = orientationX;\n    }\n\n    if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n      nativePannerNodeFaker.orientationY.value = orientationY;\n    }\n\n    if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n      nativePannerNodeFaker.orientationZ.value = orientationZ;\n    }\n\n    if (panningModel !== nativePannerNodeFaker.panningModel) {\n      nativePannerNodeFaker.panningModel = panningModel;\n    }\n\n    if (positionX !== nativePannerNodeFaker.positionX.value) {\n      nativePannerNodeFaker.positionX.value = positionX;\n    }\n\n    if (positionY !== nativePannerNodeFaker.positionY.value) {\n      nativePannerNodeFaker.positionY.value = positionY;\n    }\n\n    if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n      nativePannerNodeFaker.positionZ.value = positionZ;\n    }\n\n    if (refDistance !== nativePannerNodeFaker.refDistance) {\n      nativePannerNodeFaker.refDistance = refDistance;\n    }\n\n    if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n      nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n    }\n\n    if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n      pannerNode.setOrientation.apply(pannerNode, _toConsumableArray(lastOrientation)); // tslint:disable-line:deprecation\n    }\n\n    if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n      pannerNode.setPosition.apply(pannerNode, _toConsumableArray(lastPosition)); // tslint:disable-line:deprecation\n    }\n\n    var whenConnected = function whenConnected() {\n      inputGainNode.connect(pannerNode); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n      connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n      waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n      waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n      waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n      waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n      waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n      waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n      channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n    };\n\n    var whenDisconnected = function whenDisconnected() {\n      inputGainNode.disconnect(pannerNode); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n      disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n      waveShaperNode.disconnect(orientationXGainNode);\n      orientationXGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(orientationYGainNode);\n      orientationYGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(orientationZGainNode);\n      orientationZGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(positionXGainNode);\n      positionXGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(positionYGainNode);\n      positionYGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(positionZGainNode);\n      positionZGainNode.disconnect(channelMergerNode);\n      channelMergerNode.disconnect(scriptProcessorNode);\n      scriptProcessorNode.disconnect(nativeContext.destination);\n    };\n\n    return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n  };\n};","map":{"version":3,"mappings":";;;;AAAA,SAASA,4BAAT,QAA6C,6CAA7C;AACA,SAASC,oBAAT,QAAqC,kCAArC;AAGA,OAAO,IAAMC,kCAAkC,GAAyC,SAA3EA,kCAA2E,CACpFC,uCADoF,EAEpFC,uBAFoF,EAGpFC,6BAHoF,EAIpFC,oBAJoF,EAKpFC,+BALoF,EAMpFC,0BANoF,EAOpFC,uBAPoF,EAQpFC,4CARoF,EASpFC,cAToF,EAUpFC,kBAVoF,EAWpF;AACA,SAAO,UACHC,aADG,QAmBH;AAAA,QAhBIC,cAgBJ,QAhBIA,cAgBJ;AAAA,QAfIC,cAeJ,QAfIA,cAeJ;AAAA,QAdIC,aAcJ,QAdIA,aAcJ;AAAA,QAbIC,aAaJ,QAbIA,aAaJ;AAAA,QAZIC,WAYJ,QAZIA,WAYJ;AAAA,QAXIC,YAWJ,QAXIA,YAWJ;AAAA,QAVIC,YAUJ,QAVIA,YAUJ;AAAA,QATIC,YASJ,QATIA,YASJ;AAAA,QARIC,YAQJ,QARIA,YAQJ;AAAA,QAPIC,SAOJ,QAPIA,SAOJ;AAAA,QANIC,SAMJ,QANIA,SAMJ;AAAA,QALIC,SAKJ,QALIA,SAKJ;AAAA,QAJIC,WAIJ,QAJIA,WAIJ;AAAA,QAHIC,aAGJ,QAHIA,aAGJ;AAAA,QAFOC,gBAEP;;AACA,QAAMC,UAAU,GAAGhB,aAAa,CAACiB,YAAd,EAAnB,CADA,CAGA;;AACA,QAAIF,gBAAgB,CAACG,YAAjB,GAAgC,CAApC,EAAuC;AACnC,YAAMtB,uBAAuB,EAA7B;AACH,KAND,CAQA;;;AACA,QAAImB,gBAAgB,CAACI,gBAAjB,KAAsC,KAA1C,EAAiD;AAC7C,YAAMvB,uBAAuB,EAA7B;AACH;;AAEDT,gCAA4B,CAAC6B,UAAD,EAAaD,gBAAb,CAA5B;AAEA,QAAMK,sBAAsB,GAAG;AAC3BF,kBAAY,EAAE,CADa;AAE3BC,sBAAgB,EAAE,UAFS;AAG3BE,2BAAqB,EAAE;AAHI,KAA/B;AAMA,QAAMC,iBAAiB,GAAG9B,6BAA6B,CAACQ,aAAD,kCAChDoB,sBADgD;AAEnDC,2BAAqB,EAAE,UAF4B;AAGnDE,oBAAc,EAAE;AAHmC,OAAvD;AAKA,QAAMC,aAAa,GAAG/B,oBAAoB,CAACO,aAAD,kCAAqBe,gBAArB;AAAuCU,UAAI,EAAE;AAA7C,OAA1C;AACA,QAAMC,oBAAoB,GAAGjC,oBAAoB,CAACO,aAAD,kCAAqBoB,sBAArB;AAA6CK,UAAI,EAAE;AAAnD,OAAjD;AACA,QAAME,oBAAoB,GAAGlC,oBAAoB,CAACO,aAAD,kCAAqBoB,sBAArB;AAA6CK,UAAI,EAAE;AAAnD,OAAjD;AACA,QAAMG,oBAAoB,GAAGnC,oBAAoB,CAACO,aAAD,kCAAqBoB,sBAArB;AAA6CK,UAAI,EAAE;AAAnD,OAAjD;AACA,QAAMI,iBAAiB,GAAGpC,oBAAoB,CAACO,aAAD,kCAAqBoB,sBAArB;AAA6CK,UAAI,EAAE;AAAnD,OAA9C;AACA,QAAMK,iBAAiB,GAAGrC,oBAAoB,CAACO,aAAD,kCAAqBoB,sBAArB;AAA6CK,UAAI,EAAE;AAAnD,OAA9C;AACA,QAAMM,iBAAiB,GAAGtC,oBAAoB,CAACO,aAAD,kCAAqBoB,sBAArB;AAA6CK,UAAI,EAAE;AAAnD,OAA9C;AACA,QAAMO,mBAAmB,GAAGtC,+BAA+B,CAACM,aAAD,EAAgB,GAAhB,EAAqB,CAArB,EAAwB,CAAxB,CAA3D;AACA,QAAMiC,cAAc,GAAGtC,0BAA0B,CAACK,aAAD,kCAC1CoB,sBAD0C;AAE7Cc,WAAK,EAAE,IAAIC,YAAJ,CAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAFsC;AAG7CC,gBAAU,EAAE;AAHiC,OAAjD;AAMA,QAAIC,eAAe,GAA6B,CAAC/B,YAAD,EAAeC,YAAf,EAA6BC,YAA7B,CAAhD;AACA,QAAI8B,YAAY,GAA6B,CAAC5B,SAAD,EAAYC,SAAZ,EAAuBC,SAAvB,CAA7C;AAEA,QAAM2B,MAAM,GAAG,IAAIJ,YAAJ,CAAiB,CAAjB,CAAf,CA3CA,CA6CA;;AACAH,uBAAmB,CAACQ,cAApB,GAAqC,iBAAoB;AAAA,UAAjBC,WAAiB,SAAjBA,WAAiB;AACrD,UAAMC,WAAW,GAA6B,CAC1C5C,cAAc,CAAC2C,WAAD,EAAcF,MAAd,EAAsB,CAAtB,CAD4B,EAE1CzC,cAAc,CAAC2C,WAAD,EAAcF,MAAd,EAAsB,CAAtB,CAF4B,EAG1CzC,cAAc,CAAC2C,WAAD,EAAcF,MAAd,EAAsB,CAAtB,CAH4B,CAA9C;;AAMA,UAAIG,WAAW,CAACC,IAAZ,CAAiB,UAACC,KAAD,EAAQC,KAAR;AAAA,eAAkBD,KAAK,KAAKP,eAAe,CAACQ,KAAD,CAA3C;AAAA,OAAjB,CAAJ,EAA0E;AACtE7B,kBAAU,CAAC8B,cAAX,iBAAU,EAAmBJ,WAAnB,CAAV,CADsE,CAC3B;;AAE3CL,uBAAe,GAAGK,WAAlB;AACH;;AAED,UAAMK,OAAO,GAA6B,CACtCjD,cAAc,CAAC2C,WAAD,EAAcF,MAAd,EAAsB,CAAtB,CADwB,EAEtCzC,cAAc,CAAC2C,WAAD,EAAcF,MAAd,EAAsB,CAAtB,CAFwB,EAGtCzC,cAAc,CAAC2C,WAAD,EAAcF,MAAd,EAAsB,CAAtB,CAHwB,CAA1C;;AAMA,UAAIQ,OAAO,CAACJ,IAAR,CAAa,UAACC,KAAD,EAAQC,KAAR;AAAA,eAAkBD,KAAK,KAAKN,YAAY,CAACO,KAAD,CAAxC;AAAA,OAAb,CAAJ,EAAmE;AAC/D7B,kBAAU,CAACgC,WAAX,iBAAU,EAAgBD,OAAhB,CAAV,CAD+D,CAC3B;;AAEpCT,oBAAY,GAAGS,OAAf;AACH;AACJ,KAxBD;;AA0BAE,UAAM,CAACC,cAAP,CAAsBvB,oBAAoB,CAACF,IAA3C,EAAiD,cAAjD,EAAiE;AAAE0B,SAAG,EAAE;AAAA,eAAM,CAAN;AAAA;AAAP,KAAjE;AACAF,UAAM,CAACC,cAAP,CAAsBtB,oBAAoB,CAACH,IAA3C,EAAiD,cAAjD,EAAiE;AAAE0B,SAAG,EAAE;AAAA,eAAM,CAAN;AAAA;AAAP,KAAjE;AACAF,UAAM,CAACC,cAAP,CAAsBrB,iBAAiB,CAACJ,IAAxC,EAA8C,cAA9C,EAA8D;AAAE0B,SAAG,EAAE;AAAA,eAAM,CAAN;AAAA;AAAP,KAA9D;AACAF,UAAM,CAACC,cAAP,CAAsBpB,iBAAiB,CAACL,IAAxC,EAA8C,cAA9C,EAA8D;AAAE0B,SAAG,EAAE;AAAA,eAAM,CAAN;AAAA;AAAP,KAA9D;AACAF,UAAM,CAACC,cAAP,CAAsBnB,iBAAiB,CAACN,IAAxC,EAA8C,cAA9C,EAA8D;AAAE0B,SAAG,EAAE;AAAA,eAAM,CAAN;AAAA;AAAP,KAA9D;AAEA,QAAMC,qBAAqB,GAAG;AAC1B,UAAIC,UAAJ,GAAc;AACV,eAAOC,SAAP;AACH,OAHyB;;AAI1B,UAAIpC,YAAJ,GAAgB;AACZ,eAAOF,UAAU,CAACE,YAAlB;AACH,OANyB;;AAO1B,UAAIA,YAAJ,CAAiB0B,KAAjB,EAAsB;AAClB;AACA,YAAIA,KAAK,GAAG,CAAZ,EAAe;AACX,gBAAMhD,uBAAuB,EAA7B;AACH;;AAED4B,qBAAa,CAACN,YAAd,GAA6B0B,KAA7B;AACA5B,kBAAU,CAACE,YAAX,GAA0B0B,KAA1B;AACH,OAfyB;;AAgB1B,UAAIzB,gBAAJ,GAAoB;AAChB,eAAOH,UAAU,CAACG,gBAAlB;AACH,OAlByB;;AAmB1B,UAAIA,gBAAJ,CAAqByB,KAArB,EAA0B;AACtB;AACA,YAAIA,KAAK,KAAK,KAAd,EAAqB;AACjB,gBAAMhD,uBAAuB,EAA7B;AACH;;AAED4B,qBAAa,CAACL,gBAAd,GAAiCyB,KAAjC;AACA5B,kBAAU,CAACG,gBAAX,GAA8ByB,KAA9B;AACH,OA3ByB;;AA4B1B,UAAIvB,qBAAJ,GAAyB;AACrB,eAAOL,UAAU,CAACK,qBAAlB;AACH,OA9ByB;;AA+B1B,UAAIA,qBAAJ,CAA0BuB,KAA1B,EAA+B;AAC3BpB,qBAAa,CAACH,qBAAd,GAAsCuB,KAAtC;AACA5B,kBAAU,CAACK,qBAAX,GAAmCuB,KAAnC;AACH,OAlCyB;;AAmC1B,UAAI3C,cAAJ,GAAkB;AACd,eAAOe,UAAU,CAACf,cAAlB;AACH,OArCyB;;AAsC1B,UAAIA,cAAJ,CAAmB2C,KAAnB,EAAwB;AACpB5B,kBAAU,CAACf,cAAX,GAA4B2C,KAA5B;AACH,OAxCyB;;AAyC1B,UAAI1C,cAAJ,GAAkB;AACd,eAAOc,UAAU,CAACd,cAAlB;AACH,OA3CyB;;AA4C1B,UAAIA,cAAJ,CAAmB0C,KAAnB,EAAwB;AACpB5B,kBAAU,CAACd,cAAX,GAA4B0C,KAA5B;AACH,OA9CyB;;AA+C1B,UAAIzC,aAAJ,GAAiB;AACb,eAAOa,UAAU,CAACb,aAAlB;AACH,OAjDyB;;AAkD1B,UAAIA,aAAJ,CAAkByC,KAAlB,EAAuB;AACnB;AACA,YAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;AACxB,gBAAMrD,uBAAuB,EAA7B;AACH;;AAEDyB,kBAAU,CAACb,aAAX,GAA2ByC,KAA3B;AACH,OAzDyB;;AA0D1B,UAAIW,OAAJ,GAAW;AACP,eAAOvC,UAAU,CAACuC,OAAlB;AACH,OA5DyB;;AA6D1B,UAAInD,aAAJ,GAAiB;AACb,eAAOY,UAAU,CAACZ,aAAlB;AACH,OA/DyB;;AAgE1B,UAAIA,aAAJ,CAAkBwC,KAAlB,EAAuB;AACnB5B,kBAAU,CAACZ,aAAX,GAA2BwC,KAA3B;AACH,OAlEyB;;AAmE1B,UAAIY,MAAJ,GAAU;AACN,eAAO,CAAChC,aAAD,CAAP;AACH,OArEyB;;AAsE1B,UAAInB,WAAJ,GAAe;AACX,eAAOW,UAAU,CAACX,WAAlB;AACH,OAxEyB;;AAyE1B,UAAIA,WAAJ,CAAgBuC,KAAhB,EAAqB;AACjB;AACA,YAAIA,KAAK,GAAG,CAAZ,EAAe;AACX,gBAAM,IAAIa,UAAJ,EAAN;AACH;;AAEDzC,kBAAU,CAACX,WAAX,GAAyBuC,KAAzB;AACH,OAhFyB;;AAiF1B,UAAIrB,cAAJ,GAAkB;AACd,eAAOP,UAAU,CAACO,cAAlB;AACH,OAnFyB;;AAoF1B,UAAImC,eAAJ,GAAmB;AACf,eAAO1C,UAAU,CAAC0C,eAAlB;AACH,OAtFyB;;AAuF1B,UAAIpD,YAAJ,GAAgB;AACZ,eAAOoB,oBAAoB,CAACD,IAA5B;AACH,OAzFyB;;AA0F1B,UAAIlB,YAAJ,GAAgB;AACZ,eAAOoB,oBAAoB,CAACF,IAA5B;AACH,OA5FyB;;AA6F1B,UAAIjB,YAAJ,GAAgB;AACZ,eAAOoB,oBAAoB,CAACH,IAA5B;AACH,OA/FyB;;AAgG1B,UAAIhB,YAAJ,GAAgB;AACZ,eAAOO,UAAU,CAACP,YAAlB;AACH,OAlGyB;;AAmG1B,UAAIA,YAAJ,CAAiBmC,KAAjB,EAAsB;AAClB5B,kBAAU,CAACP,YAAX,GAA0BmC,KAA1B;AACH,OArGyB;;AAsG1B,UAAIlC,SAAJ,GAAa;AACT,eAAOmB,iBAAiB,CAACJ,IAAzB;AACH,OAxGyB;;AAyG1B,UAAId,SAAJ,GAAa;AACT,eAAOmB,iBAAiB,CAACL,IAAzB;AACH,OA3GyB;;AA4G1B,UAAIb,SAAJ,GAAa;AACT,eAAOmB,iBAAiB,CAACN,IAAzB;AACH,OA9GyB;;AA+G1B,UAAIZ,WAAJ,GAAe;AACX,eAAOG,UAAU,CAACH,WAAlB;AACH,OAjHyB;;AAkH1B,UAAIA,WAAJ,CAAgB+B,KAAhB,EAAqB;AACjB;AACA,YAAIA,KAAK,GAAG,CAAZ,EAAe;AACX,gBAAM,IAAIa,UAAJ,EAAN;AACH;;AAEDzC,kBAAU,CAACH,WAAX,GAAyB+B,KAAzB;AACH,OAzHyB;;AA0H1B,UAAI9B,aAAJ,GAAiB;AACb,eAAOE,UAAU,CAACF,aAAlB;AACH,OA5HyB;;AA6H1B,UAAIA,aAAJ,CAAkB8B,KAAlB,EAAuB;AACnB;AACA,YAAIA,KAAK,GAAG,CAAZ,EAAe;AACX,gBAAM,IAAIa,UAAJ,EAAN;AACH;;AAEDzC,kBAAU,CAACF,aAAX,GAA2B8B,KAA3B;AACH,OApIyB;;AAqI1Be,sBArI0B,8BAqIK;AAC3B,eAAOnC,aAAa,CAACmC,gBAAd,sJAAP;AACH,OAvIyB;AAwI1BC,mBAxI0B,2BAwIE;AACxB,eAAOpC,aAAa,CAACoC,aAAd,kDAAP;AACH,OA1IyB;AA2I1BC,yBA3I0B,iCA2IQ;AAC9B,eAAOrC,aAAa,CAACqC,mBAAd,sJAAP;AACH;AA7IyB,KAA9B;;AAgJA,QAAI5D,cAAc,KAAKmD,qBAAqB,CAACnD,cAA7C,EAA6D;AACzDmD,2BAAqB,CAACnD,cAAtB,GAAuCA,cAAvC;AACH;;AAED,QAAIC,cAAc,KAAKkD,qBAAqB,CAAClD,cAA7C,EAA6D;AACzDkD,2BAAqB,CAAClD,cAAtB,GAAuCA,cAAvC;AACH;;AAED,QAAIC,aAAa,KAAKiD,qBAAqB,CAACjD,aAA5C,EAA2D;AACvDiD,2BAAqB,CAACjD,aAAtB,GAAsCA,aAAtC;AACH;;AAED,QAAIC,aAAa,KAAKgD,qBAAqB,CAAChD,aAA5C,EAA2D;AACvDgD,2BAAqB,CAAChD,aAAtB,GAAsCA,aAAtC;AACH;;AAED,QAAIC,WAAW,KAAK+C,qBAAqB,CAAC/C,WAA1C,EAAuD;AACnD+C,2BAAqB,CAAC/C,WAAtB,GAAoCA,WAApC;AACH;;AAED,QAAIC,YAAY,KAAK8C,qBAAqB,CAAC9C,YAAtB,CAAmCsC,KAAxD,EAA+D;AAC3DQ,2BAAqB,CAAC9C,YAAtB,CAAmCsC,KAAnC,GAA2CtC,YAA3C;AACH;;AAED,QAAIC,YAAY,KAAK6C,qBAAqB,CAAC7C,YAAtB,CAAmCqC,KAAxD,EAA+D;AAC3DQ,2BAAqB,CAAC7C,YAAtB,CAAmCqC,KAAnC,GAA2CrC,YAA3C;AACH;;AAED,QAAIC,YAAY,KAAK4C,qBAAqB,CAAC5C,YAAtB,CAAmCoC,KAAxD,EAA+D;AAC3DQ,2BAAqB,CAAC5C,YAAtB,CAAmCoC,KAAnC,GAA2CpC,YAA3C;AACH;;AAED,QAAIC,YAAY,KAAK2C,qBAAqB,CAAC3C,YAA3C,EAAyD;AACrD2C,2BAAqB,CAAC3C,YAAtB,GAAqCA,YAArC;AACH;;AAED,QAAIC,SAAS,KAAK0C,qBAAqB,CAAC1C,SAAtB,CAAgCkC,KAAlD,EAAyD;AACrDQ,2BAAqB,CAAC1C,SAAtB,CAAgCkC,KAAhC,GAAwClC,SAAxC;AACH;;AAED,QAAIC,SAAS,KAAKyC,qBAAqB,CAACzC,SAAtB,CAAgCiC,KAAlD,EAAyD;AACrDQ,2BAAqB,CAACzC,SAAtB,CAAgCiC,KAAhC,GAAwCjC,SAAxC;AACH;;AAED,QAAIC,SAAS,KAAKwC,qBAAqB,CAACxC,SAAtB,CAAgCgC,KAAlD,EAAyD;AACrDQ,2BAAqB,CAACxC,SAAtB,CAAgCgC,KAAhC,GAAwChC,SAAxC;AACH;;AAED,QAAIC,WAAW,KAAKuC,qBAAqB,CAACvC,WAA1C,EAAuD;AACnDuC,2BAAqB,CAACvC,WAAtB,GAAoCA,WAApC;AACH;;AAED,QAAIC,aAAa,KAAKsC,qBAAqB,CAACtC,aAA5C,EAA2D;AACvDsC,2BAAqB,CAACtC,aAAtB,GAAsCA,aAAtC;AACH;;AAED,QAAIuB,eAAe,CAAC,CAAD,CAAf,KAAuB,CAAvB,IAA4BA,eAAe,CAAC,CAAD,CAAf,KAAuB,CAAnD,IAAwDA,eAAe,CAAC,CAAD,CAAf,KAAuB,CAAnF,EAAsF;AAClFrB,gBAAU,CAAC8B,cAAX,iBAAU,qBAAmBT,eAAnB,EAAV,CADkF,CACnC;AAClD;;AAED,QAAIC,YAAY,CAAC,CAAD,CAAZ,KAAoB,CAApB,IAAyBA,YAAY,CAAC,CAAD,CAAZ,KAAoB,CAA7C,IAAkDA,YAAY,CAAC,CAAD,CAAZ,KAAoB,CAA1E,EAA6E;AACzEtB,gBAAU,CAACgC,WAAX,iBAAU,qBAAgBV,YAAhB,EAAV,CADyE,CAChC;AAC5C;;AAED,QAAMwB,aAAa,GAAG,SAAhBA,aAAgB,GAAK;AACvBtC,mBAAa,CAACuC,OAAd,CAAsB/C,UAAtB,EADuB,CAGvB;;AACA1B,6CAAuC,CAACkC,aAAD,EAAgBS,cAAhB,EAAgC,CAAhC,EAAmC,CAAnC,CAAvC;AAEAA,oBAAc,CAAC8B,OAAf,CAAuBrC,oBAAvB,EAA6CqC,OAA7C,CAAqDzC,iBAArD,EAAwE,CAAxE,EAA2E,CAA3E;AACAW,oBAAc,CAAC8B,OAAf,CAAuBpC,oBAAvB,EAA6CoC,OAA7C,CAAqDzC,iBAArD,EAAwE,CAAxE,EAA2E,CAA3E;AACAW,oBAAc,CAAC8B,OAAf,CAAuBnC,oBAAvB,EAA6CmC,OAA7C,CAAqDzC,iBAArD,EAAwE,CAAxE,EAA2E,CAA3E;AACAW,oBAAc,CAAC8B,OAAf,CAAuBlC,iBAAvB,EAA0CkC,OAA1C,CAAkDzC,iBAAlD,EAAqE,CAArE,EAAwE,CAAxE;AACAW,oBAAc,CAAC8B,OAAf,CAAuBjC,iBAAvB,EAA0CiC,OAA1C,CAAkDzC,iBAAlD,EAAqE,CAArE,EAAwE,CAAxE;AACAW,oBAAc,CAAC8B,OAAf,CAAuBhC,iBAAvB,EAA0CgC,OAA1C,CAAkDzC,iBAAlD,EAAqE,CAArE,EAAwE,CAAxE;AAEAA,uBAAiB,CAACyC,OAAlB,CAA0B/B,mBAA1B,EAA+C+B,OAA/C,CAAuD/D,aAAa,CAACgE,WAArE;AACH,KAdD;;AAeA,QAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAK;AAC1BzC,mBAAa,CAAC0C,UAAd,CAAyBlD,UAAzB,EAD0B,CAG1B;;AACAnB,kDAA4C,CAAC2B,aAAD,EAAgBS,cAAhB,EAAgC,CAAhC,EAAmC,CAAnC,CAA5C;AAEAA,oBAAc,CAACiC,UAAf,CAA0BxC,oBAA1B;AACAA,0BAAoB,CAACwC,UAArB,CAAgC5C,iBAAhC;AACAW,oBAAc,CAACiC,UAAf,CAA0BvC,oBAA1B;AACAA,0BAAoB,CAACuC,UAArB,CAAgC5C,iBAAhC;AACAW,oBAAc,CAACiC,UAAf,CAA0BtC,oBAA1B;AACAA,0BAAoB,CAACsC,UAArB,CAAgC5C,iBAAhC;AACAW,oBAAc,CAACiC,UAAf,CAA0BrC,iBAA1B;AACAA,uBAAiB,CAACqC,UAAlB,CAA6B5C,iBAA7B;AACAW,oBAAc,CAACiC,UAAf,CAA0BpC,iBAA1B;AACAA,uBAAiB,CAACoC,UAAlB,CAA6B5C,iBAA7B;AACAW,oBAAc,CAACiC,UAAf,CAA0BnC,iBAA1B;AACAA,uBAAiB,CAACmC,UAAlB,CAA6B5C,iBAA7B;AAEAA,uBAAiB,CAAC4C,UAAlB,CAA6BlC,mBAA7B;AACAA,yBAAmB,CAACkC,UAApB,CAA+BlE,aAAa,CAACgE,WAA7C;AACH,KArBD;;AAuBA,WAAOjE,kBAAkB,CAACX,oBAAoB,CAACgE,qBAAD,EAAwBpC,UAAxB,CAArB,EAA0D8C,aAA1D,EAAyEG,gBAAzE,CAAzB;AACH,GAxVD;AAyVH,CArWM","names":["assignNativeAudioNodeOptions","interceptConnections","createNativePannerNodeFakerFactory","connectNativeAudioNodeToNativeAudioNode","createInvalidStateError","createNativeChannelMergerNode","createNativeGainNode","createNativeScriptProcessorNode","createNativeWaveShaperNode","createNotSupportedError","disconnectNativeAudioNodeFromNativeAudioNode","getFirstSample","monitorConnections","nativeContext","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationX","orientationY","orientationZ","panningModel","positionX","positionY","positionZ","refDistance","rolloffFactor","audioNodeOptions","pannerNode","createPanner","channelCount","channelCountMode","SINGLE_CHANNEL_OPTIONS","channelInterpretation","channelMergerNode","numberOfInputs","inputGainNode","gain","orientationXGainNode","orientationYGainNode","orientationZGainNode","positionXGainNode","positionYGainNode","positionZGainNode","scriptProcessorNode","waveShaperNode","curve","Float32Array","oversample","lastOrientation","lastPosition","buffer","onaudioprocess","inputBuffer","orientation","some","value","index","setOrientation","positon","setPosition","Object","defineProperty","get","nativePannerNodeFaker","bufferSize","undefined","context","inputs","RangeError","numberOfOutputs","addEventListener","dispatchEvent","removeEventListener","whenConnected","connect","destination","whenDisconnected","disconnect"],"sourceRoot":"","sources":["../../../src/factories/native-panner-node-faker-factory.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}