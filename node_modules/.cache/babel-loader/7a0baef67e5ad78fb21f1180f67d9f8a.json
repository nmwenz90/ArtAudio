{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { FeedbackEffect } from \"./FeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { intervalToFrequencyRatio } from \"../core/type/Conversions\";\n/**\n * PitchShift does near-realtime pitch shifting to the incoming signal.\n * The effect is achieved by speeding up or slowing down the delayTime\n * of a DelayNode using a sawtooth wave.\n * Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n * Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n * @category Effect\n */\n\nexport var PitchShift = /*#__PURE__*/function (_FeedbackEffect) {\n  _inherits(PitchShift, _FeedbackEffect);\n\n  var _super = _createSuper(PitchShift);\n\n  function PitchShift() {\n    var _this;\n\n    _classCallCheck(this, PitchShift);\n\n    _this = _super.call(this, optionsFromArguments(PitchShift.getDefaults(), arguments, [\"pitch\"]));\n    _this.name = \"PitchShift\";\n    var options = optionsFromArguments(PitchShift.getDefaults(), arguments, [\"pitch\"]);\n    _this._frequency = new Signal({\n      context: _this.context\n    });\n    _this._delayA = new Delay({\n      maxDelay: 1,\n      context: _this.context\n    });\n    _this._lfoA = new LFO({\n      context: _this.context,\n      min: 0,\n      max: 0.1,\n      type: \"sawtooth\"\n    }).connect(_this._delayA.delayTime);\n    _this._delayB = new Delay({\n      maxDelay: 1,\n      context: _this.context\n    });\n    _this._lfoB = new LFO({\n      context: _this.context,\n      min: 0,\n      max: 0.1,\n      type: \"sawtooth\",\n      phase: 180\n    }).connect(_this._delayB.delayTime);\n    _this._crossFade = new CrossFade({\n      context: _this.context\n    });\n    _this._crossFadeLFO = new LFO({\n      context: _this.context,\n      min: 0,\n      max: 1,\n      type: \"triangle\",\n      phase: 90\n    }).connect(_this._crossFade.fade);\n    _this._feedbackDelay = new Delay({\n      delayTime: options.delayTime,\n      context: _this.context\n    });\n    _this.delayTime = _this._feedbackDelay.delayTime;\n    readOnly(_assertThisInitialized(_this), \"delayTime\");\n    _this._pitch = options.pitch;\n    _this._windowSize = options.windowSize; // connect the two delay lines up\n\n    _this._delayA.connect(_this._crossFade.a);\n\n    _this._delayB.connect(_this._crossFade.b); // connect the frequency\n\n\n    _this._frequency.fan(_this._lfoA.frequency, _this._lfoB.frequency, _this._crossFadeLFO.frequency); // route the input\n\n\n    _this.effectSend.fan(_this._delayA, _this._delayB);\n\n    _this._crossFade.chain(_this._feedbackDelay, _this.effectReturn); // start the LFOs at the same time\n\n\n    var now = _this.now();\n\n    _this._lfoA.start(now);\n\n    _this._lfoB.start(now);\n\n    _this._crossFadeLFO.start(now); // set the initial value\n\n\n    _this.windowSize = _this._windowSize;\n    return _this;\n  }\n\n  _createClass(PitchShift, [{\n    key: \"pitch\",\n    get:\n    /**\n     * Repitch the incoming signal by some interval (measured in semi-tones).\n     * @example\n     * const pitchShift = new Tone.PitchShift().toDestination();\n     * const osc = new Tone.Oscillator().connect(pitchShift).start().toDestination();\n     * pitchShift.pitch = -12; // down one octave\n     * pitchShift.pitch = 7; // up a fifth\n     */\n    function get() {\n      return this._pitch;\n    },\n    set: function set(interval) {\n      this._pitch = interval;\n      var factor = 0;\n\n      if (interval < 0) {\n        this._lfoA.min = 0;\n        this._lfoA.max = this._windowSize;\n        this._lfoB.min = 0;\n        this._lfoB.max = this._windowSize;\n        factor = intervalToFrequencyRatio(interval - 1) + 1;\n      } else {\n        this._lfoA.min = this._windowSize;\n        this._lfoA.max = 0;\n        this._lfoB.min = this._windowSize;\n        this._lfoB.max = 0;\n        factor = intervalToFrequencyRatio(interval) - 1;\n      }\n\n      this._frequency.value = factor * (1.2 / this._windowSize);\n    }\n    /**\n     * The window size corresponds roughly to the sample length in a looping sampler.\n     * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n     * signal, but larger values will result in smoother pitch shifting for larger intervals.\n     * A nominal range of 0.03 to 0.1 is recommended.\n     */\n\n  }, {\n    key: \"windowSize\",\n    get: function get() {\n      return this._windowSize;\n    },\n    set: function set(size) {\n      this._windowSize = this.toSeconds(size);\n      this.pitch = this._pitch;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(PitchShift.prototype), \"dispose\", this).call(this);\n\n      this._frequency.dispose();\n\n      this._delayA.dispose();\n\n      this._delayB.dispose();\n\n      this._lfoA.dispose();\n\n      this._lfoB.dispose();\n\n      this._crossFade.dispose();\n\n      this._crossFadeLFO.dispose();\n\n      this._feedbackDelay.dispose();\n\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(FeedbackEffect.getDefaults(), {\n        pitch: 0,\n        windowSize: 0.1,\n        delayTime: 0,\n        feedback: 0\n      });\n    }\n  }]);\n\n  return PitchShift;\n}(FeedbackEffect);","map":{"version":3,"mappings":"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","names":["FeedbackEffect","optionsFromArguments","LFO","Delay","CrossFade","Signal","readOnly","intervalToFrequencyRatio","PitchShift","getDefaults","arguments","options","_frequency","context","_delayA","maxDelay","_lfoA","min","max","type","connect","delayTime","_delayB","_lfoB","phase","_crossFade","_crossFadeLFO","fade","_feedbackDelay","_pitch","pitch","_windowSize","windowSize","a","b","fan","frequency","effectSend","chain","effectReturn","now","start","interval","factor","value","size","toSeconds","dispose","Object","assign","feedback"],"sourceRoot":"","sources":["../../../Tone/effect/PitchShift.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}