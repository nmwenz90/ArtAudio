{"ast":null,"code":"import { assertRange } from \"./Debug\";\n/**\n * Assert that the number is in the given range.\n */\n\nexport function range(min) {\n  var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n  var valueMap = new WeakMap();\n  return function (target, propertyKey) {\n    Reflect.defineProperty(target, propertyKey, {\n      configurable: true,\n      enumerable: true,\n      get: function get() {\n        return valueMap.get(this);\n      },\n      set: function set(newValue) {\n        assertRange(newValue, min, max);\n        valueMap.set(this, newValue);\n      }\n    });\n  };\n}\n/**\n * Convert the time to seconds and assert that the time is in between the two\n * values when being set.\n */\n\nexport function timeRange(min) {\n  var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n  var valueMap = new WeakMap();\n  return function (target, propertyKey) {\n    Reflect.defineProperty(target, propertyKey, {\n      configurable: true,\n      enumerable: true,\n      get: function get() {\n        return valueMap.get(this);\n      },\n      set: function set(newValue) {\n        assertRange(this.toSeconds(newValue), min, max);\n        valueMap.set(this, newValue);\n      }\n    });\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AAGA;;;;AAGA,OAAM,SAAUC,KAAV,CAAgBC,GAAhB,EAA2C;AAAA,MAAdC,GAAc,uEAARC,QAAQ;AAChD,MAAMC,QAAQ,GAAyB,IAAIC,OAAJ,EAAvC;AACA,SAAO,UAASC,MAAT,EAAsBC,WAAtB,EAAkD;AACxDC,WAAO,CAACC,cAAR,CACCH,MADD,EAECC,WAFD,EAGC;AACCG,kBAAY,EAAE,IADf;AAECC,gBAAU,EAAE,IAFb;AAGCC,SAAG,EAAE;AACJ,eAAOR,QAAQ,CAACQ,GAAT,CAAa,IAAb,CAAP;AACA,OALF;AAMCC,SAAG,EAAE,aAASC,QAAT,EAAyB;AAC7Bf,mBAAW,CAACe,QAAD,EAAWb,GAAX,EAAgBC,GAAhB,CAAX;AACAE,gBAAQ,CAACS,GAAT,CAAa,IAAb,EAAmBC,QAAnB;AACA;AATF,KAHD;AAeA,GAhBD;AAiBA;AAED;;;;;AAIA,OAAM,SAAUC,SAAV,CAAoBd,GAApB,EAA+C;AAAA,MAAdC,GAAc,uEAARC,QAAQ;AACpD,MAAMC,QAAQ,GAAuB,IAAIC,OAAJ,EAArC;AACA,SAAO,UAASC,MAAT,EAAsBC,WAAtB,EAAyC;AAC/CC,WAAO,CAACC,cAAR,CACCH,MADD,EAECC,WAFD,EAGC;AACCG,kBAAY,EAAE,IADf;AAECC,gBAAU,EAAE,IAFb;AAGCC,SAAG,EAAE;AACJ,eAAOR,QAAQ,CAACQ,GAAT,CAAa,IAAb,CAAP;AACA,OALF;AAMCC,SAAG,EAAE,aAASC,QAAT,EAAuB;AAC3Bf,mBAAW,CAAC,KAAKiB,SAAL,CAAeF,QAAf,CAAD,EAA2Bb,GAA3B,EAAgCC,GAAhC,CAAX;AACAE,gBAAQ,CAACS,GAAT,CAAa,IAAb,EAAmBC,QAAnB;AACA;AATF,KAHD;AAeA,GAhBD;AAiBA","names":["assertRange","range","min","max","Infinity","valueMap","WeakMap","target","propertyKey","Reflect","defineProperty","configurable","enumerable","get","set","newValue","timeRange","toSeconds"],"sourceRoot":"","sources":["../../../../Tone/core/util/Decorator.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}