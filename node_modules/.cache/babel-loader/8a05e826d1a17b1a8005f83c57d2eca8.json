{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport var createDecrementCycleCounter = function createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) {\n  return function (audioNode, count) {\n    var cycleCounter = cycleCounters.get(audioNode);\n\n    if (cycleCounter === undefined) {\n      throw new Error('Missing the expected cycle count.');\n    }\n\n    var nativeContext = getNativeContext(audioNode.context);\n    var isOffline = isNativeOfflineAudioContext(nativeContext);\n\n    if (cycleCounter === count) {\n      cycleCounters.delete(audioNode);\n\n      if (!isOffline && isActiveAudioNode(audioNode)) {\n        var nativeSourceAudioNode = getNativeAudioNode(audioNode);\n\n        var _getAudioNodeConnecti = getAudioNodeConnections(audioNode),\n            outputs = _getAudioNodeConnecti.outputs;\n\n        var _iterator = _createForOfIteratorHelper(outputs),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var output = _step.value;\n\n            if (isAudioNodeOutputConnection(output)) {\n              var nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n              connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n            } else {\n              var nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n              nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    } else {\n      cycleCounters.set(audioNode, cycleCounter - count);\n    }\n  };\n};","map":{"version":3,"mappings":";AAAA,SAASA,2BAAT,QAA4C,wCAA5C;AAGA,OAAO,IAAMC,2BAA2B,GAAkC,SAA7DA,2BAA6D,CACtEC,uCADsE,EAEtEC,aAFsE,EAGtEC,uBAHsE,EAItEC,kBAJsE,EAKtEC,mBALsE,EAMtEC,gBANsE,EAOtEC,iBAPsE,EAQtEC,2BARsE,EAStE;AACA,SAAO,UAACC,SAAD,EAAYC,KAAZ,EAAqB;AACxB,QAAMC,YAAY,GAAGT,aAAa,CAACU,GAAd,CAAkBH,SAAlB,CAArB;;AAEA,QAAIE,YAAY,KAAKE,SAArB,EAAgC;AAC5B,YAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;AACH;;AAED,QAAMC,aAAa,GAAGT,gBAAgB,CAACG,SAAS,CAACO,OAAX,CAAtC;AACA,QAAMC,SAAS,GAAGT,2BAA2B,CAACO,aAAD,CAA7C;;AAEA,QAAIJ,YAAY,KAAKD,KAArB,EAA4B;AACxBR,mBAAa,CAACgB,MAAd,CAAqBT,SAArB;;AAEA,UAAI,CAACQ,SAAD,IAAcV,iBAAiB,CAACE,SAAD,CAAnC,EAAgD;AAC5C,YAAMU,qBAAqB,GAAGf,kBAAkB,CAACK,SAAD,CAAhD;;AACA,oCAAoBN,uBAAuB,CAACM,SAAD,CAA3C;AAAA,YAAQW,OAAR,yBAAQA,OAAR;;AAF4C,mDAIvBA,OAJuB;AAAA;;AAAA;AAI5C,8DAA8B;AAAA,gBAAnBC,MAAmB;;AAC1B,gBAAItB,2BAA2B,CAACsB,MAAD,CAA/B,EAAyC;AACrC,kBAAMC,0BAA0B,GAAGlB,kBAAkB,CAACiB,MAAM,CAAC,CAAD,CAAP,CAArD;AAEApB,qDAAuC,CAACkB,qBAAD,EAAwBG,0BAAxB,EAAoDD,MAAM,CAAC,CAAD,CAA1D,EAA+DA,MAAM,CAAC,CAAD,CAArE,CAAvC;AACH,aAJD,MAIO;AACH,kBAAME,2BAA2B,GAAGlB,mBAAmB,CAACgB,MAAM,CAAC,CAAD,CAAP,CAAvD;AAEAF,mCAAqB,CAACK,OAAtB,CAA8BD,2BAA9B,EAA2DF,MAAM,CAAC,CAAD,CAAjE;AACH;AACJ;AAd2C;AAAA;AAAA;AAAA;AAAA;AAe/C;AACJ,KAnBD,MAmBO;AACHnB,mBAAa,CAACuB,GAAd,CAAkBhB,SAAlB,EAA6BE,YAAY,GAAGD,KAA5C;AACH;AACJ,GAhCD;AAiCH,CA3CM","names":["isAudioNodeOutputConnection","createDecrementCycleCounter","connectNativeAudioNodeToNativeAudioNode","cycleCounters","getAudioNodeConnections","getNativeAudioNode","getNativeAudioParam","getNativeContext","isActiveAudioNode","isNativeOfflineAudioContext","audioNode","count","cycleCounter","get","undefined","Error","nativeContext","context","isOffline","delete","nativeSourceAudioNode","outputs","output","nativeDestinationAudioNode","nativeDestinationAudioParam","connect","set"],"sourceRoot":"","sources":["../../../src/factories/decrement-cycle-counter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}