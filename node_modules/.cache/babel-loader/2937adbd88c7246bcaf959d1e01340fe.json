{"ast":null,"code":"import _asyncToGenerator from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\";\nexport var createFetchSource = function createFetchSource(createAbortError) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(url);\n\n            case 3:\n              response = _context.sent;\n\n              if (!response.ok) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 7;\n              return response.text();\n\n            case 7:\n              _context.t0 = _context.sent;\n              _context.t1 = response.url;\n              return _context.abrupt(\"return\", [_context.t0, _context.t1]);\n\n            case 10:\n              _context.next = 14;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t2 = _context[\"catch\"](0);\n\n            case 14:\n              throw createAbortError();\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"mappings":";;AAEA,OAAO,IAAMA,iBAAiB,GAAwB,SAAzCA,iBAAyC,CAACC,gBAAD,EAAqB;AACvE;AAAA,wEAAO,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEwBC,KAAK,CAACD,GAAD,CAF7B;;AAAA;AAEOE,sBAFP;;AAAA,mBAIKA,QAAQ,CAACC,EAJd;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAKmBD,QAAQ,CAACE,IAAT,EALnB;;AAAA;AAAA;AAAA,4BAKoCF,QAAQ,CAACF,GAL7C;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,oBAWGD,gBAAgB,EAXnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAaH,CAdM","names":["createFetchSource","createAbortError","url","fetch","response","ok","text"],"sourceRoot":"","sources":["../../../src/factories/fetch-source.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}