{"ast":null,"code":"import _objectSpread from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar DEFAULT_OPTIONS = {\n  channelCount: 2,\n\n  /*\n   * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n   * behavior.\n   */\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers',\n  pan: 0\n};\nexport var createStereoPannerNodeConstructor = function createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(StereoPannerNode, _audioNodeConstructor);\n\n    var _super = _createSuper(StereoPannerNode);\n\n    function StereoPannerNode(context, options) {\n      var _this;\n\n      _classCallCheck(this, StereoPannerNode);\n\n      var nativeContext = getNativeContext(context);\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n      var isOffline = isNativeOfflineAudioContext(nativeContext);\n      var stereoPannerNodeRenderer = isOffline ? createStereoPannerNodeRenderer() : null;\n      _this = _super.call(this, context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n      _this._pan = createAudioParam(_assertThisInitialized(_this), isOffline, nativeStereoPannerNode.pan);\n      return _this;\n    }\n\n    _createClass(StereoPannerNode, [{\n      key: \"pan\",\n      get: function get() {\n        return this._pan;\n      }\n    }]);\n\n    return StereoPannerNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"mappings":";;;;;;AAGA,IAAMA,eAAe,GAAG;AACpBC,cAAY,EAAE,CADM;;AAEpB;;;;AAIAC,kBAAgB,EAAE,UANE;AAOpBC,uBAAqB,EAAE,UAPH;AAQpBC,KAAG,EAAE;AARe,CAAxB;AAWA,OAAO,IAAMC,iCAAiC,GAAwC,SAAzEA,iCAAyE,CAClFC,oBADkF,EAElFC,gBAFkF,EAGlFC,4BAHkF,EAIlFC,8BAJkF,EAKlFC,gBALkF,EAMlFC,2BANkF,EAOlF;AACA;AAAA;;AAAA;;AAGI,8BAAYC,OAAZ,EAAwBC,OAAxB,EAA+D;AAAA;;AAAA;;AAC3D,UAAMC,aAAa,GAAGJ,gBAAgB,CAACE,OAAD,CAAtC;;AACA,UAAMG,aAAa,mCAAQf,eAAR,GAA4Ba,OAA5B,CAAnB;;AACA,UAAMG,sBAAsB,GAAGR,4BAA4B,CAACM,aAAD,EAAgBC,aAAhB,CAA3D;AACA,UAAME,SAAS,GAAGN,2BAA2B,CAACG,aAAD,CAA7C;AACA,UAAMI,wBAAwB,GAAiCD,SAAS,GAAGR,8BAA8B,EAAjC,GAAsC,IAA9G;AAEA,gCAAMG,OAAN,EAAe,KAAf,EAAsBI,sBAAtB,EAA8CE,wBAA9C;AAEA,YAAKC,IAAL,GAAYZ,gBAAgB,gCAAOU,SAAP,EAAkBD,sBAAsB,CAACZ,GAAzC,CAA5B;AAT2D;AAU9D;;AAbL;AAAA;AAAA,WAeI,eAAO;AACH,eAAO,KAAKe,IAAZ;AACH;AAjBL;;AAAA;AAAA,IAA0Db,oBAA1D;AAmBH,CA3BM","names":["DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","pan","createStereoPannerNodeConstructor","audioNodeConstructor","createAudioParam","createNativeStereoPannerNode","createStereoPannerNodeRenderer","getNativeContext","isNativeOfflineAudioContext","context","options","nativeContext","mergedOptions","nativeStereoPannerNode","isOffline","stereoPannerNodeRenderer","_pan"],"sourceRoot":"","sources":["../../../src/factories/stereo-panner-node-constructor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}