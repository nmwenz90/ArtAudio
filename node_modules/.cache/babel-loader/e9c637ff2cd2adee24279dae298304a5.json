{"ast":null,"code":"import _asyncToGenerator from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\";\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport var createBiquadFilterNodeRendererFactory = function createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {\n  return function () {\n    var renderedNativeBiquadFilterNodes = new WeakMap();\n\n    var createBiquadFilterNode = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(proxy, nativeOfflineAudioContext) {\n        var nativeBiquadFilterNode, nativeBiquadFilterNodeIsOwnedByContext, options;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                nativeBiquadFilterNode = getNativeAudioNode(proxy);\n                /*\n                 * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n                 * again.\n                 */\n\n                nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n\n                if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                  options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                  };\n                  nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n                }\n\n                renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n\n                if (nativeBiquadFilterNodeIsOwnedByContext) {\n                  _context.next = 15;\n                  break;\n                }\n\n                _context.next = 7;\n                return renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n\n              case 7:\n                _context.next = 9;\n                return renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n\n              case 9:\n                _context.next = 11;\n                return renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n\n              case 11:\n                _context.next = 13;\n                return renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n\n              case 13:\n                _context.next = 23;\n                break;\n\n              case 15:\n                _context.next = 17;\n                return connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n\n              case 17:\n                _context.next = 19;\n                return connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n\n              case 19:\n                _context.next = 21;\n                return connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n\n              case 21:\n                _context.next = 23;\n                return connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n\n              case 23:\n                _context.next = 25;\n                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode);\n\n              case 25:\n                return _context.abrupt(\"return\", nativeBiquadFilterNode);\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function createBiquadFilterNode(_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return {\n      render: function render(proxy, nativeOfflineAudioContext) {\n        var renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeBiquadFilterNode !== undefined) {\n          return Promise.resolve(renderedNativeBiquadFilterNode);\n        }\n\n        return createBiquadFilterNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};","map":{"version":3,"mappings":"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","names":["isOwnedByContext","createBiquadFilterNodeRendererFactory","connectAudioParam","createNativeBiquadFilterNode","getNativeAudioNode","renderAutomation","renderInputsOfAudioNode","renderedNativeBiquadFilterNodes","WeakMap","createBiquadFilterNode","proxy","nativeOfflineAudioContext","nativeBiquadFilterNode","nativeBiquadFilterNodeIsOwnedByContext","options","Q","value","channelCount","channelCountMode","channelInterpretation","detune","frequency","gain","type","set","render","renderedNativeBiquadFilterNode","get","undefined","Promise","resolve"],"sourceRoot":"","sources":["../../../src/factories/biquad-filter-node-renderer-factory.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}