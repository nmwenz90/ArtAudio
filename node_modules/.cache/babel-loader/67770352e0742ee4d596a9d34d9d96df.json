{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Panner } from \"./Panner\";\nimport { Volume } from \"./Volume\";\n/**\n * PanVol is a Tone.Panner and Tone.Volume in one.\n * @example\n * // pan the incoming signal left and drop the volume\n * const panVol = new Tone.PanVol(-0.25, -12).toDestination();\n * const osc = new Tone.Oscillator().connect(panVol).start();\n * @category Component\n */\n\nexport var PanVol = /*#__PURE__*/function (_ToneAudioNode) {\n  _inherits(PanVol, _ToneAudioNode);\n\n  var _super = _createSuper(PanVol);\n\n  function PanVol() {\n    var _this;\n\n    _classCallCheck(this, PanVol);\n\n    _this = _super.call(this, optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]));\n    _this.name = \"PanVol\";\n    var options = optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]);\n    _this._panner = _this.input = new Panner({\n      context: _this.context,\n      pan: options.pan,\n      channelCount: options.channelCount\n    });\n    _this.pan = _this._panner.pan;\n    _this._volume = _this.output = new Volume({\n      context: _this.context,\n      volume: options.volume\n    });\n    _this.volume = _this._volume.volume; // connections\n\n    _this._panner.connect(_this._volume);\n\n    _this.mute = options.mute;\n    readOnly(_assertThisInitialized(_this), [\"pan\", \"volume\"]);\n    return _this;\n  }\n\n  _createClass(PanVol, [{\n    key: \"mute\",\n    get:\n    /**\n     * Mute/unmute the volume\n     */\n    function get() {\n      return this._volume.mute;\n    },\n    set: function set(mute) {\n      this._volume.mute = mute;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(PanVol.prototype), \"dispose\", this).call(this);\n\n      this._panner.dispose();\n\n      this.pan.dispose();\n\n      this._volume.dispose();\n\n      this.volume.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(ToneAudioNode.getDefaults(), {\n        mute: false,\n        pan: 0,\n        volume: 0,\n        channelCount: 1\n      });\n    }\n  }]);\n\n  return PanVol;\n}(ToneAudioNode);","map":{"version":3,"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,2BAAzB;AAEA,SAAgCC,aAAhC,QAA2E,kCAA3E;AAEA,SAASC,oBAAT,QAAqC,0BAArC;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,MAAT,QAAuB,UAAvB;AASA;;;;;;;;;AAQA,WAAaC,MAAb;AAAA;;AAAA;;AAmCC;AAAA;;AAAA;;AAEC,8BAAMH,oBAAoB,CAACG,MAAM,CAACC,WAAP,EAAD,EAAuBC,SAAvB,EAAkC,CAAC,KAAD,EAAQ,QAAR,CAAlC,CAA1B;AAnCQ,iBAAe,QAAf;AAoCR,QAAMC,OAAO,GAAGN,oBAAoB,CAACG,MAAM,CAACC,WAAP,EAAD,EAAuBC,SAAvB,EAAkC,CAAC,KAAD,EAAQ,QAAR,CAAlC,CAApC;AAEA,UAAKE,OAAL,GAAe,MAAKC,KAAL,GAAa,IAAIP,MAAJ,CAAW;AACtCQ,aAAO,EAAE,MAAKA,OADwB;AAEtCC,SAAG,EAAEJ,OAAO,CAACI,GAFyB;AAGtCC,kBAAY,EAAEL,OAAO,CAACK;AAHgB,KAAX,CAA5B;AAKA,UAAKD,GAAL,GAAW,MAAKH,OAAL,CAAaG,GAAxB;AACA,UAAKE,OAAL,GAAe,MAAKC,MAAL,GAAc,IAAIX,MAAJ,CAAW;AACvCO,aAAO,EAAE,MAAKA,OADyB;AAEvCK,YAAM,EAAER,OAAO,CAACQ;AAFuB,KAAX,CAA7B;AAIA,UAAKA,MAAL,GAAc,MAAKF,OAAL,CAAaE,MAA3B,CAfD,CAiBC;;AACA,UAAKP,OAAL,CAAaQ,OAAb,CAAqB,MAAKH,OAA1B;;AACA,UAAKI,IAAL,GAAYV,OAAO,CAACU,IAApB;AAEAlB,YAAQ,gCAAO,CAAC,KAAD,EAAQ,QAAR,CAAP,CAAR;AArBD;AAsBC;;AAzDF;AAAA;AAAA;AAoEC;;;AAGA,mBAAQ;AACP,aAAO,KAAKc,OAAL,CAAaI,IAApB;AACA,KAzEF;AAAA,SA0EC,aAASA,IAAT,EAAa;AACZ,WAAKJ,OAAL,CAAaI,IAAb,GAAoBA,IAApB;AACA;AA5EF;AAAA;AAAA,WA8EC,mBAAO;AACN;;AACA,WAAKT,OAAL,CAAaU,OAAb;;AACA,WAAKP,GAAL,CAASO,OAAT;;AACA,WAAKL,OAAL,CAAaK,OAAb;;AACA,WAAKH,MAAL,CAAYG,OAAZ;AACA,aAAO,IAAP;AACA;AArFF;AAAA;AAAA,WA2DC,uBAAkB;AACjB,aAAOC,MAAM,CAACC,MAAP,CAAcpB,aAAa,CAACK,WAAd,EAAd,EAA2C;AACjDY,YAAI,EAAE,KAD2C;AAEjDN,WAAG,EAAE,CAF4C;AAGjDI,cAAM,EAAE,CAHyC;AAIjDH,oBAAY,EAAE;AAJmC,OAA3C,CAAP;AAMA;AAlEF;;AAAA;AAAA,EAA4BZ,aAA5B","names":["readOnly","ToneAudioNode","optionsFromArguments","Panner","Volume","PanVol","getDefaults","arguments","options","_panner","input","context","pan","channelCount","_volume","output","volume","connect","mute","dispose","Object","assign"],"sourceRoot":"","sources":["../../../../Tone/component/channel/PanVol.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}