{"ast":null,"code":"export var createCacheTestResult = function createCacheTestResult(ongoingTests, testResults) {\n  return function (tester, test) {\n    var cachedTestResult = testResults.get(tester);\n\n    if (cachedTestResult !== undefined) {\n      return cachedTestResult;\n    }\n\n    var ongoingTest = ongoingTests.get(tester);\n\n    if (ongoingTest !== undefined) {\n      return ongoingTest;\n    }\n\n    try {\n      var synchronousTestResult = test();\n\n      if (synchronousTestResult instanceof Promise) {\n        ongoingTests.set(tester, synchronousTestResult);\n        return synchronousTestResult.catch(function () {\n          return false;\n        }).then(function (finalTestResult) {\n          ongoingTests.delete(tester);\n          testResults.set(tester, finalTestResult);\n          return finalTestResult;\n        });\n      }\n\n      testResults.set(tester, synchronousTestResult);\n      return synchronousTestResult;\n    } catch (_unused) {\n      testResults.set(tester, false);\n      return false;\n    }\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,qBAAqB,GAA4B,SAAjDA,qBAAiD,CAACC,YAAD,EAAeC,WAAf,EAA8B;AACxF,SAAO,UAACC,MAAD,EAASC,IAAT,EAAiB;AACpB,QAAMC,gBAAgB,GAAGH,WAAW,CAACI,GAAZ,CAAgBH,MAAhB,CAAzB;;AAEA,QAAIE,gBAAgB,KAAKE,SAAzB,EAAoC;AAChC,aAAOF,gBAAP;AACH;;AAED,QAAMG,WAAW,GAAGP,YAAY,CAACK,GAAb,CAAiBH,MAAjB,CAApB;;AAEA,QAAIK,WAAW,KAAKD,SAApB,EAA+B;AAC3B,aAAOC,WAAP;AACH;;AAED,QAAI;AACA,UAAMC,qBAAqB,GAAGL,IAAI,EAAlC;;AAEA,UAAIK,qBAAqB,YAAYC,OAArC,EAA8C;AAC1CT,oBAAY,CAACU,GAAb,CAAiBR,MAAjB,EAAyBM,qBAAzB;AAEA,eAAOA,qBAAqB,CACvBG,KADE,CACI;AAAA,iBAAM,KAAN;AAAA,SADJ,EAEFC,IAFE,CAEG,UAACC,eAAD,EAAoB;AACtBb,sBAAY,CAACc,MAAb,CAAoBZ,MAApB;AACAD,qBAAW,CAACS,GAAZ,CAAgBR,MAAhB,EAAwBW,eAAxB;AAEA,iBAAOA,eAAP;AACH,SAPE,CAAP;AAQH;;AAEDZ,iBAAW,CAACS,GAAZ,CAAgBR,MAAhB,EAAwBM,qBAAxB;AAEA,aAAOA,qBAAP;AACH,KAnBD,CAmBE,gBAAM;AACJP,iBAAW,CAACS,GAAZ,CAAgBR,MAAhB,EAAwB,KAAxB;AAEA,aAAO,KAAP;AACH;AACJ,GArCD;AAsCH,CAvCM","names":["createCacheTestResult","ongoingTests","testResults","tester","test","cachedTestResult","get","undefined","ongoingTest","synchronousTestResult","Promise","set","catch","then","finalTestResult","delete"],"sourceRoot":"","sources":["../../../src/factories/cache-test-result.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}