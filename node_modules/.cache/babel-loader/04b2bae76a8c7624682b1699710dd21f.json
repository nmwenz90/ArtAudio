{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Merge brings multiple mono input channels into a single multichannel output channel.\n *\n * @example\n * const merge = new Tone.Merge().toDestination();\n * // routing a sine tone in the left channel\n * const osc = new Tone.Oscillator().connect(merge, 0, 0).start();\n * // and noise in the right channel\n * const noise = new Tone.Noise().connect(merge, 0, 1).start();;\n * @category Component\n */\n\nexport var Merge = /*#__PURE__*/function (_ToneAudioNode) {\n  _inherits(Merge, _ToneAudioNode);\n\n  var _super = _createSuper(Merge);\n\n  function Merge() {\n    var _this;\n\n    _classCallCheck(this, Merge);\n\n    _this = _super.call(this, optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]));\n    _this.name = \"Merge\";\n    var options = optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]);\n    _this._merger = _this.output = _this.input = _this.context.createChannelMerger(options.channels);\n    return _this;\n  }\n\n  _createClass(Merge, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Merge.prototype), \"dispose\", this).call(this);\n\n      this._merger.disconnect();\n\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(ToneAudioNode.getDefaults(), {\n        channels: 2\n      });\n    }\n  }]);\n\n  return Merge;\n}(ToneAudioNode);","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,aAAT,QAAoD,kCAApD;AAEA,SAASC,oBAAT,QAAqC,0BAArC;AAMA;;;;;;;;;;;;AAWA,WAAaC,KAAb;AAAA;;AAAA;;AAwBC;AAAA;;AAAA;;AACC,8BAAMD,oBAAoB,CAACC,KAAK,CAACC,WAAN,EAAD,EAAsBC,SAAtB,EAAiC,CAAC,UAAD,CAAjC,CAA1B;AAvBQ,iBAAe,OAAf;AAwBR,QAAMC,OAAO,GAAGJ,oBAAoB,CAACC,KAAK,CAACC,WAAN,EAAD,EAAsBC,SAAtB,EAAiC,CAAC,UAAD,CAAjC,CAApC;AAEA,UAAKE,OAAL,GAAe,MAAKC,MAAL,GAAc,MAAKC,KAAL,GAAa,MAAKC,OAAL,CAAaC,mBAAb,CAAiCL,OAAO,CAACM,QAAzC,CAA1C;AAJD;AAKC;;AA7BF;AAAA;AAAA,WAqCC,mBAAO;AACN;;AACA,WAAKL,OAAL,CAAaM,UAAb;;AACA,aAAO,IAAP;AACA;AAzCF;AAAA;AAAA,WA+BC,uBAAkB;AACjB,aAAOC,MAAM,CAACC,MAAP,CAAcd,aAAa,CAACG,WAAd,EAAd,EAA2C;AACjDQ,gBAAQ,EAAE;AADuC,OAA3C,CAAP;AAGA;AAnCF;;AAAA;AAAA,EAA2BX,aAA3B","names":["ToneAudioNode","optionsFromArguments","Merge","getDefaults","arguments","options","_merger","output","input","context","createChannelMerger","channels","disconnect","Object","assign"],"sourceRoot":"","sources":["../../../../Tone/component/channel/Merge.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}