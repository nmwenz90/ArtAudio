{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nexport var createAudioParamRenderer = function createAudioParamRenderer(automationEventList) {\n  return {\n    replay: function replay(audioParam) {\n      var _iterator = _createForOfIteratorHelper(automationEventList),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var automationEvent = _step.value;\n\n          if (automationEvent.type === 'exponentialRampToValue') {\n            var endTime = automationEvent.endTime,\n                value = automationEvent.value;\n            audioParam.exponentialRampToValueAtTime(value, endTime);\n          } else if (automationEvent.type === 'linearRampToValue') {\n            var _endTime = automationEvent.endTime,\n                _value = automationEvent.value;\n            audioParam.linearRampToValueAtTime(_value, _endTime);\n          } else if (automationEvent.type === 'setTarget') {\n            var startTime = automationEvent.startTime,\n                target = automationEvent.target,\n                timeConstant = automationEvent.timeConstant;\n            audioParam.setTargetAtTime(target, startTime, timeConstant);\n          } else if (automationEvent.type === 'setValue') {\n            var _startTime = automationEvent.startTime,\n                _value2 = automationEvent.value;\n            audioParam.setValueAtTime(_value2, _startTime);\n          } else if (automationEvent.type === 'setValueCurve') {\n            var duration = automationEvent.duration,\n                _startTime2 = automationEvent.startTime,\n                values = automationEvent.values;\n            audioParam.setValueCurveAtTime(values, _startTime2, duration);\n          } else {\n            throw new Error(\"Can't apply an unknown automation.\");\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  };\n};","map":{"version":3,"mappings":";AAEA,OAAO,IAAMA,wBAAwB,GAA+B,SAAvDA,wBAAuD,CAACC,mBAAD,EAAwB;AACxF,SAAO;AACHC,UADG,kBACIC,UADJ,EACiC;AAAA,iDACFF,mBADE;AAAA;;AAAA;AAChC,4DAAmD;AAAA,cAAxCG,eAAwC;;AAC/C,cAAIA,eAAe,CAACC,IAAhB,KAAyB,wBAA7B,EAAuD;AACnD,gBAAQC,OAAR,GAA2BF,eAA3B,CAAQE,OAAR;AAAA,gBAAiBC,KAAjB,GAA2BH,eAA3B,CAAiBG,KAAjB;AAEAJ,sBAAU,CAACK,4BAAX,CAAwCD,KAAxC,EAA+CD,OAA/C;AACH,WAJD,MAIO,IAAIF,eAAe,CAACC,IAAhB,KAAyB,mBAA7B,EAAkD;AACrD,gBAAQC,QAAR,GAA2BF,eAA3B,CAAQE,OAAR;AAAA,gBAAiBC,MAAjB,GAA2BH,eAA3B,CAAiBG,KAAjB;AAEAJ,sBAAU,CAACM,uBAAX,CAAmCF,MAAnC,EAA0CD,QAA1C;AACH,WAJM,MAIA,IAAIF,eAAe,CAACC,IAAhB,KAAyB,WAA7B,EAA0C;AAC7C,gBAAQK,SAAR,GAA4CN,eAA5C,CAAQM,SAAR;AAAA,gBAAmBC,MAAnB,GAA4CP,eAA5C,CAAmBO,MAAnB;AAAA,gBAA2BC,YAA3B,GAA4CR,eAA5C,CAA2BQ,YAA3B;AAEAT,sBAAU,CAACU,eAAX,CAA2BF,MAA3B,EAAmCD,SAAnC,EAA8CE,YAA9C;AACH,WAJM,MAIA,IAAIR,eAAe,CAACC,IAAhB,KAAyB,UAA7B,EAAyC;AAC5C,gBAAQK,UAAR,GAA6BN,eAA7B,CAAQM,SAAR;AAAA,gBAAmBH,OAAnB,GAA6BH,eAA7B,CAAmBG,KAAnB;AAEAJ,sBAAU,CAACW,cAAX,CAA0BP,OAA1B,EAAiCG,UAAjC;AACH,WAJM,MAIA,IAAIN,eAAe,CAACC,IAAhB,KAAyB,eAA7B,EAA8C;AACjD,gBAAQU,QAAR,GAAwCX,eAAxC,CAAQW,QAAR;AAAA,gBAAkBL,WAAlB,GAAwCN,eAAxC,CAAkBM,SAAlB;AAAA,gBAA6BM,MAA7B,GAAwCZ,eAAxC,CAA6BY,MAA7B;AAEAb,sBAAU,CAACc,mBAAX,CAA+BD,MAA/B,EAAuCN,WAAvC,EAAkDK,QAAlD;AACH,WAJM,MAIA;AACH,kBAAM,IAAIG,KAAJ,CAAU,oCAAV,CAAN;AACH;AACJ;AAzB+B;AAAA;AAAA;AAAA;AAAA;AA0BnC;AA3BE,GAAP;AA6BH,CA9BM","names":["createAudioParamRenderer","automationEventList","replay","audioParam","automationEvent","type","endTime","value","exponentialRampToValueAtTime","linearRampToValueAtTime","startTime","target","timeConstant","setTargetAtTime","setValueAtTime","duration","values","setValueCurveAtTime","Error"],"sourceRoot":"","sources":["../../../src/factories/audio-param-renderer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}