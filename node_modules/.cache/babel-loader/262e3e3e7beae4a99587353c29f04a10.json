{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { dbToGain, gainToDb } from \"../type/Conversions\";\nimport { isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { ToneWithContext } from \"./ToneWithContext\";\nimport { EQ } from \"../util/Math\";\nimport { assert, assertRange } from \"../util/Debug\";\n/**\n * Param wraps the native Web Audio's AudioParam to provide\n * additional unit conversion functionality. It also\n * serves as a base-class for classes which have a single,\n * automatable parameter.\n * @category Core\n */\n\nexport var Param = /*#__PURE__*/function (_ToneWithContext) {\n  _inherits(Param, _ToneWithContext);\n\n  var _super = _createSuper(Param);\n\n  function Param() {\n    var _this;\n\n    _classCallCheck(this, Param);\n\n    _this = _super.call(this, optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]));\n    _this.name = \"Param\";\n    _this.overridden = false;\n    /**\n     * The minimum output value\n     */\n\n    _this._minOutput = 1e-7;\n    var options = optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]);\n    assert(isDefined(options.param) && (isAudioParam(options.param) || options.param instanceof Param), \"param must be an AudioParam\");\n\n    while (!isAudioParam(options.param)) {\n      options.param = options.param._param;\n    }\n\n    _this._swappable = isDefined(options.swappable) ? options.swappable : false;\n\n    if (_this._swappable) {\n      _this.input = _this.context.createGain(); // initialize\n\n      _this._param = options.param;\n\n      _this.input.connect(_this._param);\n    } else {\n      _this._param = _this.input = options.param;\n    }\n\n    _this._events = new Timeline(1000);\n    _this._initialValue = _this._param.defaultValue;\n    _this.units = options.units;\n    _this.convert = options.convert;\n    _this._minValue = options.minValue;\n    _this._maxValue = options.maxValue; // if the value is defined, set it immediately\n\n    if (isDefined(options.value) && options.value !== _this._toType(_this._initialValue)) {\n      _this.setValueAtTime(options.value, 0);\n    }\n\n    return _this;\n  }\n\n  _createClass(Param, [{\n    key: \"value\",\n    get: function get() {\n      var now = this.now();\n      return this.getValueAtTime(now);\n    },\n    set: function set(value) {\n      this.cancelScheduledValues(this.now());\n      this.setValueAtTime(value, this.now());\n    }\n  }, {\n    key: \"minValue\",\n    get: function get() {\n      // if it's not the default minValue, return it\n      if (isDefined(this._minValue)) {\n        return this._minValue;\n      } else if (this.units === \"time\" || this.units === \"frequency\" || this.units === \"normalRange\" || this.units === \"positive\" || this.units === \"transportTime\" || this.units === \"ticks\" || this.units === \"bpm\" || this.units === \"hertz\" || this.units === \"samples\") {\n        return 0;\n      } else if (this.units === \"audioRange\") {\n        return -1;\n      } else if (this.units === \"decibels\") {\n        return -Infinity;\n      } else {\n        return this._param.minValue;\n      }\n    }\n  }, {\n    key: \"maxValue\",\n    get: function get() {\n      if (isDefined(this._maxValue)) {\n        return this._maxValue;\n      } else if (this.units === \"normalRange\" || this.units === \"audioRange\") {\n        return 1;\n      } else {\n        return this._param.maxValue;\n      }\n    }\n    /**\n     * Type guard based on the unit name\n     */\n\n  }, {\n    key: \"_is\",\n    value: function _is(arg, type) {\n      return this.units === type;\n    }\n    /**\n     * Make sure the value is always in the defined range\n     */\n\n  }, {\n    key: \"_assertRange\",\n    value: function _assertRange(value) {\n      if (isDefined(this.maxValue) && isDefined(this.minValue)) {\n        assertRange(value, this._fromType(this.minValue), this._fromType(this.maxValue));\n      }\n\n      return value;\n    }\n    /**\n     * Convert the given value from the type specified by Param.units\n     * into the destination value (such as Gain or Frequency).\n     */\n\n  }, {\n    key: \"_fromType\",\n    value: function _fromType(val) {\n      if (this.convert && !this.overridden) {\n        if (this._is(val, \"time\")) {\n          return this.toSeconds(val);\n        } else if (this._is(val, \"decibels\")) {\n          return dbToGain(val);\n        } else if (this._is(val, \"frequency\")) {\n          return this.toFrequency(val);\n        } else {\n          return val;\n        }\n      } else if (this.overridden) {\n        // if it's overridden, should only schedule 0s\n        return 0;\n      } else {\n        return val;\n      }\n    }\n    /**\n     * Convert the parameters value into the units specified by Param.units.\n     */\n\n  }, {\n    key: \"_toType\",\n    value: function _toType(val) {\n      if (this.convert && this.units === \"decibels\") {\n        return gainToDb(val);\n      } else {\n        return val;\n      }\n    } //-------------------------------------\n    // ABSTRACT PARAM INTERFACE\n    // all docs are generated from ParamInterface.ts\n    //-------------------------------------\n\n  }, {\n    key: \"setValueAtTime\",\n    value: function setValueAtTime(value, time) {\n      var computedTime = this.toSeconds(time);\n\n      var numericValue = this._fromType(value);\n\n      assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to setValueAtTime: \".concat(JSON.stringify(value), \", \").concat(JSON.stringify(time)));\n\n      this._assertRange(numericValue);\n\n      this.log(this.units, \"setValueAtTime\", value, computedTime);\n\n      this._events.add({\n        time: computedTime,\n        type: \"setValueAtTime\",\n        value: numericValue\n      });\n\n      this._param.setValueAtTime(numericValue, computedTime);\n\n      return this;\n    }\n  }, {\n    key: \"getValueAtTime\",\n    value: function getValueAtTime(time) {\n      var computedTime = Math.max(this.toSeconds(time), 0);\n\n      var after = this._events.getAfter(computedTime);\n\n      var before = this._events.get(computedTime);\n\n      var value = this._initialValue; // if it was set by\n\n      if (before === null) {\n        value = this._initialValue;\n      } else if (before.type === \"setTargetAtTime\" && (after === null || after.type === \"setValueAtTime\")) {\n        var previous = this._events.getBefore(before.time);\n\n        var previousVal;\n\n        if (previous === null) {\n          previousVal = this._initialValue;\n        } else {\n          previousVal = previous.value;\n        }\n\n        if (before.type === \"setTargetAtTime\") {\n          value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);\n        }\n      } else if (after === null) {\n        value = before.value;\n      } else if (after.type === \"linearRampToValueAtTime\" || after.type === \"exponentialRampToValueAtTime\") {\n        var beforeValue = before.value;\n\n        if (before.type === \"setTargetAtTime\") {\n          var _previous = this._events.getBefore(before.time);\n\n          if (_previous === null) {\n            beforeValue = this._initialValue;\n          } else {\n            beforeValue = _previous.value;\n          }\n        }\n\n        if (after.type === \"linearRampToValueAtTime\") {\n          value = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n        } else {\n          value = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n        }\n      } else {\n        value = before.value;\n      }\n\n      return this._toType(value);\n    }\n  }, {\n    key: \"setRampPoint\",\n    value: function setRampPoint(time) {\n      time = this.toSeconds(time);\n      var currentVal = this.getValueAtTime(time);\n      this.cancelAndHoldAtTime(time);\n\n      if (this._fromType(currentVal) === 0) {\n        currentVal = this._toType(this._minOutput);\n      }\n\n      this.setValueAtTime(currentVal, time);\n      return this;\n    }\n  }, {\n    key: \"linearRampToValueAtTime\",\n    value: function linearRampToValueAtTime(value, endTime) {\n      var numericValue = this._fromType(value);\n\n      var computedTime = this.toSeconds(endTime);\n      assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to linearRampToValueAtTime: \".concat(JSON.stringify(value), \", \").concat(JSON.stringify(endTime)));\n\n      this._assertRange(numericValue);\n\n      this._events.add({\n        time: computedTime,\n        type: \"linearRampToValueAtTime\",\n        value: numericValue\n      });\n\n      this.log(this.units, \"linearRampToValueAtTime\", value, computedTime);\n\n      this._param.linearRampToValueAtTime(numericValue, computedTime);\n\n      return this;\n    }\n  }, {\n    key: \"exponentialRampToValueAtTime\",\n    value: function exponentialRampToValueAtTime(value, endTime) {\n      var numericValue = this._fromType(value); // the value can't be 0\n\n\n      numericValue = EQ(numericValue, 0) ? this._minOutput : numericValue;\n\n      this._assertRange(numericValue);\n\n      var computedTime = this.toSeconds(endTime);\n      assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to exponentialRampToValueAtTime: \".concat(JSON.stringify(value), \", \").concat(JSON.stringify(endTime))); // store the event\n\n      this._events.add({\n        time: computedTime,\n        type: \"exponentialRampToValueAtTime\",\n        value: numericValue\n      });\n\n      this.log(this.units, \"exponentialRampToValueAtTime\", value, computedTime);\n\n      this._param.exponentialRampToValueAtTime(numericValue, computedTime);\n\n      return this;\n    }\n  }, {\n    key: \"exponentialRampTo\",\n    value: function exponentialRampTo(value, rampTime, startTime) {\n      startTime = this.toSeconds(startTime);\n      this.setRampPoint(startTime);\n      this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n      return this;\n    }\n  }, {\n    key: \"linearRampTo\",\n    value: function linearRampTo(value, rampTime, startTime) {\n      startTime = this.toSeconds(startTime);\n      this.setRampPoint(startTime);\n      this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n      return this;\n    }\n  }, {\n    key: \"targetRampTo\",\n    value: function targetRampTo(value, rampTime, startTime) {\n      startTime = this.toSeconds(startTime);\n      this.setRampPoint(startTime);\n      this.exponentialApproachValueAtTime(value, startTime, rampTime);\n      return this;\n    }\n  }, {\n    key: \"exponentialApproachValueAtTime\",\n    value: function exponentialApproachValueAtTime(value, time, rampTime) {\n      time = this.toSeconds(time);\n      rampTime = this.toSeconds(rampTime);\n      var timeConstant = Math.log(rampTime + 1) / Math.log(200);\n      this.setTargetAtTime(value, time, timeConstant); // at 90% start a linear ramp to the final value\n\n      this.cancelAndHoldAtTime(time + rampTime * 0.9);\n      this.linearRampToValueAtTime(value, time + rampTime);\n      return this;\n    }\n  }, {\n    key: \"setTargetAtTime\",\n    value: function setTargetAtTime(value, startTime, timeConstant) {\n      var numericValue = this._fromType(value); // The value will never be able to approach without timeConstant > 0.\n\n\n      assert(isFinite(timeConstant) && timeConstant > 0, \"timeConstant must be a number greater than 0\");\n      var computedTime = this.toSeconds(startTime);\n\n      this._assertRange(numericValue);\n\n      assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to setTargetAtTime: \".concat(JSON.stringify(value), \", \").concat(JSON.stringify(startTime)));\n\n      this._events.add({\n        constant: timeConstant,\n        time: computedTime,\n        type: \"setTargetAtTime\",\n        value: numericValue\n      });\n\n      this.log(this.units, \"setTargetAtTime\", value, computedTime, timeConstant);\n\n      this._param.setTargetAtTime(numericValue, computedTime, timeConstant);\n\n      return this;\n    }\n  }, {\n    key: \"setValueCurveAtTime\",\n    value: function setValueCurveAtTime(values, startTime, duration) {\n      var scaling = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n      duration = this.toSeconds(duration);\n      startTime = this.toSeconds(startTime);\n      var startingValue = this._fromType(values[0]) * scaling;\n      this.setValueAtTime(this._toType(startingValue), startTime);\n      var segTime = duration / (values.length - 1);\n\n      for (var i = 1; i < values.length; i++) {\n        var numericValue = this._fromType(values[i]) * scaling;\n        this.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"cancelScheduledValues\",\n    value: function cancelScheduledValues(time) {\n      var computedTime = this.toSeconds(time);\n      assert(isFinite(computedTime), \"Invalid argument to cancelScheduledValues: \".concat(JSON.stringify(time)));\n\n      this._events.cancel(computedTime);\n\n      this._param.cancelScheduledValues(computedTime);\n\n      this.log(this.units, \"cancelScheduledValues\", computedTime);\n      return this;\n    }\n  }, {\n    key: \"cancelAndHoldAtTime\",\n    value: function cancelAndHoldAtTime(time) {\n      var computedTime = this.toSeconds(time);\n\n      var valueAtTime = this._fromType(this.getValueAtTime(computedTime)); // remove the schedule events\n\n\n      assert(isFinite(computedTime), \"Invalid argument to cancelAndHoldAtTime: \".concat(JSON.stringify(time)));\n      this.log(this.units, \"cancelAndHoldAtTime\", computedTime, \"value=\" + valueAtTime); // if there is an event at the given computedTime\n      // and that even is not a \"set\"\n\n      var before = this._events.get(computedTime);\n\n      var after = this._events.getAfter(computedTime);\n\n      if (before && EQ(before.time, computedTime)) {\n        // remove everything after\n        if (after) {\n          this._param.cancelScheduledValues(after.time);\n\n          this._events.cancel(after.time);\n        } else {\n          this._param.cancelAndHoldAtTime(computedTime);\n\n          this._events.cancel(computedTime + this.sampleTime);\n        }\n      } else if (after) {\n        this._param.cancelScheduledValues(after.time); // cancel the next event(s)\n\n\n        this._events.cancel(after.time);\n\n        if (after.type === \"linearRampToValueAtTime\") {\n          this.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);\n        } else if (after.type === \"exponentialRampToValueAtTime\") {\n          this.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);\n        }\n      } // set the value at the given time\n\n\n      this._events.add({\n        time: computedTime,\n        type: \"setValueAtTime\",\n        value: valueAtTime\n      });\n\n      this._param.setValueAtTime(valueAtTime, computedTime);\n\n      return this;\n    }\n  }, {\n    key: \"rampTo\",\n    value: function rampTo(value) {\n      var rampTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.1;\n      var startTime = arguments.length > 2 ? arguments[2] : undefined;\n\n      if (this.units === \"frequency\" || this.units === \"bpm\" || this.units === \"decibels\") {\n        this.exponentialRampTo(value, rampTime, startTime);\n      } else {\n        this.linearRampTo(value, rampTime, startTime);\n      }\n\n      return this;\n    }\n    /**\n     * Apply all of the previously scheduled events to the passed in Param or AudioParam.\n     * The applied values will start at the context's current time and schedule\n     * all of the events which are scheduled on this Param onto the passed in param.\n     */\n\n  }, {\n    key: \"apply\",\n    value: function apply(param) {\n      var now = this.context.currentTime; // set the param's value at the current time and schedule everything else\n\n      param.setValueAtTime(this.getValueAtTime(now), now); // if the previous event was a curve, then set the rest of it\n\n      var previousEvent = this._events.get(now);\n\n      if (previousEvent && previousEvent.type === \"setTargetAtTime\") {\n        // approx it until the next event with linear ramps\n        var nextEvent = this._events.getAfter(previousEvent.time); // or for 2 seconds if there is no event\n\n\n        var endTime = nextEvent ? nextEvent.time : now + 2;\n        var subdivisions = (endTime - now) / 10;\n\n        for (var i = now; i < endTime; i += subdivisions) {\n          param.linearRampToValueAtTime(this.getValueAtTime(i), i);\n        }\n      }\n\n      this._events.forEachAfter(this.context.currentTime, function (event) {\n        if (event.type === \"cancelScheduledValues\") {\n          param.cancelScheduledValues(event.time);\n        } else if (event.type === \"setTargetAtTime\") {\n          param.setTargetAtTime(event.value, event.time, event.constant);\n        } else {\n          param[event.type](event.value, event.time);\n        }\n      });\n\n      return this;\n    }\n    /**\n     * Replace the Param's internal AudioParam. Will apply scheduled curves\n     * onto the parameter and replace the connections.\n     */\n\n  }, {\n    key: \"setParam\",\n    value: function setParam(param) {\n      assert(this._swappable, \"The Param must be assigned as 'swappable' in the constructor\");\n      var input = this.input;\n      input.disconnect(this._param);\n      this.apply(param);\n      this._param = param;\n      input.connect(this._param);\n      return this;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Param.prototype), \"dispose\", this).call(this);\n\n      this._events.dispose();\n\n      return this;\n    }\n  }, {\n    key: \"defaultValue\",\n    get: function get() {\n      return this._toType(this._param.defaultValue);\n    } //-------------------------------------\n    // \tAUTOMATION CURVE CALCULATIONS\n    // \tMIT License, copyright (c) 2014 Jordan Santell\n    //-------------------------------------\n    // Calculates the the value along the curve produced by setTargetAtTime\n\n  }, {\n    key: \"_exponentialApproach\",\n    value: function _exponentialApproach(t0, v0, v1, timeConstant, t) {\n      return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n    } // Calculates the the value along the curve produced by linearRampToValueAtTime\n\n  }, {\n    key: \"_linearInterpolate\",\n    value: function _linearInterpolate(t0, v0, t1, v1, t) {\n      return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n    } // Calculates the the value along the curve produced by exponentialRampToValueAtTime\n\n  }, {\n    key: \"_exponentialInterpolate\",\n    value: function _exponentialInterpolate(t0, v0, t1, v1, t) {\n      return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(ToneWithContext.getDefaults(), {\n        convert: true,\n        units: \"number\"\n      });\n    }\n  }]);\n\n  return Param;\n}(ToneWithContext);","map":{"version":3,"mappings":"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","names":["dbToGain","gainToDb","isAudioParam","optionsFromArguments","Timeline","isDefined","ToneWithContext","EQ","assert","assertRange","Param","getDefaults","arguments","options","param","_param","_swappable","swappable","input","context","createGain","connect","_events","_initialValue","defaultValue","units","convert","_minValue","minValue","_maxValue","maxValue","value","_toType","setValueAtTime","now","getValueAtTime","cancelScheduledValues","Infinity","arg","type","_fromType","val","overridden","_is","toSeconds","toFrequency","time","computedTime","numericValue","isFinite","JSON","stringify","_assertRange","log","add","Math","max","after","getAfter","before","get","previous","getBefore","previousVal","_exponentialApproach","constant","beforeValue","_linearInterpolate","_exponentialInterpolate","currentVal","cancelAndHoldAtTime","_minOutput","endTime","linearRampToValueAtTime","exponentialRampToValueAtTime","rampTime","startTime","setRampPoint","exponentialApproachValueAtTime","timeConstant","setTargetAtTime","values","duration","scaling","startingValue","segTime","length","i","cancel","valueAtTime","sampleTime","exponentialRampTo","linearRampTo","currentTime","previousEvent","nextEvent","subdivisions","forEachAfter","event","disconnect","apply","dispose","t0","v0","v1","t","exp","t1","pow","Object","assign"],"sourceRoot":"","sources":["../../../../Tone/core/context/Param.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}