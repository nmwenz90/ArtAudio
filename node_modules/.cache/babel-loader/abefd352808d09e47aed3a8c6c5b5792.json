{"ast":null,"code":"/*!\n * @pixi/mixin-get-global-position - v6.3.0\n * Compiled Wed, 23 Mar 2022 18:58:56 UTC\n *\n * @pixi/mixin-get-global-position is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { DisplayObject } from '@pixi/display';\nimport { Point } from '@pixi/math';\n/**\n * Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.\n *\n * @method getGlobalPosition\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.Point} [point=new PIXI.Point()] - The point to write the global value to.\n * @param {boolean} [skipUpdate=false] - Setting to true will stop the transforms of the scene graph from\n *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n *  nice performance boost.\n * @return {PIXI.Point} The updated point.\n */\n\nDisplayObject.prototype.getGlobalPosition = function getGlobalPosition(point, skipUpdate) {\n  if (point === void 0) {\n    point = new Point();\n  }\n\n  if (skipUpdate === void 0) {\n    skipUpdate = false;\n  }\n\n  if (this.parent) {\n    this.parent.toGlobal(this.position, point, skipUpdate);\n  } else {\n    point.x = this.position.x;\n    point.y = this.position.y;\n  }\n\n  return point;\n};","map":{"version":3,"mappings":";;;;;;;;;AAGA;;;;;;;;;;;;AAWAA,aAAa,CAACC,SAAd,CAAwBC,iBAAxB,GAA4C,SAASA,iBAAT,CAA2BC,KAA3B,EAAuDC,UAAvD,EAAyE;AAA9C;AAAAD,gBAAmBE,KAAnB;AAA0B;;AAAE;AAAAD;AAAkB;;AAEjH,MAAI,KAAKE,MAAT,EACA;AACI,SAAKA,MAAL,CAAYC,QAAZ,CAAqB,KAAKC,QAA1B,EAAoCL,KAApC,EAA2CC,UAA3C;AACH,GAHD,MAKA;AACID,SAAK,CAACM,CAAN,GAAU,KAAKD,QAAL,CAAcC,CAAxB;AACAN,SAAK,CAACO,CAAN,GAAU,KAAKF,QAAL,CAAcE,CAAxB;AACH;;AAED,SAAOP,KAAP;AACH,CAbD","names":["DisplayObject","prototype","getGlobalPosition","point","skipUpdate","Point","parent","toGlobal","position","x","y"],"sources":["../../src/index.ts"],"sourcesContent":["import { DisplayObject } from '@pixi/display';\nimport { Point } from '@pixi/math';\n\n/**\n * Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.\n *\n * @method getGlobalPosition\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.Point} [point=new PIXI.Point()] - The point to write the global value to.\n * @param {boolean} [skipUpdate=false] - Setting to true will stop the transforms of the scene graph from\n *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n *  nice performance boost.\n * @return {PIXI.Point} The updated point.\n */\nDisplayObject.prototype.getGlobalPosition = function getGlobalPosition(point: Point = new Point(), skipUpdate = false): Point\n{\n    if (this.parent)\n    {\n        this.parent.toGlobal(this.position, point, skipUpdate);\n    }\n    else\n    {\n        point.x = this.position.x;\n        point.y = this.position.y;\n    }\n\n    return point;\n};\n"]},"metadata":{},"sourceType":"module"}