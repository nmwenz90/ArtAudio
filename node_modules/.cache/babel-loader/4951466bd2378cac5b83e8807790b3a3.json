{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { AudioToGain } from \"../signal/AudioToGain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ModulationSynth } from \"./ModulationSynth\";\n/**\n * AMSynth uses the output of one Tone.Synth to modulate the\n * amplitude of another Tone.Synth. The harmonicity (the ratio between\n * the two signals) affects the timbre of the output signal greatly.\n * Read more about Amplitude Modulation Synthesis on\n * [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).\n *\n * @example\n * const synth = new Tone.AMSynth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"4n\");\n *\n * @category Instrument\n */\n\nexport var AMSynth = /*#__PURE__*/function (_ModulationSynth) {\n  _inherits(AMSynth, _ModulationSynth);\n\n  var _super = _createSuper(AMSynth);\n\n  function AMSynth() {\n    var _this;\n\n    _classCallCheck(this, AMSynth);\n\n    _this = _super.call(this, optionsFromArguments(AMSynth.getDefaults(), arguments));\n    _this.name = \"AMSynth\";\n    _this._modulationScale = new AudioToGain({\n      context: _this.context\n    }); // control the two voices frequency\n\n    _this.frequency.connect(_this._carrier.frequency);\n\n    _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);\n\n    _this.detune.fan(_this._carrier.detune, _this._modulator.detune);\n\n    _this._modulator.chain(_this._modulationScale, _this._modulationNode.gain);\n\n    _this._carrier.chain(_this._modulationNode, _this.output);\n\n    return _this;\n  }\n\n  _createClass(AMSynth, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(AMSynth.prototype), \"dispose\", this).call(this);\n\n      this._modulationScale.dispose();\n\n      return this;\n    }\n  }]);\n\n  return AMSynth;\n}(ModulationSynth);","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,uBAA5B;AAEA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,eAAT,QAAwD,mBAAxD;AAIA;;;;;;;;;;;;;;AAaA,WAAaC,OAAb;AAAA;;AAAA;;AAUC;AAAA;;AAAA;;AACC,8BAAMF,oBAAoB,CAACE,OAAO,CAACC,WAAR,EAAD,EAAwBC,SAAxB,CAA1B;AATQ,iBAAe,SAAf;AAWR,UAAKC,gBAAL,GAAwB,IAAIN,WAAJ,CAAgB;AACvCO,aAAO,EAAE,MAAKA;AADyB,KAAhB,CAAxB,CAHD,CAOC;;AACA,UAAKC,SAAL,CAAeC,OAAf,CAAuB,MAAKC,QAAL,CAAcF,SAArC;;AACA,UAAKA,SAAL,CAAeG,KAAf,CAAqB,MAAKC,WAA1B,EAAuC,MAAKC,UAAL,CAAgBL,SAAvD;;AACA,UAAKM,MAAL,CAAYC,GAAZ,CAAgB,MAAKL,QAAL,CAAcI,MAA9B,EAAsC,MAAKD,UAAL,CAAgBC,MAAtD;;AACA,UAAKD,UAAL,CAAgBF,KAAhB,CAAsB,MAAKL,gBAA3B,EAA6C,MAAKU,eAAL,CAAqBC,IAAlE;;AACA,UAAKP,QAAL,CAAcC,KAAd,CAAoB,MAAKK,eAAzB,EAA0C,MAAKE,MAA/C;;AAZD;AAaC;;AAvBF;AAAA;AAAA,WAyBC,mBAAO;AACN;;AACA,WAAKZ,gBAAL,CAAsBa,OAAtB;;AACA,aAAO,IAAP;AACA;AA7BF;;AAAA;AAAA,EAA6BjB,eAA7B","names":["AudioToGain","optionsFromArguments","ModulationSynth","AMSynth","getDefaults","arguments","_modulationScale","context","frequency","connect","_carrier","chain","harmonicity","_modulator","detune","fan","_modulationNode","gain","output","dispose"],"sourceRoot":"","sources":["../../../Tone/instrument/AMSynth.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}