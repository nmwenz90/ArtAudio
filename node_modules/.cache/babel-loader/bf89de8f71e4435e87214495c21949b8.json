{"ast":null,"code":"import _asyncToGenerator from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\";\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport var createDelayNodeRendererFactory = function createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {\n  return function (maxDelayTime) {\n    var renderedNativeDelayNodes = new WeakMap();\n\n    var createDelayNode = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(proxy, nativeOfflineAudioContext) {\n        var nativeDelayNode, nativeDelayNodeIsOwnedByContext, options;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                nativeDelayNode = getNativeAudioNode(proxy); // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n                nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n\n                if (!nativeDelayNodeIsOwnedByContext) {\n                  options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime: maxDelayTime\n                  };\n                  nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n                }\n\n                renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n\n                if (nativeDelayNodeIsOwnedByContext) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 7;\n                return renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n\n              case 7:\n                _context.next = 11;\n                break;\n\n              case 9:\n                _context.next = 11;\n                return connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n\n              case 11:\n                _context.next = 13;\n                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode);\n\n              case 13:\n                return _context.abrupt(\"return\", nativeDelayNode);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function createDelayNode(_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return {\n      render: function render(proxy, nativeOfflineAudioContext) {\n        var renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeDelayNode !== undefined) {\n          return Promise.resolve(renderedNativeDelayNode);\n        }\n\n        return createDelayNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};","map":{"version":3,"mappings":";;AAAA,SAASA,gBAAT,QAAiC,gCAAjC;AAIA,OAAO,IAAMC,8BAA8B,GAAqC,SAAnEA,8BAAmE,CAC5EC,iBAD4E,EAE5EC,qBAF4E,EAG5EC,kBAH4E,EAI5EC,gBAJ4E,EAK5EC,uBAL4E,EAM5E;AACA,SAAO,UAA+DC,YAA/D,EAAuF;AAC1F,QAAMC,wBAAwB,GAAG,IAAIC,OAAJ,EAAjC;;AAEA,QAAMC,eAAe;AAAA,0EAAG,iBAAOC,KAAP,EAA6BC,yBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,+BADgB,GACET,kBAAkB,CAAsBO,KAAtB,CADpB,EAGpB;;AACMG,+CAJc,GAIoBd,gBAAgB,CAACa,eAAD,EAAkBD,yBAAlB,CAJpC;;AAMpB,oBAAI,CAACE,+BAAL,EAAsC;AAC5BC,yBAD4B,GAClB;AACZC,gCAAY,EAAEH,eAAe,CAACG,YADlB;AAEZC,oCAAgB,EAAEJ,eAAe,CAACI,gBAFtB;AAGZC,yCAAqB,EAAEL,eAAe,CAACK,qBAH3B;AAIZC,6BAAS,EAAEN,eAAe,CAACM,SAAhB,CAA0BC,KAJzB;AAKZb,gCAAY,EAAZA;AALY,mBADkB;AASlCM,iCAAe,GAAGV,qBAAqB,CAACS,yBAAD,EAA4BG,OAA5B,CAAvC;AACH;;AAEDP,wCAAwB,CAACa,GAAzB,CAA6BT,yBAA7B,EAAwDC,eAAxD;;AAlBoB,oBAoBfC,+BApBe;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAqBVT,gBAAgB,CAACO,yBAAD,EAA4BD,KAAK,CAACQ,SAAlC,EAA6CN,eAAe,CAACM,SAA7D,CArBN;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAuBVjB,iBAAiB,CAACU,yBAAD,EAA4BD,KAAK,CAACQ,SAAlC,EAA6CN,eAAe,CAACM,SAA7D,CAvBP;;AAAA;AAAA;AAAA,uBA0Bdb,uBAAuB,CAACK,KAAD,EAAQC,yBAAR,EAAmCC,eAAnC,CA1BT;;AAAA;AAAA,iDA4BbA,eA5Ba;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAfH,eAAe;AAAA;AAAA;AAAA,OAArB;;AA+BA,WAAO;AACHY,YADG,kBACIX,KADJ,EAC0BC,yBAD1B,EAC+E;AAC9E,YAAMW,uBAAuB,GAAGf,wBAAwB,CAACgB,GAAzB,CAA6BZ,yBAA7B,CAAhC;;AAEA,YAAIW,uBAAuB,KAAKE,SAAhC,EAA2C;AACvC,iBAAOC,OAAO,CAACC,OAAR,CAAgBJ,uBAAhB,CAAP;AACH;;AAED,eAAOb,eAAe,CAACC,KAAD,EAAQC,yBAAR,CAAtB;AACH;AATE,KAAP;AAWH,GA7CD;AA8CH,CArDM","names":["isOwnedByContext","createDelayNodeRendererFactory","connectAudioParam","createNativeDelayNode","getNativeAudioNode","renderAutomation","renderInputsOfAudioNode","maxDelayTime","renderedNativeDelayNodes","WeakMap","createDelayNode","proxy","nativeOfflineAudioContext","nativeDelayNode","nativeDelayNodeIsOwnedByContext","options","channelCount","channelCountMode","channelInterpretation","delayTime","value","set","render","renderedNativeDelayNode","get","undefined","Promise","resolve"],"sourceRoot":"","sources":["../../../src/factories/delay-node-renderer-factory.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}