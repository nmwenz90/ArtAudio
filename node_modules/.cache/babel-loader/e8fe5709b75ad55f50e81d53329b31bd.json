{"ast":null,"code":"import _classCallCheck from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Split splits an incoming signal into the number of given channels.\n *\n * @example\n * const split = new Tone.Split();\n * // stereoSignal.connect(split);\n * @category Component\n */\n\nexport var Split = /*#__PURE__*/function (_ToneAudioNode) {\n  _inherits(Split, _ToneAudioNode);\n\n  var _super = _createSuper(Split);\n\n  function Split() {\n    var _this;\n\n    _classCallCheck(this, Split);\n\n    _this = _super.call(this, optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]));\n    _this.name = \"Split\";\n    var options = optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]);\n    _this._splitter = _this.input = _this.output = _this.context.createChannelSplitter(options.channels);\n    _this._internalChannels = [_this._splitter];\n    return _this;\n  }\n\n  _createClass(Split, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Split.prototype), \"dispose\", this).call(this);\n\n      this._splitter.disconnect();\n\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(ToneAudioNode.getDefaults(), {\n        channels: 2\n      });\n    }\n  }]);\n\n  return Split;\n}(ToneAudioNode);","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,aAAT,QAAoD,kCAApD;AACA,SAASC,oBAAT,QAAqC,0BAArC;AAMA;;;;;;;;;AAQA,WAAaC,KAAb;AAAA;;AAAA;;AAgBC;AAAA;;AAAA;;AACC,8BAAMD,oBAAoB,CAACC,KAAK,CAACC,WAAN,EAAD,EAAsBC,SAAtB,EAAiC,CAAC,UAAD,CAAjC,CAA1B;AAhBQ,iBAAe,OAAf;AAiBR,QAAMC,OAAO,GAAGJ,oBAAoB,CAACC,KAAK,CAACC,WAAN,EAAD,EAAsBC,SAAtB,EAAiC,CAAC,UAAD,CAAjC,CAApC;AAEA,UAAKE,SAAL,GAAiB,MAAKC,KAAL,GAAa,MAAKC,MAAL,GAAc,MAAKC,OAAL,CAAaC,qBAAb,CAAmCL,OAAO,CAACM,QAA3C,CAA5C;AACA,UAAKC,iBAAL,GAAyB,CAAC,MAAKN,SAAN,CAAzB;AALD;AAMC;;AAtBF;AAAA;AAAA,WA8BC,mBAAO;AACN;;AACA,WAAKA,SAAL,CAAeO,UAAf;;AACA,aAAO,IAAP;AACA;AAlCF;AAAA;AAAA,WAwBC,uBAAkB;AACjB,aAAOC,MAAM,CAACC,MAAP,CAAcf,aAAa,CAACG,WAAd,EAAd,EAA2C;AACjDQ,gBAAQ,EAAE;AADuC,OAA3C,CAAP;AAGA;AA5BF;;AAAA;AAAA,EAA2BX,aAA3B","names":["ToneAudioNode","optionsFromArguments","Split","getDefaults","arguments","options","_splitter","input","output","context","createChannelSplitter","channels","_internalChannels","disconnect","Object","assign"],"sourceRoot":"","sources":["../../../../Tone/component/channel/Split.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}