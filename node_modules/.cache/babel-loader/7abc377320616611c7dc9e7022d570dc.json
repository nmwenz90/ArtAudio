{"ast":null,"code":"import _asyncToGenerator from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/natewamwenze/Documents/personalProjects/musicidea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\";\n\n/**\n * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was\n * enabled by default in version 66.\n */\nexport var createTestAudioWorkletProcessorNoOutputsSupport = function createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) {\n  return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var blob, messageChannel, offlineAudioContext, url, isCallingProcess, audioWorkletNode, oscillator;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(nativeAudioWorkletNodeConstructor === null)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", true);\n\n          case 2:\n            if (!(nativeOfflineAudioContextConstructor === null)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 4:\n            blob = new Blob(['let c,p;class A extends AudioWorkletProcessor{constructor(){super();this.port.onmessage=(e)=>{p=e.data;p.onmessage=()=>{p.postMessage(c);p.close()};this.port.postMessage(0)}}process(){c=1}}registerProcessor(\"a\",A)'], {\n              type: 'application/javascript; charset=utf-8'\n            });\n            messageChannel = new MessageChannel(); // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n\n            offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);\n            url = URL.createObjectURL(blob);\n            isCallingProcess = false;\n            _context.prev = 9;\n            _context.next = 12;\n            return offlineAudioContext.audioWorklet.addModule(url);\n\n          case 12:\n            audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', {\n              numberOfOutputs: 0\n            });\n            oscillator = offlineAudioContext.createOscillator();\n            _context.next = 16;\n            return new Promise(function (resolve) {\n              audioWorkletNode.port.onmessage = function () {\n                return resolve();\n              };\n\n              audioWorkletNode.port.postMessage(messageChannel.port2, [messageChannel.port2]);\n            });\n\n          case 16:\n            audioWorkletNode.port.onmessage = function () {\n              return isCallingProcess = true;\n            };\n\n            oscillator.connect(audioWorkletNode);\n            oscillator.start(0);\n            _context.next = 21;\n            return offlineAudioContext.startRendering();\n\n          case 21:\n            _context.next = 23;\n            return new Promise(function (resolve) {\n              messageChannel.port1.onmessage = function (_ref2) {\n                var data = _ref2.data;\n                return resolve(data === 1);\n              };\n\n              messageChannel.port1.postMessage(0);\n            });\n\n          case 23:\n            isCallingProcess = _context.sent;\n            _context.next = 28;\n            break;\n\n          case 26:\n            _context.prev = 26;\n            _context.t0 = _context[\"catch\"](9);\n\n          case 28:\n            _context.prev = 28;\n            messageChannel.port1.close();\n            URL.revokeObjectURL(url);\n            return _context.finish(28);\n\n          case 32:\n            return _context.abrupt(\"return\", isCallingProcess);\n\n          case 33:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[9, 26, 28, 32]]);\n  }));\n};","map":{"version":3,"mappings":";;;AAEA;;;;AAIA,OAAO,IAAMA,+CAA+C,GAAsD,SAArGA,+CAAqG,CAC9GC,iCAD8G,EAE9GC,oCAF8G,EAG9G;AACA,+EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAECD,iCAAiC,KAAK,IAFvC;AAAA;AAAA;AAAA;;AAAA,6CAGQ,IAHR;;AAAA;AAAA,kBAMCC,oCAAoC,KAAK,IAN1C;AAAA;AAAA;AAAA;;AAAA,6CAOQ,KAPR;;AAAA;AAUGC,gBAVH,GAUU,IAAIC,IAAJ,CACT,CACI,uNADJ,CADS,EAIT;AACIC,kBAAI,EAAE;AADV,aAJS,CAVV;AAkBGC,0BAlBH,GAkBoB,IAAIC,cAAJ,EAlBpB,EAmBH;;AACMC,+BApBH,GAoByB,IAAIN,oCAAJ,CAAyC,CAAzC,EAA4C,GAA5C,EAAiD,KAAjD,CApBzB;AAqBGO,eArBH,GAqBSC,GAAG,CAACC,eAAJ,CAAoBR,IAApB,CArBT;AAuBCS,4BAvBD,GAuBoB,KAvBpB;AAAA;AAAA;AAAA,mBA0BOJ,mBAAmB,CAACK,YAApB,CAAiCC,SAAjC,CAA2CL,GAA3C,CA1BP;;AAAA;AA4BOM,4BA5BP,GA4B0B,IAAId,iCAAJ,CAAsCO,mBAAtC,EAA2D,GAA3D,EAAgE;AAAEQ,6BAAe,EAAE;AAAnB,aAAhE,CA5B1B;AA6BOC,sBA7BP,GA6BoBT,mBAAmB,CAACU,gBAApB,EA7BpB;AAAA;AAAA,mBA+BO,IAAIC,OAAJ,CAAkB,UAACC,OAAD,EAAY;AAChCL,8BAAgB,CAACM,IAAjB,CAAsBC,SAAtB,GAAkC;AAAA,uBAAMF,OAAO,EAAb;AAAA,eAAlC;;AACAL,8BAAgB,CAACM,IAAjB,CAAsBE,WAAtB,CAAkCjB,cAAc,CAACkB,KAAjD,EAAwD,CAAClB,cAAc,CAACkB,KAAhB,CAAxD;AACH,aAHK,CA/BP;;AAAA;AAoCCT,4BAAgB,CAACM,IAAjB,CAAsBC,SAAtB,GAAkC;AAAA,qBAAOV,gBAAgB,GAAG,IAA1B;AAAA,aAAlC;;AAEAK,sBAAU,CAACQ,OAAX,CAAmBV,gBAAnB;AACAE,sBAAU,CAACS,KAAX,CAAiB,CAAjB;AAvCD;AAAA,mBAyCOlB,mBAAmB,CAACmB,cAApB,EAzCP;;AAAA;AAAA;AAAA,mBA2C0B,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAY;AAC7Cd,4BAAc,CAACsB,KAAf,CAAqBN,SAArB,GAAiC;AAAA,oBAAGO,IAAH,SAAGA,IAAH;AAAA,uBAAcT,OAAO,CAACS,IAAI,KAAK,CAAV,CAArB;AAAA,eAAjC;;AACAvB,4BAAc,CAACsB,KAAf,CAAqBL,WAArB,CAAiC,CAAjC;AACH,aAHwB,CA3C1B;;AAAA;AA2CCX,4BA3CD;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkDCN,0BAAc,CAACsB,KAAf,CAAqBE,KAArB;AACApB,eAAG,CAACqB,eAAJ,CAAoBtB,GAApB;AAnDD;;AAAA;AAAA,6CAsDIG,gBAtDJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAwDH,CA5DM","names":["createTestAudioWorkletProcessorNoOutputsSupport","nativeAudioWorkletNodeConstructor","nativeOfflineAudioContextConstructor","blob","Blob","type","messageChannel","MessageChannel","offlineAudioContext","url","URL","createObjectURL","isCallingProcess","audioWorklet","addModule","audioWorkletNode","numberOfOutputs","oscillator","createOscillator","Promise","resolve","port","onmessage","postMessage","port2","connect","start","startRendering","port1","data","close","revokeObjectURL"],"sourceRoot":"","sources":["../../../src/factories/test-audio-worklet-processor-no-outputs-support.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}