{"ast":null,"code":"export var createWrapChannelMergerNode = function createWrapChannelMergerNode(createInvalidStateError, monitorConnections) {\n  return function (nativeContext, channelMergerNode) {\n    // Bug #15: Safari does not return the default properties.\n    channelMergerNode.channelCount = 1;\n    channelMergerNode.channelCountMode = 'explicit'; // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n\n    Object.defineProperty(channelMergerNode, 'channelCount', {\n      get: function get() {\n        return 1;\n      },\n      set: function set() {\n        throw createInvalidStateError();\n      }\n    });\n    Object.defineProperty(channelMergerNode, 'channelCountMode', {\n      get: function get() {\n        return 'explicit';\n      },\n      set: function set() {\n        throw createInvalidStateError();\n      }\n    }); // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n\n    var audioBufferSourceNode = nativeContext.createBufferSource();\n\n    var whenConnected = function whenConnected() {\n      var length = channelMergerNode.numberOfInputs;\n\n      for (var i = 0; i < length; i += 1) {\n        audioBufferSourceNode.connect(channelMergerNode, 0, i);\n      }\n    };\n\n    var whenDisconnected = function whenDisconnected() {\n      return audioBufferSourceNode.disconnect(channelMergerNode);\n    };\n\n    monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,2BAA2B,GAAkC,SAA7DA,2BAA6D,CAACC,uBAAD,EAA0BC,kBAA1B,EAAgD;AACtH,SAAO,UAACC,aAAD,EAAgBC,iBAAhB,EAAqC;AACxC;AACAA,qBAAiB,CAACC,YAAlB,GAAiC,CAAjC;AACAD,qBAAiB,CAACE,gBAAlB,GAAqC,UAArC,CAHwC,CAKxC;;AACAC,UAAM,CAACC,cAAP,CAAsBJ,iBAAtB,EAAyC,cAAzC,EAAyD;AACrDK,SAAG,EAAE;AAAA,eAAM,CAAN;AAAA,OADgD;AAErDC,SAAG,EAAE,eAAK;AACN,cAAMT,uBAAuB,EAA7B;AACH;AAJoD,KAAzD;AAOAM,UAAM,CAACC,cAAP,CAAsBJ,iBAAtB,EAAyC,kBAAzC,EAA6D;AACzDK,SAAG,EAAE;AAAA,eAAM,UAAN;AAAA,OADoD;AAEzDC,SAAG,EAAE,eAAK;AACN,cAAMT,uBAAuB,EAA7B;AACH;AAJwD,KAA7D,EAbwC,CAoBxC;;AACA,QAAMU,qBAAqB,GAAGR,aAAa,CAACS,kBAAd,EAA9B;;AAEA,QAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAK;AACvB,UAAMC,MAAM,GAAGV,iBAAiB,CAACW,cAAjC;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,IAAI,CAAjC,EAAoC;AAChCL,6BAAqB,CAACM,OAAtB,CAA8Bb,iBAA9B,EAAiD,CAAjD,EAAoDY,CAApD;AACH;AACJ,KAND;;AAOA,QAAME,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,aAAMP,qBAAqB,CAACQ,UAAtB,CAAiCf,iBAAjC,CAAN;AAAA,KAAzB;;AAEAF,sBAAkB,CAACE,iBAAD,EAAoBS,aAApB,EAAmCK,gBAAnC,CAAlB;AACH,GAjCD;AAkCH,CAnCM","names":["createWrapChannelMergerNode","createInvalidStateError","monitorConnections","nativeContext","channelMergerNode","channelCount","channelCountMode","Object","defineProperty","get","set","audioBufferSourceNode","createBufferSource","whenConnected","length","numberOfInputs","i","connect","whenDisconnected","disconnect"],"sourceRoot":"","sources":["../../../src/factories/wrap-channel-merger-node.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}